#include <zapp.hpp>#pragma hdrstop(".PCH")#include <toolhelp.h>#include <assert.h>#include "astro.h"#include "useri.h"#include "dataext.h"#include "asfrmdlg.hpp"#include "paths.hpp"#include "filelst.hpp"#include "archive.hpp"#include "flistarc.hpp"extern void zYield();static int done;HTASK theTask;BOOL __export CALLBACK notify(WORD wID, DWORD dwData) if ( wID == NFY_EXITTASK )     done = 1;    NotifyUnRegister(theTask);    return( FALSE );     else    return( FALSE );void waitForTask(UINT hInst ) TASKENTRY te; memset( &te, 0, sizeof(TASKENTRY ) ); te.dwSize = sizeof(TASKENTRY ); TaskFirst(&te); if ( te.hInst != hInst )     do        if ( !TaskNext(&te) )|  return;        while( te.hInst != hInst );     theTask = te.hTask; NotifyRegister(te.hTask, &notify, NF_TASKSWITCH); done = 0; while ( !done )       Yield();FileListArchiver::FileListArchiver(FileListArray *pf, int tp, int arc) pFla = pf; type = tp; data = new ArchiveData(arc);FileListArchiver::~FileListArchiver() delete data;int FileListArchiver::setup(zWindow *pPar)  data->getFromIni();  ArchiveDataDlgf *add = new ArchiveDataDlgf(pPar, data );  if (!add->completed() )      delete add;     return( 0 );       else      add->getData();     delete add;     data->saveToIni();     return( 1 );     int FileListArchiver::archive(zWindow *pPar) char buf[150]; if ( !setup( pPar ) )    return( 0 ); if ( makeArchiveList() == NULL )    return( 0 ); sprintf( buf, (char *) data->getCommand(),| (char far *)data->getPath(), (char far *)name ); UINT e = WinExec( buf, SW_SHOW ); if ( e < 32 )     zMessage *mp = new zMessage(pPar, "Can't Run Program!", "Error" );    delete mp;    return( 0 );     waitForTask(e); if ( data->isDel() )    pFla->killSelectedFiles(pPar, type); unlink(name); return( 1 );int FileListArchiver::deArchive(zWindow *pPar) char buf[150]; if ( !setup( pPar ) )    return( 0 ); sprintf( buf, (char far *) data->getCommand(),||  (char far *)data->getPath(), set_path("", USER_F) ); UINT e = WinExec( buf, SW_SHOW ); if ( e < 32 )     zMessage *mp = new zMessage(pPar, "Can't Run Program!", "Error" );    delete mp;    return( 0 );     waitForTask(e); pFla->scanFiles(); return( 1 );