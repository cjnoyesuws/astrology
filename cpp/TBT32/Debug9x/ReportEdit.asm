; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\ReportEdit.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EM@PAAEPIAN@select?5?$CK?5from?5ReportText?5where?5T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNAIMFAK@Can?8t?5Find?5Symbol?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@JINOLIGM@Bad?5Symbol?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0RTFFuncs@@QAE@PAVCDialog@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cut@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Paste@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Modified@RTFFuncs@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1RTFFuncs@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRTFFuncs@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?value@CSymbol@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbolAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbolAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CReportEdit@@QAE@PAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReportEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWSpell@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTabctrlctrl1@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWSpell@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabctrlctrl1@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CReportEdit@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOK@CReportEdit@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSelchangeTextid@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnChangeIndex@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaste@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCut@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCopy@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClear@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@CReportEdit@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CReportEdit@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnChangeText@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUndo@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateText@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnBold@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnHead@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItal@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUnbold@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUnheading@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUnitalic@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Find@CReportEdit@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CReportEdit@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSpell@CReportEdit@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R0PAVCDaoException@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CReportEdit@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CReportEdit@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTabctrlctrl1@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWSpell@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CReportEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7RTFFuncs@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?OnSelchangeTextid@CReportEdit@@IAEXXZ		; CReportEdit::OnSelchangeTextid
PUBLIC	?OnChangeIndex@CReportEdit@@IAEXXZ		; CReportEdit::OnChangeIndex
PUBLIC	?OnPaste@CReportEdit@@IAEXXZ			; CReportEdit::OnPaste
PUBLIC	?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdatePaste
PUBLIC	?OnCut@CReportEdit@@IAEXXZ			; CReportEdit::OnCut
PUBLIC	?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateCut
PUBLIC	?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateCopy
PUBLIC	?OnCopy@CReportEdit@@IAEXXZ			; CReportEdit::OnCopy
PUBLIC	?OnClear@CReportEdit@@IAEXXZ			; CReportEdit::OnClear
PUBLIC	?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateClear
PUBLIC	?OnChangeText@CReportEdit@@IAEXXZ		; CReportEdit::OnChangeText
PUBLIC	?OnUndo@CReportEdit@@IAEXXZ			; CReportEdit::OnUndo
PUBLIC	?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateUndo
PUBLIC	?OnUpdateText@CReportEdit@@IAEXXZ		; CReportEdit::OnUpdateText
PUBLIC	?OnBold@CReportEdit@@IAEXXZ			; CReportEdit::OnBold
PUBLIC	?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateBold
PUBLIC	?OnHead@CReportEdit@@IAEXXZ			; CReportEdit::OnHead
PUBLIC	?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateHead
PUBLIC	?OnItal@CReportEdit@@IAEXXZ			; CReportEdit::OnItal
PUBLIC	?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateItal
PUBLIC	?OnUnbold@CReportEdit@@IAEXXZ			; CReportEdit::OnUnbold
PUBLIC	?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateUnbold
PUBLIC	?OnUnheading@CReportEdit@@IAEXXZ		; CReportEdit::OnUnheading
PUBLIC	?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z ; CReportEdit::OnUpdateUnheading
PUBLIC	?OnUnitalic@CReportEdit@@IAEXXZ			; CReportEdit::OnUnitalic
PUBLIC	?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z ; CReportEdit::OnUpdateUnitalic
PUBLIC	?OnSpell@CReportEdit@@IAEXXZ			; CReportEdit::OnSpell
PUBLIC	?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z	; CReportEdit::OnUpdateSpell
PUBLIC	?_messageEntries@CReportEdit@@0QBUAFX_MSGMAP_ENTRY@@B ; CReportEdit::_messageEntries
PUBLIC	?messageMap@CReportEdit@@1UAFX_MSGMAP@@B	; CReportEdit::messageMap
EXTRN	?messageMap@CDialog@@1UAFX_MSGMAP@@B:QWORD	; CDialog::messageMap
_DATA	SEGMENT
_THIS_FILE DB	'c:\astrow32dev\tbt32\reportedit.cpp', 00H
_DATA	ENDS
;	COMDAT ?_messageEntries@CReportEdit@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CReportEdit@@0QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; CReportEdit::_messageEntries
	DD	01H
	DD	03f0H
	DD	03f0H
	DD	035H
	DD	FLAT:?OnSelchangeTextid@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0300H
	DD	03f1H
	DD	03f1H
	DD	035H
	DD	FLAT:?OnChangeIndex@CReportEdit@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0800bH
	DD	0800bH
	DD	035H
	DD	FLAT:?OnPaste@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800bH
	DD	0800bH
	DD	03dH
	DD	FLAT:?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800cH
	DD	0800cH
	DD	035H
	DD	FLAT:?OnCut@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800cH
	DD	0800cH
	DD	03dH
	DD	FLAT:?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0800aH
	DD	0800aH
	DD	03dH
	DD	FLAT:?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800aH
	DD	0800aH
	DD	035H
	DD	FLAT:?OnCopy@CReportEdit@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0800dH
	DD	0800dH
	DD	035H
	DD	FLAT:?OnClear@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800dH
	DD	0800dH
	DD	03dH
	DD	FLAT:?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0300H
	DD	03ecH
	DD	03ecH
	DD	035H
	DD	FLAT:?OnChangeText@CReportEdit@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08010H
	DD	08010H
	DD	035H
	DD	FLAT:?OnUndo@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08010H
	DD	08010H
	DD	03dH
	DD	FLAT:?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0400H
	DD	03ecH
	DD	03ecH
	DD	035H
	DD	FLAT:?OnUpdateText@CReportEdit@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08012H
	DD	08012H
	DD	035H
	DD	FLAT:?OnBold@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08012H
	DD	08012H
	DD	03dH
	DD	FLAT:?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08014H
	DD	08014H
	DD	035H
	DD	FLAT:?OnHead@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08014H
	DD	08014H
	DD	03dH
	DD	FLAT:?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08013H
	DD	08013H
	DD	035H
	DD	FLAT:?OnItal@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08013H
	DD	08013H
	DD	03dH
	DD	FLAT:?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08016H
	DD	08016H
	DD	035H
	DD	FLAT:?OnUnbold@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08016H
	DD	08016H
	DD	03dH
	DD	FLAT:?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08015H
	DD	08015H
	DD	035H
	DD	FLAT:?OnUnheading@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08015H
	DD	08015H
	DD	03dH
	DD	FLAT:?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08017H
	DD	08017H
	DD	035H
	DD	FLAT:?OnUnitalic@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08017H
	DD	08017H
	DD	03dH
	DD	FLAT:?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08018H
	DD	08018H
	DD	035H
	DD	FLAT:?OnSpell@CReportEdit@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08018H
	DD	08018H
	DD	03dH
	DD	FLAT:?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CReportEdit@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CReportEdit@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CDialog@@1UAFX_MSGMAP@@B ; CReportEdit::messageMap
	DD	FLAT:?_messageEntries@CReportEdit@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	??1CSymbol@@QAE@XZ				; CSymbol::~CSymbol
PUBLIC	??_ECSymbol@@QAEPAXI@Z				; CSymbol::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCcsu /ZI
rtc$TMZ	ENDS
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECSymbol@@QAEPAXI@Z PROC NEAR			; CSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93632
	push	OFFSET FLAT:??1CSymbol@@QAE@XZ		; CSymbol::~CSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93633
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93633:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93631
$L93632:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93635
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93635:
	mov	eax, DWORD PTR _this$[ebp]
$L93631:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECSymbol@@QAEPAXI@Z ENDP				; CSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSymbol@@6B@				; CSymbol::`vftable'
EXTRN	?Read@CSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CSymbol::Read
;	COMDAT ??_7CSymbol@@6B@
; File c:\astrow32dev\tbt32\symbol.hpp
CONST	SEGMENT
??_7CSymbol@@6B@ DD FLAT:?Read@CSymbol@@UAEHPAU_iobuf@@@Z ; CSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSymbol@@QAE@XZ PROC NEAR				; CSymbol::~CSymbol, COMDAT
; _this$ = ecx

; 14   : 	~CSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CSymbol@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSymbol@@QAE@XZ ENDP					; CSymbol::~CSymbol
_TEXT	ENDS
PUBLIC	??1CRSymbol@@QAE@XZ				; CRSymbol::~CRSymbol
PUBLIC	??_ECRSymbol@@QAEPAXI@Z				; CRSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECRSymbol@@QAEPAXI@Z PROC NEAR			; CRSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93683
	push	OFFSET FLAT:??1CRSymbol@@QAE@XZ		; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93684
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93684:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93682
$L93683:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRSymbol@@QAE@XZ			; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93686
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93686:
	mov	eax, DWORD PTR _this$[ebp]
$L93682:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECRSymbol@@QAEPAXI@Z ENDP				; CRSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CRSymbol@@6B@				; CRSymbol::`vftable'
EXTRN	?Read@CRSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CRSymbol::Read
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT
??_7CRSymbol@@6B@ DD FLAT:?Read@CRSymbol@@UAEHPAU_iobuf@@@Z ; CRSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRSymbol@@QAE@XZ PROC NEAR				; CRSymbol::~CRSymbol, COMDAT
; _this$ = ecx

; 28   : 	~CRSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRSymbol@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRSymbol@@QAE@XZ ENDP				; CRSymbol::~CRSymbol
_TEXT	ENDS
PUBLIC	??1CATextType@@QAE@XZ				; CATextType::~CATextType
PUBLIC	??_ECATextType@@QAEPAXI@Z			; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECATextType@@QAEPAXI@Z PROC NEAR			; CATextType::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93806
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93807
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93807:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93805
$L93806:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93809
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93809:
	mov	eax, DWORD PTR _this$[ebp]
$L93805:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECATextType@@QAEPAXI@Z ENDP				; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CATextType@@QAE@XZ PROC NEAR				; CATextType::~CATextType, COMDAT
; _this$ = ecx

; 16   :     ~CATextType() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextType@@QAE@XZ ENDP				; CATextType::~CATextType
_TEXT	ENDS
PUBLIC	??0CWSpell@@QAE@XZ				; CWSpell::CWSpell
PUBLIC	??1CWSpell@@UAE@XZ				; CWSpell::~CWSpell
PUBLIC	??1CDReportText@@UAE@XZ				; CDReportText::~CDReportText
PUBLIC	??0RTFFuncs@@QAE@PAVCDialog@@@Z			; RTFFuncs::RTFFuncs
PUBLIC	??0CTabctrlctrl1@@QAE@XZ			; CTabctrlctrl1::CTabctrlctrl1
PUBLIC	??1CTabctrlctrl1@@UAE@XZ			; CTabctrlctrl1::~CTabctrlctrl1
PUBLIC	??0CReportEdit@@QAE@PAVCWnd@@@Z			; CReportEdit::CReportEdit
PUBLIC	?DestroyWindow@CReportEdit@@UAEHXZ		; CReportEdit::DestroyWindow
PUBLIC	?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z ; CReportEdit::DoDataExchange
PUBLIC	?OnCancel@CReportEdit@@MAEXXZ			; CReportEdit::OnCancel
PUBLIC	?OnOK@CReportEdit@@MAEXXZ			; CReportEdit::OnOK
PUBLIC	?OnInitDialog@CReportEdit@@MAEHXZ		; CReportEdit::OnInitDialog
PUBLIC	?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ ; CReportEdit::GetMessageMap
PUBLIC	??_7CReportEdit@@6B@				; CReportEdit::`vftable'
PUBLIC	??_GCReportEdit@@UAEPAXI@Z			; CReportEdit::`scalar deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA ; `CReportEdit::CReportEdit'::`2'::__LINE__Var
PUBLIC	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	??0CDReportText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDReportText::CDReportText
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??_ECReportEdit@@UAEPAXI@Z:NEAR			; CReportEdit::`vector deleting destructor'
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:NEAR	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:NEAR		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:NEAR		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:NEAR	; CDialog::OnSetFont
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
EXTRN	?AssertValid@CDialog@@UBEXXZ:NEAR		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:NEAR	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:NEAR ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:NEAR		; CDialog::CheckAutoCenter
EXTRN	??2@YAPAXIPBDH@Z:NEAR				; operator new
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CDialog::SetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:NEAR		; CDialog::PreInitDialog
EXTRN	??3@YAXPAXPBDH@Z:NEAR				; operator delete
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\reportedit.cpp
xdata$x	SEGMENT
__unwindtable$??0CReportEdit@@QAE@PAVCWnd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$7
__ehfuncinfo$??0CReportEdit@@QAE@PAVCWnd@@@Z DD 019930520H
	DD	08H
	DD	FLAT:__unwindtable$??0CReportEdit@@QAE@PAVCWnd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CReportEdit@@6B@
CONST	SEGMENT
??_7CReportEdit@@6B@ DD FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ ; CReportEdit::`vftable'
	DD	FLAT:??_ECReportEdit@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CReportEdit@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CReportEdit@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CReportEdit@@MAEXXZ
	DD	FLAT:?OnCancel@CReportEdit@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA DD 018H ; `CReportEdit::CReportEdit'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ??0CReportEdit@@QAE@PAVCWnd@@@Z
_TEXT	SEGMENT
tv164 = -244						; size = 4
$T94425 = -236						; size = 4
$T94426 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CReportEdit@@QAE@PAVCWnd@@@Z PROC NEAR		; CReportEdit::CReportEdit, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CReportEdit@@QAE@PAVCWnd@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pParent$[ebp]
	push	eax
	push	137					; 00000089H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDialog@@QAE@IPAVCWnd@@@Z		; CDialog::CDialog
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CReportEdit@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0CWSpell@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??0CDReportText@@QAE@PAVCDaoDatabase@@@Z ; CDReportText::CDReportText
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0CTabctrlctrl1@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 26   : 	//{{AFX_DATA_INIT(CReportEdit)
; 27   : 	m_Index = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 28   : 	m_Text = _T("");

	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 29   : 	m_TextId = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], -1

; 30   : 	//}}AFX_DATA_INIT
; 31   :    pFuncs = new RTFFuncs(this);

	mov	eax, DWORD PTR ?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	16					; 00000010H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T94426[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T94426[ebp], 0
	je	SHORT $L94427
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T94426[ebp]
	call	??0RTFFuncs@@QAE@PAVCDialog@@@Z		; RTFFuncs::RTFFuncs
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $L94428
$L94427:
	mov	DWORD PTR tv164[ebp], 0
$L94428:
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T94425[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T94425[ebp]
	mov	DWORD PTR [eax+388], ecx

; 32   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CDReportText@@UAE@XZ
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1CTabctrlctrl1@@UAE@XZ
__unwindfunclet$??0CReportEdit@@QAE@PAVCWnd@@@Z$7:
	mov	eax, DWORD PTR ?__LINE__Var@?1???0CReportEdit@@QAE@PAVCWnd@@@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T94426[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$??0CReportEdit@@QAE@PAVCWnd@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CReportEdit@@QAE@PAVCWnd@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CReportEdit@@QAE@PAVCWnd@@@Z ENDP			; CReportEdit::CReportEdit
PUBLIC	??_7RTFFuncs@@6B@				; RTFFuncs::`vftable'
PUBLIC	??_GRTFFuncs@@UAEPAXI@Z				; RTFFuncs::`scalar deleting destructor'
EXTRN	??_ERTFFuncs@@UAEPAXI@Z:NEAR			; RTFFuncs::`vector deleting destructor'
;	COMDAT ??_7RTFFuncs@@6B@
; File c:\astrow32dev\tbt32\rtffuncs.h
CONST	SEGMENT
??_7RTFFuncs@@6B@ DD FLAT:??_ERTFFuncs@@UAEPAXI@Z	; RTFFuncs::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0RTFFuncs@@QAE@PAVCDialog@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pDlg$ = 8						; size = 4
??0RTFFuncs@@QAE@PAVCDialog@@@Z PROC NEAR		; RTFFuncs::RTFFuncs, COMDAT
; _this$ = ecx

; 21   :    RTFFuncs(CDialog *pDlg) { pDialog=pDlg; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7RTFFuncs@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pDlg$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RTFFuncs@@QAE@PAVCDialog@@@Z ENDP			; RTFFuncs::RTFFuncs
_TEXT	ENDS
PUBLIC	??1RTFFuncs@@UAE@XZ				; RTFFuncs::~RTFFuncs
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GRTFFuncs@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRTFFuncs@@UAEPAXI@Z PROC NEAR			; RTFFuncs::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RTFFuncs@@UAE@XZ			; RTFFuncs::~RTFFuncs
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93365
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93365:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRTFFuncs@@UAEPAXI@Z ENDP				; RTFFuncs::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1RTFFuncs@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1RTFFuncs@@UAE@XZ PROC NEAR				; RTFFuncs::~RTFFuncs, COMDAT
; _this$ = ecx

; 39   :    virtual ~RTFFuncs() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7RTFFuncs@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RTFFuncs@@UAE@XZ ENDP				; RTFFuncs::~RTFFuncs
_TEXT	ENDS
PUBLIC	??1CReportEdit@@UAE@XZ				; CReportEdit::~CReportEdit
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCReportEdit@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCReportEdit@@UAEPAXI@Z PROC NEAR			; CReportEdit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CReportEdit@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93881
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93881:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCReportEdit@@UAEPAXI@Z ENDP				; CReportEdit::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CWSpell@@6B@				; CWSpell::`vftable'
PUBLIC	??_GCWSpell@@UAEPAXI@Z				; CWSpell::`scalar deleting destructor'
PUBLIC	?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CWSpell::Create
EXTRN	??_ECWSpell@@UAEPAXI@Z:NEAR			; CWSpell::`vector deleting destructor'
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:NEAR			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CWnd::Dump
EXTRN	?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWSpell::GetRuntimeClass
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
;	COMDAT ??_7CWSpell@@6B@
CONST	SEGMENT
??_7CWSpell@@6B@ DD FLAT:?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ ; CWSpell::`vftable'
	DD	FLAT:??_ECWSpell@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CWSpell@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CWSpell@@QAE@XZ PROC NEAR				; CWSpell::CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWnd@@QAE@XZ				; CWnd::CWnd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CWSpell@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWSpell@@QAE@XZ ENDP					; CWSpell::CWSpell
_TEXT	ENDS
PUBLIC	?GetClsid@CWSpell@@QAEABU_GUID@@XZ		; CWSpell::GetClsid
EXTRN	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPAG@Z:NEAR ; CWnd::CreateControl
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\wspell.h
;	COMDAT ?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC NEAR ; CWSpell::Create, COMDAT
; _this$ = ecx

; 31   : 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pParentWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszWindowName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClsid@CWSpell@@QAEABU_GUID@@XZ	; CWSpell::GetClsid
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPAG@Z ; CWnd::CreateControl
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CWSpell::Create
_TEXT	ENDS
PUBLIC	?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B ; `CWSpell::GetClsid'::`2'::clsid
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B DD 0245338c3H ; `CWSpell::GetClsid'::`2'::clsid
	DW	0bca3H
	DW	04a2cH
	DB	0a7H
	DB	0b7H
	DB	053H
	DB	034H
	DB	059H
	DB	099H
	DB	0a8H
	DB	0e8H
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetClsid@CWSpell@@QAEABU_GUID@@XZ PROC NEAR		; CWSpell::GetClsid, COMDAT
; _this$ = ecx

; 21   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 22   : 		static CLSID const clsid
; 23   : 			= { 0x245338c3, 0xbca3, 0x4a2c, { 0xa7, 0xb7, 0x53, 0x34, 0x59, 0x99, 0xa8, 0xe8 } };
; 24   : 		return clsid;

	mov	eax, OFFSET FLAT:?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B ; `CWSpell::GetClsid'::`2'::clsid

; 25   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClsid@CWSpell@@QAEABU_GUID@@XZ ENDP			; CWSpell::GetClsid
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CWSpell@@UAE@XZ PROC NEAR				; CWSpell::~CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWSpell@@UAE@XZ ENDP					; CWSpell::~CWSpell
_TEXT	ENDS
EXTRN	??1CDaoRecordset@@UAE@XZ:NEAR			; CDaoRecordset::~CDaoRecordset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDReportText@@UAE@XZ PROC NEAR			; CDReportText::~CDReportText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDReportText@@UAE@XZ ENDP				; CDReportText::~CDReportText
_TEXT	ENDS
PUBLIC	?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CTabctrlctrl1::Create
PUBLIC	??_7CTabctrlctrl1@@6B@				; CTabctrlctrl1::`vftable'
PUBLIC	??_GCTabctrlctrl1@@UAEPAXI@Z			; CTabctrlctrl1::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CTabctrlctrl1@@UBEPAUCRuntimeClass@@XZ:NEAR ; CTabctrlctrl1::GetRuntimeClass
EXTRN	??_ECTabctrlctrl1@@UAEPAXI@Z:NEAR		; CTabctrlctrl1::`vector deleting destructor'
;	COMDAT ??_7CTabctrlctrl1@@6B@
CONST	SEGMENT
??_7CTabctrlctrl1@@6B@ DD FLAT:?GetRuntimeClass@CTabctrlctrl1@@UBEPAUCRuntimeClass@@XZ ; CTabctrlctrl1::`vftable'
	DD	FLAT:??_ECTabctrlctrl1@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CTabctrlctrl1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CTabctrlctrl1@@QAE@XZ PROC NEAR			; CTabctrlctrl1::CTabctrlctrl1, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWnd@@QAE@XZ				; CWnd::CWnd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CTabctrlctrl1@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CTabctrlctrl1@@QAE@XZ ENDP				; CTabctrlctrl1::CTabctrlctrl1
_TEXT	ENDS
PUBLIC	?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ	; CTabctrlctrl1::GetClsid
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\tabctrlctrl1.h
;	COMDAT ?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC NEAR ; CTabctrlctrl1::Create, COMDAT
; _this$ = ecx

; 25   : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 26   : 		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 

	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pParentWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszWindowName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ ; CTabctrlctrl1::GetClsid
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPAG@Z ; CWnd::CreateControl

; 27   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@CTabctrlctrl1@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CTabctrlctrl1::Create
_TEXT	ENDS
PUBLIC	?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B ; `CTabctrlctrl1::GetClsid'::`2'::clsid
;	COMDAT ?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B DD 05230206eH ; `CTabctrlctrl1::GetClsid'::`2'::clsid
	DW	03e6aH
	DW	0454cH
	DB	099H
	DB	099H
	DB	0eaH
	DB	0daH
	DB	011H
	DB	0aeH
	DB	04fH
	DB	032H
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ PROC NEAR	; CTabctrlctrl1::GetClsid, COMDAT
; _this$ = ecx

; 17   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 18   : 		static CLSID const clsid
; 19   : 			= { 0x5230206E, 0x3E6A, 0x454C, { 0x99, 0x99, 0xEA, 0xDA, 0x11, 0xAE, 0x4F, 0x32 } };
; 20   : 		return clsid;

	mov	eax, OFFSET FLAT:?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B ; `CTabctrlctrl1::GetClsid'::`2'::clsid

; 21   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ ENDP		; CTabctrlctrl1::GetClsid
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTabctrlctrl1@@UAE@XZ PROC NEAR			; CTabctrlctrl1::~CTabctrlctrl1, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTabctrlctrl1@@UAE@XZ ENDP				; CTabctrlctrl1::~CTabctrlctrl1
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReportEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$5
__ehfuncinfo$??1CReportEdit@@UAE@XZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$??1CReportEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CReportEdit@@UAE@XZ PROC NEAR			; CReportEdit::~CReportEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReportEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1CTabctrlctrl1@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??1CDReportText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReportEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CReportEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CDReportText@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1CReportEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CReportEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CReportEdit@@UAE@XZ ENDP				; CReportEdit::~CReportEdit
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCWSpell@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCWSpell@@UAEPAXI@Z PROC NEAR			; CWSpell::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWSpell@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93898
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93898:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCWSpell@@UAEPAXI@Z ENDP				; CWSpell::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCTabctrlctrl1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCTabctrlctrl1@@UAEPAXI@Z PROC NEAR			; CTabctrlctrl1::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTabctrlctrl1@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93901
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93901:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCTabctrlctrl1@@UAEPAXI@Z ENDP			; CTabctrlctrl1::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?DDX_Text@@YGXPAVCDataExchange@@HAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; DDX_Text
EXTRN	?DDX_CBIndex@@YGXPAVCDataExchange@@HAAH@Z:NEAR	; DDX_CBIndex
EXTRN	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z:NEAR ; DDX_Control
EXTRN	?DDX_Text@@YGXPAVCDataExchange@@HAAH@Z:NEAR	; DDX_Text
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
;	COMDAT ?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CReportEdit::DoDataExchange, COMDAT
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 	CDialog::DoDataExchange(pDX);

	mov	eax, DWORD PTR _pDX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 38   : 	//{{AFX_DATA_MAP(CReportEdit)
; 39   : 	DDX_Text(pDX, IDC_INDEX, m_Index);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	push	1009					; 000003f1H
	mov	ecx, DWORD PTR _pDX$[ebp]
	push	ecx
	call	?DDX_Text@@YGXPAVCDataExchange@@HAAH@Z	; DDX_Text

; 40   : 	DDX_Text(pDX, IDC_TEXT, m_Text);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	push	1004					; 000003ecH
	mov	ecx, DWORD PTR _pDX$[ebp]
	push	ecx
	call	?DDX_Text@@YGXPAVCDataExchange@@HAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; DDX_Text

; 41   : 	DDX_CBIndex(pDX, IDC_TEXTID, m_TextId);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	push	1008					; 000003f0H
	mov	ecx, DWORD PTR _pDX$[ebp]
	push	ecx
	call	?DDX_CBIndex@@YGXPAVCDataExchange@@HAAH@Z ; DDX_CBIndex

; 42   : 	DDX_Control(pDX, IDC_WSPELLCTRL1, m_ctrl);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	push	1023					; 000003ffH
	mov	ecx, DWORD PTR _pDX$[ebp]
	push	ecx
	call	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 43   : 	//}}AFX_DATA_MAP
; 44   : 	DDX_Control(pDX, IDC_TABCTRLCTRL1, m_tabctrl);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	push	eax
	push	1026					; 00000402H
	mov	ecx, DWORD PTR _pDX$[ebp]
	push	ecx
	call	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DoDataExchange@CReportEdit@@MAEXPAVCDataExchange@@@Z ENDP ; CReportEdit::DoDataExchange
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CReportEdit::GetMessageMap, COMDAT
; _this$ = ecx

; 48   : BEGIN_MESSAGE_MAP(CReportEdit, CDialog)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CReportEdit@@1UAFX_MSGMAP@@B ; CReportEdit::messageMap
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CReportEdit@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CReportEdit::GetMessageMap
_TEXT	ENDS
EXTRN	?OnCancel@CDialog@@MAEXXZ:NEAR			; CDialog::OnCancel
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnCancel@CReportEdit@@MAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnCancel@CReportEdit@@MAEXXZ PROC NEAR			; CReportEdit::OnCancel, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	// TODO: Add extra cleanup here
; 87   : 	
; 88   : 	CDialog::OnCancel();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCancel@CDialog@@MAEXXZ		; CDialog::OnCancel

; 89   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnCancel@CReportEdit@@MAEXXZ ENDP			; CReportEdit::OnCancel
_TEXT	ENDS
PUBLIC	?Modified@RTFFuncs@@QAEHH@Z			; RTFFuncs::Modified
PUBLIC	?Save@CReportEdit@@IAEHXZ			; CReportEdit::Save
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
PUBLIC	??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@	; `string'
PUBLIC	??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@ ; `string'
EXTRN	?MessageBoxA@CWnd@@QAEHPBD0I@Z:NEAR		; CWnd::MessageBoxA
EXTRN	?UpdateData@CWnd@@QAEHH@Z:NEAR			; CWnd::UpdateData
EXTRN	?OnOK@CDialog@@MAEXXZ:NEAR			; CDialog::OnOK
;	COMDAT ??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@
CONST	SEGMENT
??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@ DB 'Record is Modified', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@
CONST	SEGMENT
??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@ DB 'Do Y'
	DB	'ou Want to Save This Entry?', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?OnOK@CReportEdit@@MAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnOK@CReportEdit@@MAEXXZ PROC NEAR			; CReportEdit::OnOK, COMDAT
; _this$ = ecx

; 92   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 	// TODO: Add extra validation here
; 94   : 	UpdateData(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateData@CWnd@@QAEHH@Z		; CWnd::UpdateData

; 95   : 	if ( m_TextIdStr.GetLength() > 0 ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jle	SHORT $L94040

; 96   : 		if ( pFuncs->Modified(IDC_TEXT) ) {

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Modified@RTFFuncs@@QAEHH@Z		; RTFFuncs::Modified
	test	eax, eax
	je	SHORT $L94040

; 97   : 		   if ( MessageBox(_T("Do You Want to Save This Entry?"), _T("Record is Modified"), MB_ICONQUESTION|MB_YESNO ) == IDYES )

	push	36					; 00000024H
	push	OFFSET FLAT:??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@
	push	OFFSET FLAT:??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MessageBoxA@CWnd@@QAEHPBD0I@Z		; CWnd::MessageBoxA
	cmp	eax, 6
	jne	SHORT $L94040

; 98   : 			   Save();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@CReportEdit@@IAEHXZ		; CReportEdit::Save
$L94040:

; 99   : 			}
; 100  : 	}
; 101  : 	CDialog::OnOK();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnOK@CDialog@@MAEXXZ			; CDialog::OnOK

; 102  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnOK@CReportEdit@@MAEXXZ ENDP				; CReportEdit::OnOK
_TEXT	ENDS
PUBLIC	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z	; RTFFuncs::GetCtrl
EXTRN	?GetModify@CRichEditCtrl@@QBEHXZ:NEAR		; CRichEditCtrl::GetModify
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?Modified@RTFFuncs@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?Modified@RTFFuncs@@QAEHH@Z PROC NEAR			; RTFFuncs::Modified, COMDAT
; _this$ = ecx

; 36   :    BOOL Modified(int id) { return (GetCtrl(id)->GetModify() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ; RTFFuncs::GetCtrl
	mov	ecx, eax
	call	?GetModify@CRichEditCtrl@@QBEHXZ	; CRichEditCtrl::GetModify
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Modified@RTFFuncs@@QAEHH@Z ENDP			; RTFFuncs::Modified
_TEXT	ENDS
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:NEAR		; CWnd::GetDlgItem
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z PROC NEAR	; RTFFuncs::GetCtrl, COMDAT
; _this$ = ecx

; 16   :    CRichEditCtrl *GetCtrl(int id) { return ((CRichEditCtrl *)pDialog->GetDlgItem(id));}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?GetDlgItem@CWnd@@QBEPAV1@H@Z		; CWnd::GetDlgItem
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ENDP	; RTFFuncs::GetCtrl
_TEXT	ENDS
PUBLIC	?Find@CReportEdit@@IAEHXZ			; CReportEdit::Find
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
EXTRN	?GetCurSel@CComboBox@@QBEHXZ:NEAR		; CComboBox::GetCurSel
EXTRN	?GetLBText@CComboBox@@QBEXHAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CComboBox::GetLBText
EXTRN	?SelectString@CComboBox@@QAEHHPBD@Z:NEAR	; CComboBox::SelectString
EXTRN	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CWnd::GetWindowTextA
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
;	COMDAT ?OnSelchangeTextid@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_sel$ = -32						; size = 4
_pbox$ = -20						; size = 4
_this$ = -8						; size = 4
?OnSelchangeTextid@CReportEdit@@IAEXXZ PROC NEAR	; CReportEdit::OnSelchangeTextid, COMDAT
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 	// TODO: Add your control notification handler code here
; 107  : 	if ( m_TextIdStr.GetLength() > 0 ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jle	SHORT $L94048

; 108  : 		if ( pFuncs->Modified(IDC_TEXT) ) {

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Modified@RTFFuncs@@QAEHH@Z		; RTFFuncs::Modified
	test	eax, eax
	je	SHORT $L94048

; 109  : 		   if ( MessageBox(_T("Do You Want to Save This Entry?"), _T("Record is Modified"), MB_ICONQUESTION|MB_YESNO ) == IDYES )

	push	36					; 00000024H
	push	OFFSET FLAT:??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@
	push	OFFSET FLAT:??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MessageBoxA@CWnd@@QAEHPBD0I@Z		; CWnd::MessageBoxA
	cmp	eax, 6
	jne	SHORT $L94048

; 110  : 			   Save();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@CReportEdit@@IAEHXZ		; CReportEdit::Save
$L94048:

; 111  : 			}
; 112  : 	}
; 113  : 	CComboBox *pbox = (CComboBox *)GetDlgItem(IDC_TEXTID);

	push	1008					; 000003f0H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDlgItem@CWnd@@QBEPAV1@H@Z		; CWnd::GetDlgItem
	mov	DWORD PTR _pbox$[ebp], eax

; 114  : 	int sel = pbox->GetCurSel();

	mov	ecx, DWORD PTR _pbox$[ebp]
	call	?GetCurSel@CComboBox@@QBEHXZ		; CComboBox::GetCurSel
	mov	DWORD PTR _sel$[ebp], eax

; 115  :     if ( sel != CB_ERR )

	cmp	DWORD PTR _sel$[ebp], -1
	je	SHORT $L94054

; 116  : 		pbox->GetLBText(sel,m_TextIdStr);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _sel$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pbox$[ebp]
	call	?GetLBText@CComboBox@@QBEXHAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CComboBox::GetLBText

; 117  : 	else

	jmp	SHORT $L94055
$L94054:

; 118  : 	    pbox->GetWindowText(m_TextIdStr);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 376				; 00000178H
	push	eax
	mov	ecx, DWORD PTR _pbox$[ebp]
	call	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA
$L94055:

; 119  : 	m_Index = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 120  : 	UpdateData(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateData@CWnd@@QAEHH@Z		; CWnd::UpdateData

; 121  : 	pbox->SelectString(0,m_TextIdStr);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	push	0
	mov	ecx, DWORD PTR _pbox$[ebp]
	call	?SelectString@CComboBox@@QAEHHPBD@Z	; CComboBox::SelectString

; 122  :     Find();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CReportEdit@@IAEHXZ		; CReportEdit::Find

; 123  :     
; 124  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnSelchangeTextid@CReportEdit@@IAEXXZ ENDP		; CReportEdit::OnSelchangeTextid
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnChangeIndex@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnChangeIndex@CReportEdit@@IAEXXZ PROC NEAR		; CReportEdit::OnChangeIndex, COMDAT
; _this$ = ecx

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 	// TODO: If this is a RICHEDIT control, the control will not
; 129  : 	// send this notification unless you override the CDialog::OnInitDialog()
; 130  : 	// function and call CRichEditCtrl().SetEventMask()
; 131  : 	// with the ENM_CHANGE flag ORed into the mask.
; 132  : 	
; 133  : 	// TODO: Add your control notification handler code here
; 134  :     if ( m_TextIdStr.GetLength() > 0 ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jle	SHORT $L94058

; 135  : 		if ( pFuncs->Modified(IDC_TEXT) ) {

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Modified@RTFFuncs@@QAEHH@Z		; RTFFuncs::Modified
	test	eax, eax
	je	SHORT $L94060

; 136  : 		   if ( MessageBox(_T("Do You Want to Save This Entry?"), _T("Record is Modified"), MB_ICONQUESTION|MB_YESNO ) == IDYES )

	push	36					; 00000024H
	push	OFFSET FLAT:??_C@_0BD@OHJKBEKN@Record?5is?5Modified?$AA@
	push	OFFSET FLAT:??_C@_0CA@ICIFNJIA@Do?5You?5Want?5to?5Save?5This?5Entry?$DP?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MessageBoxA@CWnd@@QAEHPBD0I@Z		; CWnd::MessageBoxA
	cmp	eax, 6
	jne	SHORT $L94060

; 137  : 			   Save();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@CReportEdit@@IAEHXZ		; CReportEdit::Save
$L94060:

; 138  : 			}
; 139  : 	   UpdateData(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateData@CWnd@@QAEHH@Z		; CWnd::UpdateData

; 140  : 	   Find();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CReportEdit@@IAEHXZ		; CReportEdit::Find
$L94058:

; 141  : 	}
; 142  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeIndex@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnChangeIndex
_TEXT	ENDS
PUBLIC	?Paste@RTFFuncs@@QAEXH@Z			; RTFFuncs::Paste
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnPaste@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnPaste@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnPaste, COMDAT
; _this$ = ecx

; 145  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  : 	// TODO: Add your command handler code here
; 147  : 	pFuncs->Paste(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Paste@RTFFuncs@@QAEXH@Z		; RTFFuncs::Paste

; 148  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnPaste@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnPaste
_TEXT	ENDS
EXTRN	?Paste@CRichEditCtrl@@QAEXXZ:NEAR		; CRichEditCtrl::Paste
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?Paste@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?Paste@RTFFuncs@@QAEXH@Z PROC NEAR			; RTFFuncs::Paste, COMDAT
; _this$ = ecx

; 32   :    void Paste( int id ) { GetCtrl(id)->Paste(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ; RTFFuncs::GetCtrl
	mov	ecx, eax
	call	?Paste@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::Paste
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Paste@RTFFuncs@@QAEXH@Z ENDP				; RTFFuncs::Paste
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdatePaste, COMDAT
; _this$ = ecx

; 151  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 152  : 	// TODO: Add your command update UI handler code here
; 153  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdatePaste@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdatePaste
_TEXT	ENDS
PUBLIC	?Cut@RTFFuncs@@QAEXH@Z				; RTFFuncs::Cut
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnCut@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnCut@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnCut, COMDAT
; _this$ = ecx

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 	// TODO: Add your command handler code here
; 159  :    pFuncs->Cut(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Cut@RTFFuncs@@QAEXH@Z			; RTFFuncs::Cut

; 160  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnCut@CReportEdit@@IAEXXZ ENDP				; CReportEdit::OnCut
_TEXT	ENDS
EXTRN	?Cut@CRichEditCtrl@@QAEXXZ:NEAR			; CRichEditCtrl::Cut
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?Cut@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?Cut@RTFFuncs@@QAEXH@Z PROC NEAR			; RTFFuncs::Cut, COMDAT
; _this$ = ecx

; 31   :    void Cut( int id ) { GetCtrl(id)->Cut(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ; RTFFuncs::GetCtrl
	mov	ecx, eax
	call	?Cut@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::Cut
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Cut@RTFFuncs@@QAEXH@Z ENDP				; RTFFuncs::Cut
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateCut, COMDAT
; _this$ = ecx

; 163  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 164  : 	// TODO: Add your command update UI handler code here
; 165  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 166  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateCut@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateCut
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateCopy, COMDAT
; _this$ = ecx

; 169  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 	// TODO: Add your command update UI handler code here
; 171  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateCopy@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateCopy
_TEXT	ENDS
PUBLIC	?Copy@RTFFuncs@@QAEXH@Z				; RTFFuncs::Copy
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnCopy@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnCopy@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnCopy, COMDAT
; _this$ = ecx

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 	// TODO: Add your command handler code here
; 177  :    pFuncs->Copy(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Copy@RTFFuncs@@QAEXH@Z			; RTFFuncs::Copy

; 178  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnCopy@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnCopy
_TEXT	ENDS
EXTRN	?Copy@CRichEditCtrl@@QAEXXZ:NEAR		; CRichEditCtrl::Copy
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?Copy@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?Copy@RTFFuncs@@QAEXH@Z PROC NEAR			; RTFFuncs::Copy, COMDAT
; _this$ = ecx

; 33   :    void Copy( int id ) { GetCtrl(id)->Copy(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ; RTFFuncs::GetCtrl
	mov	ecx, eax
	call	?Copy@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::Copy
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@RTFFuncs@@QAEXH@Z ENDP				; RTFFuncs::Copy
_TEXT	ENDS
PUBLIC	?Clear@RTFFuncs@@QAEXH@Z			; RTFFuncs::Clear
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
;	COMDAT ?OnClear@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnClear@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnClear, COMDAT
; _this$ = ecx

; 181  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 	// TODO: Add your command handler code here
; 183  :    pFuncs->Clear(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Clear@RTFFuncs@@QAEXH@Z		; RTFFuncs::Clear

; 184  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnClear@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnClear
_TEXT	ENDS
EXTRN	?Clear@CRichEditCtrl@@QAEXXZ:NEAR		; CRichEditCtrl::Clear
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?Clear@RTFFuncs@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?Clear@RTFFuncs@@QAEXH@Z PROC NEAR			; RTFFuncs::Clear, COMDAT
; _this$ = ecx

; 35   :    void Clear( int id ) { GetCtrl(id)->Clear(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z ; RTFFuncs::GetCtrl
	mov	ecx, eax
	call	?Clear@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::Clear
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@RTFFuncs@@QAEXH@Z ENDP				; RTFFuncs::Clear
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateClear, COMDAT
; _this$ = ecx

; 187  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 188  : 	// TODO: Add your command update UI handler code here
; 189  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 190  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateClear@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateClear
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?DestroyWindow@CReportEdit@@UAEHXZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T94547 = -224						; size = 4
$T94548 = -212						; size = 4
_this$ = -8						; size = 4
?DestroyWindow@CReportEdit@@UAEHXZ PROC NEAR		; CReportEdit::DestroyWindow, COMDAT
; _this$ = ecx

; 193  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  : 	// TODO: Add your specialized code here and/or call the base class
; 195  : 	delete pFuncs;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	mov	DWORD PTR $T94548[ebp], ecx
	mov	edx, DWORD PTR $T94548[ebp]
	mov	DWORD PTR $T94547[ebp], edx
	cmp	DWORD PTR $T94547[ebp], 0
	je	SHORT $L94549
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T94547[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T94547[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $L94550
$L94549:
	mov	DWORD PTR tv71[ebp], 0
$L94550:

; 196  : 	return CDialog::DestroyWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DestroyWindow@CWnd@@UAEHXZ		; CWnd::DestroyWindow

; 197  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyWindow@CReportEdit@@UAEHXZ ENDP			; CReportEdit::DestroyWindow
_TEXT	ENDS
PUBLIC	?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z	; CRSymbolAry::toCombo
PUBLIC	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
EXTRN	?pRepSymbols@@3PAVCRSymbolAry@@A:DWORD		; pRepSymbols
EXTRN	?pATextTypes@@3PAVCATextTypeAry@@A:DWORD	; pATextTypes
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnInitDialog@CReportEdit@@MAEHXZ
_TEXT	SEGMENT
_pt$ = -32						; size = 4
_pbox$ = -20						; size = 4
_this$ = -8						; size = 4
?OnInitDialog@CReportEdit@@MAEHXZ PROC NEAR		; CReportEdit::OnInitDialog, COMDAT
; _this$ = ecx

; 200  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 201  : 	CDialog::OnInitDialog();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnInitDialog@CDialog@@UAEHXZ		; CDialog::OnInitDialog

; 202  : 	CComboBox *pbox = (CComboBox *)GetDlgItem(IDC_TEXTID);

	push	1008					; 000003f0H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDlgItem@CWnd@@QBEPAV1@H@Z		; CWnd::GetDlgItem
	mov	DWORD PTR _pbox$[ebp], eax

; 203  : 	char *pt = pATextTypes->toSymType(m_TextType,1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 380				; 0000017cH
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
	mov	DWORD PTR _pt$[ebp], eax

; 204  : 	pRepSymbols->toCombo(pbox,1, pt);

	mov	eax, DWORD PTR _pt$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pbox$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pRepSymbols@@3PAVCRSymbolAry@@A ; pRepSymbols
	call	?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z ; CRSymbolAry::toCombo

; 205  : 	// TODO: Add extra initialization here
; 206  : 	
; 207  : 	return TRUE;  // return TRUE unless you set the focus to a control

	mov	eax, 1

; 208  : 	              // EXCEPTION: OCX Property Pages should return FALSE
; 209  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnInitDialog@CReportEdit@@MAEHXZ ENDP			; CReportEdit::OnInitDialog
_TEXT	ENDS
EXTRN	?toCombo@CSymbolAry@@QAEHPAVCComboBox@@HPADH@Z:NEAR ; CSymbolAry::toCombo
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\symbol.hpp
;	COMDAT ?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cmb$ = 8						; size = 4
_w$ = 12						; size = 4
_tp$ = 16						; size = 4
?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z PROC NEAR ; CRSymbolAry::toCombo, COMDAT
; _this$ = ecx

; 55   : 	int toCombo( CComboBox *cmb, int w, char *tp ) { return( CSymbolAry::toCombo(cmb,w,tp)); }   

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	-1
	mov	eax, DWORD PTR _tp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmb$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toCombo@CSymbolAry@@QAEHPAVCComboBox@@HPADH@Z ; CSymbolAry::toCombo
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?toCombo@CRSymbolAry@@QAEHPAVCComboBox@@HPAD@Z ENDP	; CRSymbolAry::toCombo
_TEXT	ENDS
PUBLIC	?symtypes@CATextType@@QAEPADXZ			; CATextType::symtypes
EXTRN	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HH@Z:NEAR ; CATextTypeAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_pf$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_tp$ = 12						; size = 4
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; CATextTypeAry::toSymType, COMDAT
; _this$ = ecx

; 41   :     char *toSymType( CString &name, int tp ) { CATextType *pf=Find(name, tp); if ( pf==NULL) return NULL; else return( pf->symtypes() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _tp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HH@Z ; CATextTypeAry::Find
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	jne	SHORT $L93796
	xor	eax, eax
	jmp	SHORT $L93794
$L93796:
	mov	ecx, DWORD PTR _pf$[ebp]
	call	?symtypes@CATextType@@QAEPADXZ		; CATextType::symtypes
$L93794:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CATextTypeAry::toSymType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?symtypes@CATextType@@QAEPADXZ PROC NEAR		; CATextType::symtypes, COMDAT
; _this$ = ecx

; 20   :     char *symtypes() { return _symtypes; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?symtypes@CATextType@@QAEPADXZ ENDP			; CATextType::symtypes
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
_TEXT	ENDS
;	COMDAT ?OnChangeText@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnChangeText@CReportEdit@@IAEXXZ PROC NEAR		; CReportEdit::OnChangeText, COMDAT
; _this$ = ecx

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 	// TODO: If this is a RICHEDIT control, the control will not
; 214  : 	// send this notification unless you override the CDialog::OnInitDialog()
; 215  : 	// function and call CRichEditCtrl().SetEventMask()
; 216  : 	// with the ENM_CHANGE flag ORed into the mask.
; 217  : 	
; 218  : 	// TODO: Add your control notification handler code here
; 219  : 	m_bModified=TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 1

; 220  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeText@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnChangeText
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUndo@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnUndo@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnUndo, COMDAT
; _this$ = ecx

; 223  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 224  : 	// TODO: Add your command handler code here
; 225  :    pFuncs->Clear(IDC_TEXT);	

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?Clear@RTFFuncs@@QAEXH@Z		; RTFFuncs::Clear

; 226  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnUndo@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnUndo
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateUndo, COMDAT
; _this$ = ecx

; 229  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 	// TODO: Add your command update UI handler code here
; 231  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateUndo@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateUndo
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateText@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnUpdateText@CReportEdit@@IAEXXZ PROC NEAR		; CReportEdit::OnUpdateText, COMDAT
; _this$ = ecx

; 235  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 236  : 	// TODO: If this is a RICHEDIT control, the control will not
; 237  : 	// send this notification unless you override the CDialog::OnInitDialog()
; 238  : 	// function to send the EM_SETEVENTMASK message to the control
; 239  : 	// with the ENM_UPDATE flag ORed into the lParam mask.
; 240  : 	
; 241  : 	// TODO: Add your control notification handler code here
; 242  : 	
; 243  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnUpdateText@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnUpdateText
_TEXT	ENDS
EXTRN	?DoBold@RTFFuncs@@QAEXH@Z:NEAR			; RTFFuncs::DoBold
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnBold@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnBold@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnBold, COMDAT
; _this$ = ecx

; 246  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 	// TODO: Add your command handler code here
; 248  : 	pFuncs->DoBold(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoBold@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoBold

; 249  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnBold@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnBold
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateBold, COMDAT
; _this$ = ecx

; 252  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 253  : 	// TODO: Add your command update UI handler code here
; 254  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 255  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateBold@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateBold
_TEXT	ENDS
EXTRN	?DoHeading@RTFFuncs@@QAEXH@Z:NEAR		; RTFFuncs::DoHeading
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnHead@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnHead@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnHead, COMDAT
; _this$ = ecx

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  : 	// TODO: Add your command handler code here
; 260  : 	pFuncs->DoHeading(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoHeading@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoHeading

; 261  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnHead@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnHead
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateHead, COMDAT
; _this$ = ecx

; 264  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 265  : 	// TODO: Add your command update UI handler code here
; 266  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateHead@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateHead
_TEXT	ENDS
EXTRN	?DoItalic@RTFFuncs@@QAEXH@Z:NEAR		; RTFFuncs::DoItalic
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnItal@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnItal@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnItal, COMDAT
; _this$ = ecx

; 270  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 271  : 	// TODO: Add your command handler code here
; 272  : 	pFuncs->DoItalic(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoItalic@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoItalic

; 273  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnItal@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnItal
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateItal, COMDAT
; _this$ = ecx

; 276  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 	// TODO: Add your command update UI handler code here
; 278  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateItal@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateItal
_TEXT	ENDS
EXTRN	?DoUnBold@RTFFuncs@@QAEXH@Z:NEAR		; RTFFuncs::DoUnBold
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUnbold@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnUnbold@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnUnbold, COMDAT
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	// TODO: Add your command handler code here
; 284  : 	pFuncs->DoUnBold(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoUnBold@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoUnBold

; 285  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnUnbold@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnUnbold
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CReportEdit::OnUpdateUnbold, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 289  : 	// TODO: Add your command update UI handler code here
; 290  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 291  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateUnbold@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateUnbold
_TEXT	ENDS
EXTRN	?DoUnHeading@RTFFuncs@@QAEXH@Z:NEAR		; RTFFuncs::DoUnHeading
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUnheading@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnUnheading@CReportEdit@@IAEXXZ PROC NEAR		; CReportEdit::OnUnheading, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 	// TODO: Add your command handler code here
; 296  : 	pFuncs->DoUnHeading(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoUnHeading@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoUnHeading

; 297  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnUnheading@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnUnheading
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CReportEdit::OnUpdateUnheading, COMDAT
; _this$ = ecx

; 300  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 301  : 	// TODO: Add your command update UI handler code here
; 302  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 303  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateUnheading@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateUnheading
_TEXT	ENDS
EXTRN	?DoUnItalic@RTFFuncs@@QAEXH@Z:NEAR		; RTFFuncs::DoUnItalic
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUnitalic@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?OnUnitalic@CReportEdit@@IAEXXZ PROC NEAR		; CReportEdit::OnUnitalic, COMDAT
; _this$ = ecx

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 307  : 	// TODO: Add your command handler code here
; 308  : 	pFuncs->DoUnItalic(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?DoUnItalic@RTFFuncs@@QAEXH@Z		; RTFFuncs::DoUnItalic

; 309  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnUnitalic@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnUnitalic
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CReportEdit::OnUpdateUnitalic, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	// TODO: Add your command update UI handler code here
; 314  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 315  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateUnitalic@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateUnitalic
_TEXT	ENDS
PUBLIC	?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; RTFFuncs::GetTabString
PUBLIC	?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CTabctrlctrl1::Set_TabString
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@	; `string'
PUBLIC	??_C@_0EM@PAAEPIAN@select?5?$CK?5from?5ReportText?5where?5T@ ; `string'
PUBLIC	??_R0PAVCDaoException@@@8			; CDaoException * `RTTI Type Descriptor'
PUBLIC	??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@	; `string'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	?SetRTF@RTFFuncs@@QAEXHAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; RTFFuncs::SetRTF
EXTRN	?NewRTF@RTFFuncs@@QAEXH@Z:NEAR			; RTFFuncs::NewRTF
EXTRN	_sprintf:NEAR
EXTRN	_sscanf:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	?IsOpen@CDaoRecordset@@QBEHXZ:NEAR		; CDaoRecordset::IsOpen
EXTRN	?IsBOF@CDaoRecordset@@QBEHXZ:NEAR		; CDaoRecordset::IsBOF
EXTRN	?alert_box@@YAHPADPBDZZ:NEAR			; alert_box
EXTRN	?GetCurLanguage@@YAAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:NEAR ; GetCurLanguage
EXTRN	?Invalidate@CWnd@@QAEXH@Z:NEAR			; CWnd::Invalidate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Find@CReportEdit@@IAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Find@CReportEdit@@IAEHXZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?Find@CReportEdit@@IAEHXZ$4 DD 00H
	DD	FLAT:??_R0PAVCDaoException@@@8
	DD	0fffffd0cH
	DD	FLAT:__catch$?Find@CReportEdit@@IAEHXZ$0
__tryblocktable$?Find@CReportEdit@@IAEHXZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Find@CReportEdit@@IAEHXZ$4
__ehfuncinfo$?Find@CReportEdit@@IAEHXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?Find@CReportEdit@@IAEHXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Find@CReportEdit@@IAEHXZ
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@
CONST	SEGMENT
??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@ DB '%[^-]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PAAEPIAN@select?5?$CK?5from?5ReportText?5where?5T@
CONST	SEGMENT
??_C@_0EM@PAAEPIAN@select?5?$CK?5from?5ReportText?5where?5T@ DB 'select *'
	DB	' from ReportText where TextType=''%s'' and textkey=''%s'' and'
	DB	' iIndex=%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@
CONST	SEGMENT
??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@ DB 'Error on Database', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0PAVCDaoException@@@8
_DATA	SEGMENT
??_R0PAVCDaoException@@@8 DD FLAT:??_7type_info@@6B@	; CDaoException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVCDaoException@@', 00H
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?Find@CReportEdit@@IAEHXZ
_TEXT	SEGMENT
tv184 = -996						; size = 4
tv189 = -992						; size = 4
tv188 = -992						; size = 4
tv65 = -992						; size = 4
$T94594 = -984						; size = 4
$T94595 = -972						; size = 4
$T94596 = -960						; size = 4
_e$94172 = -756						; size = 4
_Lang$ = -744						; size = 4
_key1$ = -732						; size = 25
_sqlbuf$ = -696						; size = 150
_errbuf$ = -536						; size = 500
_this$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
?Find@CReportEdit@@IAEHXZ PROC NEAR			; CReportEdit::Find, COMDAT
; _this$ = ecx

; 318  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Find@CReportEdit@@IAEHXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 980				; 000003d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-996]
	mov	ecx, 245				; 000000f5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 319  :  TCHAR errbuf[500], sqlbuf[150], key1[25];
; 320  :  CString Lang = GetCurLanguage();

	call	?GetCurLanguage@@YAAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; GetCurLanguage
	push	eax
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 321  : try {

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 322  : #ifdef _UNICODE
; 323  :    _stscanf((const TCHAR *)m_TextIdStr,_T("%l[^-]"), key1 );
; 324  :    _stprintf( sqlbuf, _T("select * from ReportText where TextType='%ls' and textkey='%ls' and iIndex=%d and Lang='%ls'"),
; 325  :       (LPCTSTR)m_TextType, key1, m_Index, (LPCTSTR)Lang);
; 326  : #else
; 327  :    sscanf((const char *)m_TextIdStr,_T("%[^-]"), key1 );

	lea	eax, DWORD PTR _key1$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	call	_sscanf
	add	esp, 12					; 0000000cH

; 328  :    sprintf( sqlbuf, _T("select * from ReportText where TextType='%s' and textkey='%s' and iIndex=%d"),
; 329  :       (LPCTSTR)m_TextType, key1, m_Index);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	lea	edx, DWORD PTR _key1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	push	OFFSET FLAT:??_C@_0EM@PAAEPIAN@select?5?$CK?5from?5ReportText?5where?5T@
	lea	eax, DWORD PTR _sqlbuf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 330  : #endif
; 331  : 
; 332  :   
; 333  :    if ( theSet.IsOpen() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $L94168

; 334  : 	   theSet.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94168:

; 335  :    theSet.Open(dbOpenDynaset,sqlbuf);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _sqlbuf$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 336  :    if ( theSet.IsBOF() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?IsBOF@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsBOF
	mov	DWORD PTR tv188[ebp], eax
	cmp	DWORD PTR tv188[ebp], 0
	je	SHORT $L94169

; 337  : 	   pFuncs->NewRTF(IDC_TEXT);

	push	1004					; 000003ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?NewRTF@RTFFuncs@@QAEXH@Z		; RTFFuncs::NewRTF

; 338  :    else

	jmp	SHORT $L94170
$L94169:

; 339  :       pFuncs->SetRTF(IDC_TEXT,theSet.m_text);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	push	1004					; 000003ecH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+388]
	call	?SetRTF@RTFFuncs@@QAEXHAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; RTFFuncs::SetRTF
$L94170:

; 340  :    m_tabctrl.Set_TabString(pFuncs->GetTabString());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; RTFFuncs::GetTabString
	mov	DWORD PTR tv189[ebp], eax
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T94594[ebp], esp
	mov	edx, DWORD PTR tv189[ebp]
	push	edx
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CTabctrlctrl1::Set_TabString

; 341  :    Invalidate(FALSE); 

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate
	jmp	SHORT $L94597
__catch$?Find@CReportEdit@@IAEHXZ$0:

; 342  : }
; 343  :  catch ( CDaoException *e ) {
; 344  :    e->GetErrorMessage(errbuf,499);

	mov	esi, esp
	push	0
	push	499					; 000001f3H
	lea	eax, DWORD PTR _errbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$94172[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$94172[ebp]
	call	DWORD PTR [edx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 345  :    alert_box(_T("Error on Database"), errbuf );

	lea	eax, DWORD PTR _errbuf$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@
	call	?alert_box@@YAHPADPBDZZ			; alert_box
	add	esp, 8

; 346  :    return ( 0 );

	mov	DWORD PTR $T94595[ebp], 0
	mov	eax, $L94602
	ret	0
$L94597:

; 347  :   }

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 346  :    return ( 0 );

	jmp	SHORT __tryend$?Find@CReportEdit@@IAEHXZ$1
$L94602:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR $T94595[ebp]
	jmp	SHORT $L94158
__tryend$?Find@CReportEdit@@IAEHXZ$1:

; 348  :  return ( 1 );

	mov	DWORD PTR $T94596[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR $T94596[ebp]
$L94158:

; 349  : 
; 350  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94614
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 996				; 000003e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94614:
	DD	5
	DD	$L94613
$L94613:
	DD	-536					; fffffde8H
	DD	500					; 000001f4H
	DD	$L94605
	DD	-696					; fffffd48H
	DD	150					; 00000096H
	DD	$L94606
	DD	-732					; fffffd24H
	DD	25					; 00000019H
	DD	$L94607
	DD	-744					; fffffd18H
	DD	4
	DD	$L94608
	DD	-756					; fffffd0cH
	DD	4
	DD	$L94609
$L94609:
	DB	101					; 00000065H
	DB	0
$L94608:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$L94607:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	49					; 00000031H
	DB	0
$L94606:
	DB	115					; 00000073H
	DB	113					; 00000071H
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$L94605:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Find@CReportEdit@@IAEHXZ$2:
	lea	ecx, DWORD PTR _Lang$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?Find@CReportEdit@@IAEHXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?Find@CReportEdit@@IAEHXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?Find@CReportEdit@@IAEHXZ ENDP				; CReportEdit::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; RTFFuncs::GetTabString, COMDAT
; _this$ = ecx

; 38   :    CString &GetTabString() { return tabstring; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; RTFFuncs::GetTabString
_TEXT	ENDS
EXTRN	?SetProperty@CWnd@@QAAXJGZZ:NEAR		; CWnd::SetProperty
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\tabctrlctrl1.h
xdata$x	SEGMENT
__unwindtable$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
__ehfuncinfo$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_propVal$ = 8						; size = 4
?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; CTabctrlctrl1::Set_TabString, COMDAT
; _this$ = ecx

; 70   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 71   : 	SetProperty(0x0, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 72   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _propVal$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
	lea	ecx, DWORD PTR _propVal$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?Set_TabString@CTabctrlctrl1@@QAEXV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CTabctrlctrl1::Set_TabString
PUBLIC	?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; RTFFuncs::SetTabString
PUBLIC	?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CTabctrlctrl1::GetTabString
PUBLIC	?value@CSymbol@@QAEAAHXZ			; CSymbol::value
PUBLIC	?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z	; CRSymbolAry::Find
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	??_C@_0BF@MNAIMFAK@Can?8t?5Find?5Symbol?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0L@JINOLIGM@Bad?5Symbol?$AA@		; `string'
EXTRN	?GetRTF@RTFFuncs@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; RTFFuncs::GetRTF
EXTRN	@_RTC_Check_4_to_2@4:NEAR
EXTRN	?TrimTraillfcr@@YAXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; TrimTraillfcr
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\reportedit.cpp
xdata$x	SEGMENT
__unwindtable$?Save@CReportEdit@@IAEHXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Save@CReportEdit@@IAEHXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Save@CReportEdit@@IAEHXZ$3
	DD	0ffffffffH
	DD	00H
__catchsym$?Save@CReportEdit@@IAEHXZ$4 DD 00H
	DD	FLAT:??_R0PAVCDaoException@@@8
	DD	0fffffdacH
	DD	FLAT:__catch$?Save@CReportEdit@@IAEHXZ$0
__tryblocktable$?Save@CReportEdit@@IAEHXZ DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?Save@CReportEdit@@IAEHXZ$4
__ehfuncinfo$?Save@CReportEdit@@IAEHXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?Save@CReportEdit@@IAEHXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Save@CReportEdit@@IAEHXZ
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BF@MNAIMFAK@Can?8t?5Find?5Symbol?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BF@MNAIMFAK@Can?8t?5Find?5Symbol?5?$CFs?$AA@ DB 'Can''t Find Symbo'
	DB	'l %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JINOLIGM@Bad?5Symbol?$AA@
CONST	SEGMENT
??_C@_0L@JINOLIGM@Bad?5Symbol?$AA@ DB 'Bad Symbol', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Save@CReportEdit@@IAEHXZ
_TEXT	SEGMENT
tv214 = -836						; size = 4
tv212 = -836						; size = 4
tv221 = -832						; size = 4
tv220 = -832						; size = 4
tv219 = -832						; size = 4
tv218 = -832						; size = 4
tv217 = -832						; size = 4
tv216 = -832						; size = 4
$T94636 = -824						; size = 4
$T94637 = -812						; size = 4
$T94638 = -800						; size = 4
_e$94193 = -596						; size = 4
_pSym$94189 = -584					; size = 4
_key1$ = -572						; size = 25
_errbuf$ = -536						; size = 500
_this$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
?Save@CReportEdit@@IAEHXZ PROC NEAR			; CReportEdit::Save, COMDAT
; _this$ = ecx

; 353  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Save@CReportEdit@@IAEHXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 820				; 00000334H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-836]
	mov	ecx, 205				; 000000cdH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 354  :  TCHAR errbuf[500], key1[25];
; 355  : try {

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 356  :    if ( theSet.IsOpen() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	mov	DWORD PTR tv216[ebp], eax
	cmp	DWORD PTR tv216[ebp], 0
	je	SHORT $L94183

; 357  : 	   theSet.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94183:

; 358  :    theSet.Open();

	mov	esi, esp
	push	0
	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 359  :    if ( theSet.IsBOF() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?IsBOF@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsBOF
	mov	DWORD PTR tv217[ebp], eax
	cmp	DWORD PTR tv217[ebp], 0
	je	SHORT $L94184

; 360  : 	   theSet.AddNew();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+44]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 361  :    else

	jmp	SHORT $L94185
$L94184:

; 362  : 	   theSet.Edit();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+48]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94185:

; 363  : #ifdef _UNICODE
; 364  :    _stscanf((const TCHAR *)m_TextIdStr,_T("%l[^-]"), key1 );
; 365  : #else
; 366  :    _stscanf((const TCHAR *)m_TextIdStr,_T("%[^-]"), key1 );

	lea	eax, DWORD PTR _key1$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_05ECMNLKDI@?$CF?$FL?$FO?9?$FN?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	call	_sscanf
	add	esp, 12					; 0000000cH

; 367  : #endif
; 368  : 
; 369  :    theSet.m_textkey = key1;

	lea	eax, DWORD PTR _key1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 360				; 00000168H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 370  :    theSet.m_iIndex = m_Index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	@_RTC_Check_4_to_2@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+364], ax

; 371  :    theSet.m_texttype = m_TextType;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 380				; 0000017cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 372  :    pFuncs->SetTabString(m_tabctrl.GetTabString());

	lea	eax, DWORD PTR $T94636[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CTabctrlctrl1::GetTabString
	mov	DWORD PTR tv218[ebp], eax
	mov	ecx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv212[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	edx, DWORD PTR tv212[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; RTFFuncs::SetTabString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T94636[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 373  :    theSet.m_text = pFuncs->GetRTF(IDC_TEXT);

	push	1004					; 000003ecH
	lea	eax, DWORD PTR $T94637[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+388]
	call	?GetRTF@RTFFuncs@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; RTFFuncs::GetRTF
	mov	DWORD PTR tv219[ebp], eax
	mov	edx, DWORD PTR tv219[ebp]
	mov	DWORD PTR tv214[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR tv214[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T94637[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 374  :    TrimTraillfcr(theSet.m_text);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 368				; 00000170H
	push	eax
	call	?TrimTraillfcr@@YAXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; TrimTraillfcr
	add	esp, 4

; 375  :    CSymbol *pSym=pRepSymbols->Find(key1,0);

	push	0
	lea	eax, DWORD PTR _key1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pRepSymbols@@3PAVCRSymbolAry@@A ; pRepSymbols
	call	?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z ; CRSymbolAry::Find
	mov	DWORD PTR tv220[ebp], eax
	mov	ecx, DWORD PTR tv220[ebp]
	mov	DWORD PTR _pSym$94189[ebp], ecx

; 376  :    if ( pSym == NULL ) {

	cmp	DWORD PTR _pSym$94189[ebp], 0
	jne	SHORT $L94190

; 377  : 	   alert_box(_T("Bad Symbol"), _T("Can't Find Symbol %s"), m_TextIdStr );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	push	ecx
	push	OFFSET FLAT:??_C@_0BF@MNAIMFAK@Can?8t?5Find?5Symbol?5?$CFs?$AA@
	push	OFFSET FLAT:??_C@_0L@JINOLIGM@Bad?5Symbol?$AA@
	call	?alert_box@@YAHPADPBDZZ			; alert_box
	add	esp, 12					; 0000000cH

; 378  :        return( 0 );

	xor	eax, eax
	jmp	$L94179
$L94190:

; 379  : 		}
; 380  :    theSet.m_iTextKey=pSym->value();

	mov	ecx, DWORD PTR _pSym$94189[ebp]
	call	?value@CSymbol@@QAEAAHXZ		; CSymbol::value
	mov	DWORD PTR tv221[ebp], eax
	mov	eax, DWORD PTR tv221[ebp]
	mov	ecx, DWORD PTR [eax]
	call	@_RTC_Check_4_to_2@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+366], ax

; 381  :    theSet.Update();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+52]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 382  :    theSet.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+204]
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $L94639
__catch$?Save@CReportEdit@@IAEHXZ$0:

; 383  :  }
; 384  :  catch ( CDaoException *e ) {
; 385  :    e->GetErrorMessage(errbuf,499);

	mov	esi, esp
	push	0
	push	499					; 000001f3H
	lea	eax, DWORD PTR _errbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$94193[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$94193[ebp]
	call	DWORD PTR [edx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 386  :    alert_box(_T("Error on Database"), errbuf );

	lea	eax, DWORD PTR _errbuf$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BC@PNMIDJEG@Error?5on?5Database?$AA@
	call	?alert_box@@YAHPADPBDZZ			; alert_box
	add	esp, 8

; 387  :    return ( 0 );

	mov	DWORD PTR $T94638[ebp], 0
	mov	eax, $L94644
	ret	0
$L94639:

; 388  :   }

	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 387  :    return ( 0 );

	jmp	SHORT __tryend$?Save@CReportEdit@@IAEHXZ$1
$L94644:
	mov	eax, DWORD PTR $T94638[ebp]
	jmp	SHORT $L94179
__tryend$?Save@CReportEdit@@IAEHXZ$1:

; 389  :  return ( 1 );

	mov	eax, 1
$L94179:

; 390  : 
; 391  : 
; 392  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94654
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 836				; 00000344H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94654:
	DD	3
	DD	$L94653
$L94653:
	DD	-536					; fffffde8H
	DD	500					; 000001f4H
	DD	$L94648
	DD	-572					; fffffdc4H
	DD	25					; 00000019H
	DD	$L94649
	DD	-596					; fffffdacH
	DD	4
	DD	$L94650
$L94650:
	DB	101					; 00000065H
	DB	0
$L94649:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	49					; 00000031H
	DB	0
$L94648:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Save@CReportEdit@@IAEHXZ$2:
	lea	ecx, DWORD PTR $T94636[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?Save@CReportEdit@@IAEHXZ$3:
	lea	ecx, DWORD PTR $T94637[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?Save@CReportEdit@@IAEHXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?Save@CReportEdit@@IAEHXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?Save@CReportEdit@@IAEHXZ ENDP				; CReportEdit::Save
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; RTFFuncs::SetTabString, COMDAT
; _this$ = ecx

; 37   :    void SetTabString(CString &s) { tabstring = s; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTabString@RTFFuncs@@QAEXAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; RTFFuncs::SetTabString
_TEXT	ENDS
EXTRN	?GetProperty@CWnd@@QBEXJGPAX@Z:NEAR		; CWnd::GetProperty
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\tabctrlctrl1.h
xdata$x	SEGMENT
__unwindtable$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94666 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CTabctrlctrl1::GetTabString, COMDAT
; _this$ = ecx

; 54   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94666[ebp], 0

; 55   : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 56   : 	GetProperty(0x1, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 57   : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94666[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94666[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 58   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94673
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94673:
	DD	1
	DD	$L94672
$L94672:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94670
$L94670:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetTabString@CTabctrlctrl1@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CTabctrlctrl1::GetTabString
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\symbol.hpp
;	COMDAT ?value@CSymbol@@QAEAAHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@CSymbol@@QAEAAHXZ PROC NEAR			; CSymbol::value, COMDAT
; _this$ = ecx

; 17   : 	int &value() { return _value; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@CSymbol@@QAEAAHXZ ENDP				; CSymbol::value
_TEXT	ENDS
EXTRN	?Find@CSymbolAry@@QAEPAVCSymbol@@PBDHH@Z:NEAR	; CSymbolAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sym$ = 8						; size = 4
_lin$ = 12						; size = 4
?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z PROC NEAR	; CRSymbolAry::Find, COMDAT
; _this$ = ecx

; 53   :     CRSymbol *Find( const char *sym, int lin=0 ) { return((CRSymbol *) CSymbolAry::Find(sym, -1, lin ) ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lin$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sym$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CSymbolAry@@QAEPAVCSymbol@@PBDHH@Z ; CSymbolAry::Find
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Find@CRSymbolAry@@QAEPAVCRSymbol@@PBDH@Z ENDP		; CRSymbolAry::Find
_TEXT	ENDS
PUBLIC	?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; RTFFuncs::getBasicString
PUBLIC	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
EXTRN	?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:NEAR ; CWSpell::GetText
EXTRN	?SetText@CWSpell@@QAEXPBD@Z:NEAR		; CWSpell::SetText
EXTRN	?SetShowContext@CWSpell@@QAEXH@Z:NEAR		; CWSpell::SetShowContext
EXTRN	?SetShowDialog@CWSpell@@QAEXH@Z:NEAR		; CWSpell::SetShowDialog
EXTRN	?Start@CWSpell@@QAEFXZ:NEAR			; CWSpell::Start
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\reportedit.cpp
xdata$x	SEGMENT
__unwindtable$?OnSpell@CReportEdit@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$2
__ehfuncinfo$?OnSpell@CReportEdit@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnSpell@CReportEdit@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnSpell@CReportEdit@@IAEXXZ
_TEXT	SEGMENT
tv147 = -260						; size = 4
tv92 = -256						; size = 4
$T94683 = -248						; size = 4
_checked$94201 = -44					; size = 4
_str$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnSpell@CReportEdit@@IAEXXZ PROC NEAR			; CReportEdit::OnSpell, COMDAT
; _this$ = ecx

; 395  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSpell@CReportEdit@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 396  : 	// TODO: Add your command handler code here
; 397  : 	CString str = pFuncs->GetRTF(IDC_TEXT);

	push	1004					; 000003ecH
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+388]
	call	?GetRTF@RTFFuncs@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; RTFFuncs::GetRTF
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 398  :     
; 399  : 	// Interactively check the spelling of the CString.
; 400  : 	// The CString's contents will be displayed so the user can see
; 401  : 	// errors in context. Any corrections made by the user will update
; 402  : 	// the CString.
; 403  : 	// Note that WSpell's ShowContext property has been set to True.
; 404  : 	m_ctrl.SetText(pFuncs->getBasicString());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; RTFFuncs::getBasicString
	mov	ecx, eax
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?SetText@CWSpell@@QAEXPBD@Z		; CWSpell::SetText

; 405  : 	m_ctrl.SetShowDialog(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?SetShowDialog@CWSpell@@QAEXH@Z		; CWSpell::SetShowDialog

; 406  : 	m_ctrl.SetShowContext(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?SetShowContext@CWSpell@@QAEXH@Z	; CWSpell::SetShowContext

; 407  : 	if (m_ctrl.Start() >= 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?Start@CWSpell@@QAEFXZ			; CWSpell::Start
	movsx	eax, ax
	test	eax, eax
	jl	$L94200

; 408  : 		CString checked = pFuncs->GetTabString();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	call	?GetTabString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; RTFFuncs::GetTabString
	push	eax
	lea	ecx, DWORD PTR _checked$94201[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 409  : 		checked += m_ctrl.GetText();

	lea	eax, DWORD PTR $T94683[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetText
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	lea	ecx, DWORD PTR _checked$94201[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T94683[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 410  : 		// Put the corrected text back into the edit control.
; 411  : 		pFuncs->SetRTF(IDC_TEXT,checked);

	lea	eax, DWORD PTR _checked$94201[ebp]
	push	eax
	push	1004					; 000003ecH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+388]
	call	?SetRTF@RTFFuncs@@QAEXHAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; RTFFuncs::SetRTF

; 412  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _checked$94201[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
$L94200:

; 413  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94693
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94693:
	DD	2
	DD	$L94692
$L94692:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94689
	DD	-44					; ffffffd4H
	DD	4
	DD	$L94690
$L94690:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$L94689:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$1:
	lea	ecx, DWORD PTR _checked$94201[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnSpell@CReportEdit@@IAEXXZ$2:
	lea	ecx, DWORD PTR $T94683[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?OnSpell@CReportEdit@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnSpell@CReportEdit@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnSpell@CReportEdit@@IAEXXZ ENDP			; CReportEdit::OnSpell
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\rtffuncs.h
;	COMDAT ?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; RTFFuncs::getBasicString, COMDAT
; _this$ = ecx

; 41   :    CString &getBasicString() { return BasicString; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBasicString@RTFFuncs@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; RTFFuncs::getBasicString
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\reportedit.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z PROC NEAR	; CReportEdit::OnUpdateSpell, COMDAT
; _this$ = ecx

; 416  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 417  : 	// TODO: Add your command update UI handler code here
; 418  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 419  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateSpell@CReportEdit@@IAEXPAVCCmdUI@@@Z ENDP	; CReportEdit::OnUpdateSpell
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 967  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 969  : 
; 970  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 971  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator+=
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=, COMDAT
; _this$ = ecx

; 1028 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		CThisSimpleString::operator+=( str );

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator+=

; 1030 : 
; 1031 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1032 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$94225 = -44					; size = 4
_pOldData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 273  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 275  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 276  : 		if( pSrcData != pOldData)

	mov	eax, DWORD PTR _pSrcData$[ebp]
	cmp	eax, DWORD PTR _pOldData$[ebp]
	je	SHORT $L94221

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L94223
	mov	eax, DWORD PTR _pSrcData$[ebp]
	mov	ecx, DWORD PTR _pOldData$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $L94222
$L94223:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 281  : 			}
; 282  : 			else

	jmp	SHORT $L94221
$L94222:

; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$94225[ebp], eax

; 285  : 				pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 286  : 				Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$94225[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L94221:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator+=, COMDAT
; _this$ = ecx

; 322  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 		Append( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ; ATL::CSimpleStringT<char,0>::Append

; 324  : 
; 325  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 326  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator+=
_TEXT	ENDS
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx

; 412  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 413  : 		Append( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append

; 414  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszBuffer$ = -56					; size = 4
_nNewLength$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_nOffset$ = -20						; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 388  : 		// See comment in SetString() about why we do this
; 389  : 		UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nOffset$[ebp], ecx

; 390  : 
; 391  : 		UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	mov	DWORD PTR _nOldLength$[ebp], eax

; 392  : 		int nNewLength = nOldLength+nLength;

	mov	eax, DWORD PTR _nOldLength$[ebp]
	add	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$[ebp], eax

; 393  : 		PXSTR pszBuffer = GetBuffer( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 394  : 		if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$[ebp]
	cmp	eax, DWORD PTR _nOldLength$[ebp]
	ja	SHORT $L94239

; 395  : 		{
; 396  : 			pszSrc = pszBuffer+nOffset;

	mov	eax, DWORD PTR _pszBuffer$[ebp]
	add	eax, DWORD PTR _nOffset$[ebp]
	mov	DWORD PTR _pszSrc$[ebp], eax
$L94239:

; 397  : 			// No need to call CopyCharsOverlapped, since the destination is
; 398  : 			// beyond the end of the original buffer
; 399  : 		}
; 400  : 		CopyChars( pszBuffer+nOldLength, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	add	edx, DWORD PTR _nOldLength$[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 401  : 		ReleaseBufferSetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength

; 402  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L94718
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94718
	int	3
$L94718:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L25707

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L25707:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
PUBLIC	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 797  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 815  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 378  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 380  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 500  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	eax, DWORD PTR [eax+4]

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 982  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ; ATL::CSimpleStringT<char,0>::operator=

; 984  : 
; 985  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 986  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L94734
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94734
	int	3
$L94734:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_pNewData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 217  : 	CSimpleStringT( const CSimpleStringT& strSrc )

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$[ebp], eax

; 221  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 222  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L94743
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94743
	int	3
$L94743:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92828

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L92828:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L94750
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94750
	int	3
$L94750:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L94751
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94751
	int	3
$L94751:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92836
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92835
$L92836:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92835:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	BYTE PTR [ecx+edx], 0
$L94749:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T94754 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T94754[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L24989

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L24989:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L94753:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 164  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVA
	add	esp, 28					; 0000001cH

; 123  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		SetString( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92884 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92880

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92880:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92881

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92878
$L92881:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92878

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92884[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92884[ebp], 1024	; 00000400H
	jle	SHORT $L92885

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92884[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92886
$L92885:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92886:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92887

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92887:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L92878:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pNewStringMgr$ = -20					; size = 4
_pNewData$ = -8						; size = 4
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 802  : 		CStringData* pNewData = NULL;

	mov	DWORD PTR _pNewData$[ebp], 0

; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewStringMgr$[ebp], eax

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L92891
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L92891

; 806  : 		{
; 807  : 			pNewData = pData;

	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pNewData$[ebp], eax

; 808  : 			pNewData->AddRef();

	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?AddRef@CStringData@ATL@@QAEXXZ		; ATL::CStringData::AddRef

; 809  : 		}
; 810  : 		else

	jmp	SHORT $L92892
$L92891:

; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pNewStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 813  : 			if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92894

; 814  : 			{
; 815  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92894:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92892:

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
$L94776:

; 822  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@		; `string'
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT
??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@ DB 'nRefs > 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		ATLASSERT(nRefs > 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jg	SHORT $L94779
	push	OFFSET FLAT:??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
	push	0
	push	71					; 00000047H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94779
	int	3
$L94779:

; 72   : 		_InterlockedIncrement(&nRefs);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 581  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
EXTRN	_strlen:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 677  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		if( psz == NULL )

	cmp	DWORD PTR _psz$[ebp], 0
	jne	SHORT $L92819

; 679  : 		{
; 680  : 			return( 0 );

	xor	eax, eax
	jmp	SHORT $L92818
$L92819:

; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

	mov	eax, DWORD PTR _psz$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
$L92818:

; 683  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L94787:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92916

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92916:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L94790
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L94791
$L94790:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L94791:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L94789:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L94794
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L94794
	int	3
$L94794:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92926

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92926:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L94793:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszBuffer$92935 = -44					; size = 4
_nOffset$92934 = -32					; size = 4
_nOldLength$92933 = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 		if( nLength == 0 )

	cmp	DWORD PTR _nLength$[ebp], 0
	jne	SHORT $L92929

; 585  : 		{
; 586  : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty

; 587  : 		}
; 588  : 		else

	jmp	SHORT $L94796
$L92929:

; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

	cmp	DWORD PTR _pszSrc$[ebp], 0
	jne	SHORT $L92931

; 597  : 				AtlThrow(E_INVALIDARG);			

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92931:

; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	mov	DWORD PTR _nOldLength$92933[ebp], eax

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nOffset$92934[ebp], ecx

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92935[ebp], eax

; 605  : 			if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$92934[ebp]
	cmp	eax, DWORD PTR _nOldLength$92933[ebp]
	ja	SHORT $L92936

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$92935[ebp]
	add	ecx, DWORD PTR _nOffset$92934[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
	add	esp, 12					; 0000000cH

; 608  : 			}
; 609  : 			else

	jmp	SHORT $L92937
$L92936:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92937:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
$L94796:

; 614  : 		}
; 615  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92811 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92808

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92805
$L92808:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92809

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92805
$L92809:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92811[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92811[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L92805:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 509  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 510  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 511  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
EXTRN	_memmove:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 656  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 658  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
END
