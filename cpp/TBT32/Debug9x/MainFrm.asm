; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\MainFrm.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0L@GOKPKJAL@CMainFrame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@DKNANAFE@Failed?5to?5create?5view?5window?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@PFGMLJKC@Failed?5to?5create?5status?5bar?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04HJGAMMCE@?4Ast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LHJABDGJ@3?9?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IKPADKNJ@2?9?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04MNFAEAAJ@1?9?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CAsFile@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dest@CAsFile@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toTextType@CAsFileAry@@QAEPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbolAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbolAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTextBlock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTextBlock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECTextBlock@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1RTFFuncs@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRTFFuncs@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportHelp@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportHelp@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDHelpTxt@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportRegText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportRegText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDregText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportAspText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportAspText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDAspectText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportReportText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportReportText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTextType@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSymTypes@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegDbExport@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAspDbExport@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHlpDbExport@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReptDbExport@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CMainFrame@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSelectTextItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAspTextEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportahelpfile@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CProgress@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportaspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileSelector@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportreporttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRegulartxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegTextEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnHelptxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOptionsSetup@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSetup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnArraytext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddlanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetLanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnExportExportaspecttext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnExportExporthelp@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnExportExportregulartext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnExportExportreports@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CMainFrame@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CReptDbExport@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CHlpDbExport@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAspDbExport@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRegDbExport@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportReportText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportAspText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportRegText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportHelp@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7RTFFuncs@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B	; CMainFrame::classCMainFrame
PUBLIC	?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z ; CMainFrame::OnCreate
PUBLIC	?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z		; CMainFrame::OnSetFocus
PUBLIC	?OnAspecttext@CMainFrame@@IAEXXZ		; CMainFrame::OnAspecttext
PUBLIC	?OnImportImportahelpfile@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportahelpfile
PUBLIC	?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportahelpfile
PUBLIC	?OnImportImportaspecttext@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportaspecttext
PUBLIC	?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportaspecttext
PUBLIC	?OnImportImportplanethousetext@CMainFrame@@IAEXXZ ; CMainFrame::OnImportImportplanethousetext
PUBLIC	?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportplanethousetext
PUBLIC	?OnImportImportreporttext@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportreporttext
PUBLIC	?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportreporttext
PUBLIC	?OnRegulartxt@CMainFrame@@IAEXXZ		; CMainFrame::OnRegulartxt
PUBLIC	?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateRegulartxt
PUBLIC	?OnHelptxt@CMainFrame@@IAEXXZ			; CMainFrame::OnHelptxt
PUBLIC	?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z	; CMainFrame::OnUpdateHelptxt
PUBLIC	?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ ; CMainFrame::OnEdittextsourcesReporttextsources
PUBLIC	?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateEdittextsourcesReporttextsources
PUBLIC	?OnOptionsSetup@CMainFrame@@IAEXXZ		; CMainFrame::OnOptionsSetup
PUBLIC	?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateOptionsSetup
PUBLIC	?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B ; CMainFrame::_messageEntries
PUBLIC	?messageMap@CMainFrame@@1UAFX_MSGMAP@@B		; CMainFrame::messageMap
PUBLIC	?OnArraytext@CMainFrame@@QAEXXZ			; CMainFrame::OnArraytext
PUBLIC	?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateArraytext
PUBLIC	?OnAddlanguage@CMainFrame@@QAEXXZ		; CMainFrame::OnAddlanguage
PUBLIC	?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateAddlanguage
PUBLIC	?OnSetLanguage@CMainFrame@@QAEXXZ		; CMainFrame::OnSetLanguage
PUBLIC	?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateSetLanguage
PUBLIC	?OnExportExportaspecttext@CMainFrame@@QAEXXZ	; CMainFrame::OnExportExportaspecttext
PUBLIC	?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateExportExportaspecttext
PUBLIC	?OnExportExporthelp@CMainFrame@@QAEXXZ		; CMainFrame::OnExportExporthelp
PUBLIC	?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateExportExporthelp
PUBLIC	?OnExportExportregulartext@CMainFrame@@QAEXXZ	; CMainFrame::OnExportExportregulartext
PUBLIC	?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateExportExportregulartext
PUBLIC	?OnExportExportreports@CMainFrame@@QAEXXZ	; CMainFrame::OnExportExportreports
PUBLIC	?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateExportExportreports
PUBLIC	?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ ; CMainFrame::OnImportImportexportedaspectfile
PUBLIC	?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportexportedaspectfile
PUBLIC	?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ ; CMainFrame::OnImportImportexportedhelpfile
PUBLIC	?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportexportedhelpfile
PUBLIC	?OnImportImportexportedplanet@CMainFrame@@QAEXXZ ; CMainFrame::OnImportImportexportedplanet
PUBLIC	?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportexportedplanet
PUBLIC	?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ ; CMainFrame::OnImportImportexportedreportfile
PUBLIC	??_C@_0L@GOKPKJAL@CMainFrame?$AA@		; `string'
PUBLIC	?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportexportedreportfile
EXTRN	?classCFrameWnd@CFrameWnd@@2UCRuntimeClass@@B:BYTE ; CFrameWnd::classCFrameWnd
EXTRN	?messageMap@CFrameWnd@@1UAFX_MSGMAP@@B:QWORD	; CFrameWnd::messageMap
_DATA	SEGMENT
_THIS_FILE DB	'c:\astrow32dev\tbt32\mainfrm.cpp', 00H
_DATA	ENDS
;	COMDAT ??_C@_0L@GOKPKJAL@CMainFrame?$AA@
CONST	SEGMENT
??_C@_0L@GOKPKJAL@CMainFrame?$AA@ DB 'CMainFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B DD FLAT:??_C@_0L@GOKPKJAL@CMainFrame?$AA@ ; CMainFrame::classCMainFrame
	DD	01b4H
	DD	0ffffH
	DD	00H
	DD	FLAT:?classCFrameWnd@CFrameWnd@@2UCRuntimeClass@@B
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CMainFrame::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z
	DD	07H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	FLAT:?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
	DD	0111H
	DD	00H
	DD	08005H
	DD	08005H
	DD	035H
	DD	FLAT:?OnAspecttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08008H
	DD	08008H
	DD	035H
	DD	FLAT:?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08008H
	DD	08008H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08007H
	DD	08007H
	DD	035H
	DD	FLAT:?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08007H
	DD	08007H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08006H
	DD	08006H
	DD	035H
	DD	FLAT:?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08006H
	DD	08006H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08009H
	DD	08009H
	DD	035H
	DD	FLAT:?OnImportImportreporttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08009H
	DD	08009H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08003H
	DD	08003H
	DD	035H
	DD	FLAT:?OnRegulartxt@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08003H
	DD	08003H
	DD	03dH
	DD	FLAT:?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800eH
	DD	0800eH
	DD	035H
	DD	FLAT:?OnHelptxt@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800eH
	DD	0800eH
	DD	03dH
	DD	FLAT:?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800fH
	DD	0800fH
	DD	035H
	DD	FLAT:?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800fH
	DD	0800fH
	DD	03dH
	DD	FLAT:?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08011H
	DD	08011H
	DD	035H
	DD	FLAT:?OnOptionsSetup@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08011H
	DD	08011H
	DD	03dH
	DD	FLAT:?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08019H
	DD	08019H
	DD	035H
	DD	FLAT:?OnArraytext@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08019H
	DD	08019H
	DD	03dH
	DD	FLAT:?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801cH
	DD	0801cH
	DD	035H
	DD	FLAT:?OnAddlanguage@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801cH
	DD	0801cH
	DD	03dH
	DD	FLAT:?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801bH
	DD	0801bH
	DD	035H
	DD	FLAT:?OnSetLanguage@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801bH
	DD	0801bH
	DD	03dH
	DD	FLAT:?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08020H
	DD	08020H
	DD	035H
	DD	FLAT:?OnExportExportaspecttext@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08020H
	DD	08020H
	DD	03dH
	DD	FLAT:?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801dH
	DD	0801dH
	DD	035H
	DD	FLAT:?OnExportExporthelp@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801dH
	DD	0801dH
	DD	03dH
	DD	FLAT:?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801fH
	DD	0801fH
	DD	035H
	DD	FLAT:?OnExportExportregulartext@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801fH
	DD	0801fH
	DD	03dH
	DD	FLAT:?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801eH
	DD	0801eH
	DD	035H
	DD	FLAT:?OnExportExportreports@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801eH
	DD	0801eH
	DD	03dH
	DD	FLAT:?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08022H
	DD	08022H
	DD	035H
	DD	FLAT:?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08022H
	DD	08022H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08023H
	DD	08023H
	DD	035H
	DD	FLAT:?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08023H
	DD	08023H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08021H
	DD	08021H
	DD	035H
	DD	FLAT:?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08021H
	DD	08021H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08024H
	DD	08024H
	DD	035H
	DD	FLAT:?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08024H
	DD	08024H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CMainFrame@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CMainFrame@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CFrameWnd@@1UAFX_MSGMAP@@B ; CMainFrame::messageMap
	DD	FLAT:?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
_DATA	SEGMENT
	ORG $+3
_indicators DD	00H
	DD	0e701H
	DD	0e702H
	DD	0e703H
_DATA	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	??1CAsFile@@QAE@XZ				; CAsFile::~CAsFile
PUBLIC	??_ECAsFile@@QAEPAXI@Z				; CAsFile::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCcsu /ZI
rtc$TMZ	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECAsFile@@QAEPAXI@Z PROC NEAR			; CAsFile::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93229
	push	OFFSET FLAT:??1CAsFile@@QAE@XZ		; CAsFile::~CAsFile
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	156					; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93230
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93230:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93228
$L93229:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAsFile@@QAE@XZ			; CAsFile::~CAsFile
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93232
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93232:
	mov	eax, DWORD PTR _this$[ebp]
$L93228:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECAsFile@@QAEPAXI@Z ENDP				; CAsFile::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CAsFile@@QAE@XZ PROC NEAR				; CAsFile::~CAsFile, COMDAT
; _this$ = ecx

; 16   :     ~CAsFile() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAsFile@@QAE@XZ ENDP					; CAsFile::~CAsFile
_TEXT	ENDS
PUBLIC	??1CSymbol@@QAE@XZ				; CSymbol::~CSymbol
PUBLIC	??_ECSymbol@@QAEPAXI@Z				; CSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECSymbol@@QAEPAXI@Z PROC NEAR			; CSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93359
	push	OFFSET FLAT:??1CSymbol@@QAE@XZ		; CSymbol::~CSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93360
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93360:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93358
$L93359:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93362
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93362:
	mov	eax, DWORD PTR _this$[ebp]
$L93358:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECSymbol@@QAEPAXI@Z ENDP				; CSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSymbol@@6B@				; CSymbol::`vftable'
EXTRN	?Read@CSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CSymbol::Read
;	COMDAT ??_7CSymbol@@6B@
; File c:\astrow32dev\tbt32\symbol.hpp
CONST	SEGMENT
??_7CSymbol@@6B@ DD FLAT:?Read@CSymbol@@UAEHPAU_iobuf@@@Z ; CSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSymbol@@QAE@XZ PROC NEAR				; CSymbol::~CSymbol, COMDAT
; _this$ = ecx

; 14   : 	~CSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CSymbol@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSymbol@@QAE@XZ ENDP					; CSymbol::~CSymbol
_TEXT	ENDS
PUBLIC	??1CRSymbol@@QAE@XZ				; CRSymbol::~CRSymbol
PUBLIC	??_ECRSymbol@@QAEPAXI@Z				; CRSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECRSymbol@@QAEPAXI@Z PROC NEAR			; CRSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93410
	push	OFFSET FLAT:??1CRSymbol@@QAE@XZ		; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93411
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93411:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93409
$L93410:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRSymbol@@QAE@XZ			; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93413
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93413:
	mov	eax, DWORD PTR _this$[ebp]
$L93409:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECRSymbol@@QAEPAXI@Z ENDP				; CRSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CRSymbol@@6B@				; CRSymbol::`vftable'
EXTRN	?Read@CRSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CRSymbol::Read
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT
??_7CRSymbol@@6B@ DD FLAT:?Read@CRSymbol@@UAEHPAU_iobuf@@@Z ; CRSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRSymbol@@QAE@XZ PROC NEAR				; CRSymbol::~CRSymbol, COMDAT
; _this$ = ecx

; 28   : 	~CRSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRSymbol@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRSymbol@@QAE@XZ ENDP				; CRSymbol::~CRSymbol
_TEXT	ENDS
PUBLIC	??1CTextBlock@@QAE@XZ				; CTextBlock::~CTextBlock
PUBLIC	??_ECTextBlock@@QAEPAXI@Z			; CTextBlock::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECTextBlock@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECTextBlock@@QAEPAXI@Z PROC NEAR			; CTextBlock::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93566
	push	OFFSET FLAT:??1CTextBlock@@QAE@XZ	; CTextBlock::~CTextBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	144					; 00000090H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93567
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93567:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93565
$L93566:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTextBlock@@QAE@XZ			; CTextBlock::~CTextBlock
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93569
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93569:
	mov	eax, DWORD PTR _this$[ebp]
$L93565:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECTextBlock@@QAEPAXI@Z ENDP				; CTextBlock::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\textbloc.hpp
;	COMDAT ??1CTextBlock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTextBlock@@QAE@XZ PROC NEAR				; CTextBlock::~CTextBlock, COMDAT
; _this$ = ecx

; 9    :    ~CTextBlock() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTextBlock@@QAE@XZ ENDP				; CTextBlock::~CTextBlock
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -168				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 148		; 00000094H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L23727
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L23727

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L23728
$L23727:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L23728:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	eax, DWORD PTR _pfnGetThreadACP$[ebp]
	push	eax
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96043
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96043:
	DD	1
	DD	$L96042
$L96042:
	DD	-156					; ffffff64H
	DD	148					; 00000094H
	DD	$L96039
$L96039:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$23715 = -52					; size = 4
_szACP$ = -40						; size = 7
_lcidThread$ = -24					; size = 4
_nACP$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L23714

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	eax, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$23715[ebp], eax
$L23717:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$23715[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L23714

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	eax, DWORD PTR _nACP$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], eax

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$23715[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$23715[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$23715[ebp], ecx

; 117  : 		}

	jmp	SHORT $L23717
$L23714:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L23719

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L23719:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96054
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96054:
	DD	1
	DD	$L96053
$L96053:
	DD	-40					; ffffffd8H
	DD	7
	DD	$L96051
$L96051:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??1CATextType@@QAE@XZ				; CATextType::~CATextType
PUBLIC	??_ECATextType@@QAEPAXI@Z			; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECATextType@@QAEPAXI@Z PROC NEAR			; CATextType::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93717
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93718
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93718:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93716
$L93717:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93720
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93720:
	mov	eax, DWORD PTR _this$[ebp]
$L93716:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECATextType@@QAEPAXI@Z ENDP				; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CATextType@@QAE@XZ PROC NEAR				; CATextType::~CATextType, COMDAT
; _this$ = ecx

; 16   :     ~CATextType() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextType@@QAE@XZ ENDP				; CATextType::~CATextType
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ; CMainFrame::GetRuntimeClass
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CMainFrame::GetRuntimeClass, COMDAT
; _this$ = ecx

; 49   : IMPLEMENT_DYNAMIC(CMainFrame, CFrameWnd)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B ; CMainFrame::classCMainFrame
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ENDP ; CMainFrame::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ	; CMainFrame::GetMessageMap
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainFrame::GetMessageMap, COMDAT
; _this$ = ecx

; 51   : BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CMainFrame@@1UAFX_MSGMAP@@B ; CMainFrame::messageMap
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMainFrame::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CMainFrame@@QAE@XZ				; CMainFrame::CMainFrame
PUBLIC	?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z ; CMainFrame::PreCreateWindow
PUBLIC	?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ; CMainFrame::OnCmdMsg
PUBLIC	?AssertValid@CMainFrame@@UBEXXZ			; CMainFrame::AssertValid
PUBLIC	?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z	; CMainFrame::Dump
PUBLIC	??_7CMainFrame@@6B@				; CMainFrame::`vftable'
PUBLIC	??_GCMainFrame@@UAEPAXI@Z			; CMainFrame::`scalar deleting destructor'
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CFrameWnd@@QAE@XZ:NEAR			; CFrameWnd::CFrameWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CFrameWnd@@UAEHPBD0KABUtagRECT@@PAVCWnd@@0KPAUCCreateContext@@@Z:NEAR ; CFrameWnd::Create
EXTRN	?LoadFrame@CFrameWnd@@UAEHIKPAVCWnd@@PAUCCreateContext@@@Z:NEAR ; CFrameWnd::LoadFrame
EXTRN	?GetActiveDocument@CFrameWnd@@UAEPAVCDocument@@XZ:NEAR ; CFrameWnd::GetActiveDocument
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?GetActiveFrame@CFrameWnd@@UAEPAV1@XZ:NEAR	; CFrameWnd::GetActiveFrame
EXTRN	?GetMessageString@CFrameWnd@@UBEXIAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CFrameWnd::GetMessageString
EXTRN	?RecalcLayout@CFrameWnd@@UAEXH@Z:NEAR		; CFrameWnd::RecalcLayout
EXTRN	?ActivateFrame@CFrameWnd@@UAEXH@Z:NEAR		; CFrameWnd::ActivateFrame
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	??0CStatusBar@@QAE@XZ:NEAR			; CStatusBar::CStatusBar
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?BeginModalState@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::BeginModalState
EXTRN	?EndModalState@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::EndModalState
EXTRN	?OnSetPreviewMode@CFrameWnd@@UAEXHPAUCPrintPreviewState@@@Z:NEAR ; CFrameWnd::OnSetPreviewMode
EXTRN	?GetMessageBar@CFrameWnd@@UAEPAVCWnd@@XZ:NEAR	; CFrameWnd::GetMessageBar
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?NegotiateBorderSpace@CFrameWnd@@UAEHIPAUtagRECT@@@Z:NEAR ; CFrameWnd::NegotiateBorderSpace
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?OnCreateClient@CFrameWnd@@MAEHPAUtagCREATESTRUCTA@@PAUCCreateContext@@@Z:NEAR ; CFrameWnd::OnCreateClient
EXTRN	??1CStatusBar@@UAE@XZ:NEAR			; CStatusBar::~CStatusBar
EXTRN	??1CFrameWnd@@UAE@XZ:NEAR			; CFrameWnd::~CFrameWnd
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?IsFrameWnd@CFrameWnd@@UBEHXZ:NEAR		; CFrameWnd::IsFrameWnd
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?OnUpdateFrameTitle@CFrameWnd@@UAEXH@Z:NEAR	; CFrameWnd::OnUpdateFrameTitle
EXTRN	?OnUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z:NEAR ; CFrameWnd::OnUpdateFrameMenu
EXTRN	?GetDefaultAccelerator@CFrameWnd@@UAEPAUHACCEL__@@XZ:NEAR ; CFrameWnd::GetDefaultAccelerator
EXTRN	?PreTranslateMessage@CFrameWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CFrameWnd::PreTranslateMessage
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?DelayUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z:NEAR ; CFrameWnd::DelayUpdateFrameMenu
EXTRN	?ExitHelpMode@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::ExitHelpMode
EXTRN	??0CChildView@@QAE@XZ:NEAR			; CChildView::CChildView
EXTRN	?OnCommand@CFrameWnd@@MAEHIJ@Z:NEAR		; CFrameWnd::OnCommand
EXTRN	?PostNcDestroy@CFrameWnd@@MAEXXZ:NEAR		; CFrameWnd::PostNcDestroy
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	??_ECMainFrame@@UAEPAXI@Z:NEAR			; CMainFrame::`vector deleting destructor'
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMainFrame@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMainFrame@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMainFrame@@QAE@XZ$1
__ehfuncinfo$??0CMainFrame@@QAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0CMainFrame@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT
??_7CMainFrame@@6B@ DD FLAT:?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ; CMainFrame::`vftable'
	DD	FLAT:??_ECMainFrame@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CMainFrame@@UBEXXZ
	DD	FLAT:?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CFrameWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CFrameWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CFrameWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CFrameWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CFrameWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CFrameWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CFrameWnd@@UAEHPBD0KABUtagRECT@@PAVCWnd@@0KPAUCCreateContext@@@Z
	DD	FLAT:?LoadFrame@CFrameWnd@@UAEHIKPAVCWnd@@PAUCCreateContext@@@Z
	DD	FLAT:?GetActiveDocument@CFrameWnd@@UAEPAVCDocument@@XZ
	DD	FLAT:?GetActiveFrame@CFrameWnd@@UAEPAV1@XZ
	DD	FLAT:?GetMessageString@CFrameWnd@@UBEXIAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	FLAT:?RecalcLayout@CFrameWnd@@UAEXH@Z
	DD	FLAT:?ActivateFrame@CFrameWnd@@UAEXH@Z
	DD	FLAT:?OnSetPreviewMode@CFrameWnd@@UAEXHPAUCPrintPreviewState@@@Z
	DD	FLAT:?GetMessageBar@CFrameWnd@@UAEPAVCWnd@@XZ
	DD	FLAT:?NegotiateBorderSpace@CFrameWnd@@UAEHIPAUtagRECT@@@Z
	DD	FLAT:?OnCreateClient@CFrameWnd@@MAEHPAUtagCREATESTRUCTA@@PAUCCreateContext@@@Z
	DD	FLAT:?OnUpdateFrameTitle@CFrameWnd@@UAEXH@Z
	DD	FLAT:?OnUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z
	DD	FLAT:?GetDefaultAccelerator@CFrameWnd@@UAEPAUHACCEL__@@XZ
	DD	FLAT:?DelayUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z
	DD	FLAT:?ExitHelpMode@CFrameWnd@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CMainFrame@@QAE@XZ PROC NEAR				; CMainFrame::CMainFrame, COMDAT
; _this$ = ecx

; 110  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMainFrame@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFrameWnd@@QAE@XZ			; CFrameWnd::CFrameWnd
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0CStatusBar@@QAE@XZ			; CStatusBar::CStatusBar
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??0CChildView@@QAE@XZ			; CChildView::CChildView

; 111  : 	// TODO: add member initialization code here
; 112  : 	
; 113  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMainFrame@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
__unwindfunclet$??0CMainFrame@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
__ehhandler$??0CMainFrame@@QAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CMainFrame@@QAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??0CMainFrame@@QAE@XZ ENDP				; CMainFrame::CMainFrame
PUBLIC	??1CMainFrame@@UAE@XZ				; CMainFrame::~CMainFrame
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCMainFrame@@UAEPAXI@Z PROC NEAR			; CMainFrame::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMainFrame@@UAE@XZ			; CMainFrame::~CMainFrame
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L95316
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L95316:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCMainFrame@@UAEPAXI@Z ENDP				; CMainFrame::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CChildView@@UAE@XZ:NEAR			; CChildView::~CChildView
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMainFrame@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMainFrame@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CMainFrame@@UAE@XZ$1
__ehfuncinfo$??1CMainFrame@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1CMainFrame@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CMainFrame@@UAE@XZ PROC NEAR				; CMainFrame::~CMainFrame, COMDAT
; _this$ = ecx

; 116  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMainFrame@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 117  : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??1CChildView@@UAE@XZ			; CChildView::~CChildView
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMainFrame@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
__unwindfunclet$??1CMainFrame@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
__ehhandler$??1CMainFrame@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CMainFrame@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CMainFrame@@UAE@XZ ENDP				; CMainFrame::~CMainFrame
PUBLIC	?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA ; `CMainFrame::OnCreate'::`2'::__LINE__Var
PUBLIC	??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@ ; `string'
PUBLIC	??_C@_0BO@DKNANAFE@Failed?5to?5create?5view?5window?6?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BN@PFGMLJKC@Failed?5to?5create?5status?5bar?6?$AA@ ; `string'
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ		; ATL::CTraceFileAndLineInfo::operator()
EXTRN	?SetIndicators@CStatusBar@@QAEHPBIH@Z:NEAR	; CStatusBar::SetIndicators
EXTRN	??0CRect@@QAE@HHHH@Z:NEAR			; CRect::CRect
EXTRN	?OnCreate@CFrameWnd@@IAEHPAUtagCREATESTRUCTA@@@Z:NEAR ; CFrameWnd::OnCreate
;	COMDAT ??_C@_0BO@DKNANAFE@Failed?5to?5create?5view?5window?6?$AA@
CONST	SEGMENT
??_C@_0BO@DKNANAFE@Failed?5to?5create?5view?5window?6?$AA@ DB 'Failed to '
	DB	'create view window', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA DD 078H ; `CMainFrame::OnCreate'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
CONST	SEGMENT
??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@ DB 'c:\astrow32'
	DB	'dev\tbt32\mainfrm.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PFGMLJKC@Failed?5to?5create?5status?5bar?6?$AA@
CONST	SEGMENT
??_C@_0BN@PFGMLJKC@Failed?5to?5create?5status?5bar?6?$AA@ DB 'Failed to c'
	DB	'reate status bar', 0aH, 00H			; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
$T96095 = -256						; size = 16
$T96096 = -232						; size = 8
$T96097 = -216						; size = 8
_this$ = -8						; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CMainFrame::OnCreate, COMDAT
; _this$ = ecx

; 120  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 	if (CFrameWnd::OnCreate(lpCreateStruct) == -1)

	mov	eax, DWORD PTR _lpCreateStruct$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCreate@CFrameWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CFrameWnd::OnCreate
	cmp	eax, -1
	jne	SHORT $L95324

; 122  : 		return -1;

	or	eax, -1
	jmp	$L95323
$L95324:

; 123  : 	// create a view to occupy the client area of the frame
; 124  : 	if (!m_wndView.Create(NULL, NULL, AFX_WS_DEFAULT_VIEW,
; 125  : 		CRect(0, 0, 0, 0), this, AFX_IDW_PANE_FIRST, NULL))

	mov	esi, esp
	push	0
	push	59648					; 0000e900H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR $T96095[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect
	push	eax
	push	1350565888				; 50800000H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+356]
	call	DWORD PTR [eax+92]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L95326

; 126  : 	{
; 127  : 		TRACE0("Failed to create view window\n");

	push	OFFSET FLAT:??_C@_0BO@DKNANAFE@Failed?5to?5create?5view?5window?6?$AA@
	push	OFFSET FLAT:??_C@_02DKCKIIND@?$CFs?$AA@
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET FLAT:??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
	lea	ecx, DWORD PTR $T96096[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 12					; 0000000cH

; 128  : 		return -1;

	or	eax, -1
	jmp	SHORT $L95323
$L95326:

; 129  : 	}
; 130  : 
; 131  : 	if (!m_wndStatusBar.Create(this) ||
; 132  : 		!m_wndStatusBar.SetIndicators(indicators,
; 133  : 		  sizeof(indicators)/sizeof(UINT)))

	mov	esi, esp
	push	59393					; 0000e801H
	push	1342210560				; 50008200H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	call	DWORD PTR [eax+364]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L95334
	push	4
	push	OFFSET FLAT:_indicators
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?SetIndicators@CStatusBar@@QAEHPBIH@Z	; CStatusBar::SetIndicators
	test	eax, eax
	jne	SHORT $L95333
$L95334:

; 134  : 	{
; 135  : 		TRACE0("Failed to create status bar\n");

	push	OFFSET FLAT:??_C@_0BN@PFGMLJKC@Failed?5to?5create?5status?5bar?6?$AA@
	push	OFFSET FLAT:??_C@_02DKCKIIND@?$CFs?$AA@
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z@4JA
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET FLAT:??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
	lea	ecx, DWORD PTR $T96097[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 12					; 0000000cH

; 136  : 		return -1;      // fail to create

	or	eax, -1
	jmp	SHORT $L95323
$L95333:

; 137  : 	}
; 138  : 
; 139  : 	return 0;

	xor	eax, eax
$L95323:

; 140  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CMainFrame::OnCreate
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
EXTRN	?atlTraceGeneral@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceGeneral
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_pszFmt$ = 12						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 173  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 174  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 175  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, atlTraceGeneral, 0, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceGeneral@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceGeneral
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 176  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 177  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVA
	add	esp, 28					; 0000001cH

; 123  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
EXTRN	?PreCreateWindow@CFrameWnd@@MAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CFrameWnd::PreCreateWindow
EXTRN	?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z:NEAR ; AfxRegisterWndClass
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cs$ = 8						; size = 4
?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z PROC NEAR ; CMainFrame::PreCreateWindow, COMDAT
; _this$ = ecx

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 	if( !CFrameWnd::PreCreateWindow(cs) )

	mov	eax, DWORD PTR _cs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreCreateWindow@CFrameWnd@@MAEHAAUtagCREATESTRUCTA@@@Z ; CFrameWnd::PreCreateWindow
	test	eax, eax
	jne	SHORT $L95341

; 145  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $L95340
$L95341:

; 146  : 	// TODO: Modify the Window class or styles here by modifying
; 147  : 	//  the CREATESTRUCT cs
; 148  : 
; 149  : 	cs.dwExStyle &= ~WS_EX_CLIENTEDGE;

	mov	eax, DWORD PTR _cs$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	and	ecx, -513				; fffffdffH
	mov	edx, DWORD PTR _cs$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 150  : 	cs.lpszClass = AfxRegisterWndClass(0);

	push	0
	push	0
	push	0
	push	0
	call	?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
	mov	ecx, DWORD PTR _cs$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 151  : 	return TRUE;

	mov	eax, 1
$L95340:

; 152  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTA@@@Z ENDP ; CMainFrame::PreCreateWindow
_TEXT	ENDS
EXTRN	?AssertValid@CFrameWnd@@UBEXXZ:NEAR		; CFrameWnd::AssertValid
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AssertValid@CMainFrame@@UBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AssertValid@CMainFrame@@UBEXXZ PROC NEAR		; CMainFrame::AssertValid, COMDAT
; _this$ = ecx

; 159  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 160  : 	CFrameWnd::AssertValid();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssertValid@CFrameWnd@@UBEXXZ		; CFrameWnd::AssertValid

; 161  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AssertValid@CMainFrame@@UBEXXZ ENDP			; CMainFrame::AssertValid
_TEXT	ENDS
EXTRN	?Dump@CFrameWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CFrameWnd::Dump
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dc$ = 8						; size = 4
?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CMainFrame::Dump, COMDAT
; _this$ = ecx

; 164  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 	CFrameWnd::Dump(dc);

	mov	eax, DWORD PTR _dc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Dump@CFrameWnd@@UBEXAAVCDumpContext@@@Z ; CFrameWnd::Dump

; 166  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z ENDP		; CMainFrame::Dump
_TEXT	ENDS
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pOldWnd$ = 8						; size = 4
?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z PROC NEAR	; CMainFrame::OnSetFocus, COMDAT
; _this$ = ecx

; 173  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 	// forward focus to the view window
; 175  : 	m_wndView.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 176  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z ENDP		; CMainFrame::OnSetFocus
_TEXT	ENDS
EXTRN	?OnCmdMsg@CFrameWnd@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CFrameWnd::OnCmdMsg
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
_nCode$ = 12						; size = 4
_pExtra$ = 16						; size = 4
_pHandlerInfo$ = 20					; size = 4
?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z PROC NEAR ; CMainFrame::OnCmdMsg, COMDAT
; _this$ = ecx

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 	// let the view have first crack at the command
; 181  : 	if (m_wndView.OnCmdMsg(nID, nCode, pExtra, pHandlerInfo))

	mov	esi, esp
	mov	eax, DWORD PTR _pHandlerInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExtra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+356]
	call	DWORD PTR [eax+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L95360

; 182  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $L95359
$L95360:

; 183  : 
; 184  : 	// otherwise, do default handling
; 185  : 	return CFrameWnd::OnCmdMsg(nID, nCode, pExtra, pHandlerInfo);

	mov	eax, DWORD PTR _pHandlerInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExtra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCmdMsg@CFrameWnd@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ; CFrameWnd::OnCmdMsg
$L95359:

; 186  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ENDP ; CMainFrame::OnCmdMsg
_TEXT	ENDS
PUBLIC	??1CAspTextEdit@@UAE@XZ				; CAspTextEdit::~CAspTextEdit
PUBLIC	??1CSelectTextItem@@UAE@XZ			; CSelectTextItem::~CSelectTextItem
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
EXTRN	??0CAspTextEdit@@QAE@PAVCWnd@@@Z:NEAR		; CAspTextEdit::CAspTextEdit
EXTRN	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CATextTypeAry::toTextType
EXTRN	?pATextTypes@@3PAVCATextTypeAry@@A:DWORD	; pATextTypes
EXTRN	??0CSelectTextItem@@QAE@PAVCWnd@@@Z:NEAR	; CSelectTextItem::CSelectTextItem
EXTRN	_strcpy:NEAR
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnAspecttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnAspecttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnAspecttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnAspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_asp$ = -624						; size = 416
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnAspecttext@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnAspecttext, COMDAT
; _this$ = ecx

; 190  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnAspecttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 808				; 00000328H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-820]
	mov	ecx, 202				; 000000caH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	// TODO: Add your command handler code here
; 192  : 	char buf1[20];
; 193  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 194  : 	it.m_type=3;

	mov	DWORD PTR _it$[ebp+120], 3

; 195  : 	it.m_ary=0;

	mov	DWORD PTR _it$[ebp+124], 0

; 196  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95366

; 197  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95363
$L95366:

; 198  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 199  :     strcpy( buf1, pATextTypes->toTextType( str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 200  : 	CAspTextEdit asp(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _asp$[ebp]
	call	??0CAspTextEdit@@QAE@PAVCWnd@@@Z	; CAspTextEdit::CAspTextEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 201  : 	asp.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _asp$[ebp+220]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 202  : 	asp.DoModal();

	lea	ecx, DWORD PTR _asp$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 203  : 	
; 204  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _asp$[ebp]
	call	??1CAspTextEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95363:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96131
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 820				; 00000334H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96131:
	DD	4
	DD	$L96130
$L96130:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L96124
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L96125
	DD	-200					; ffffff38H
	DD	4
	DD	$L96126
	DD	-624					; fffffd90H
	DD	416					; 000001a0H
	DD	$L96127
$L96127:
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	0
$L96126:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96125:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L96124:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _asp$[ebp]
	jmp	??1CAspTextEdit@@UAE@XZ
__ehhandler$?OnAspecttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnAspecttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnAspecttext@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnAspecttext
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CSelectTextItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSelectTextItem@@UAE@XZ PROC NEAR			; CSelectTextItem::~CSelectTextItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSelectTextItem@@UAE@XZ ENDP				; CSelectTextItem::~CSelectTextItem
_TEXT	ENDS
PUBLIC	??1CWSpell@@UAE@XZ				; CWSpell::~CWSpell
PUBLIC	??1CDAspectText@@UAE@XZ				; CDAspectText::~CDAspectText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CAspTextEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$6
__ehfuncinfo$??1CAspTextEdit@@UAE@XZ DD 019930520H
	DD	07H
	DD	FLAT:__unwindtable$??1CAspTextEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CAspTextEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CAspTextEdit@@UAE@XZ PROC NEAR			; CAspTextEdit::~CAspTextEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAspTextEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??1CDAspectText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1CAspTextEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CAspTextEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CAspTextEdit@@UAE@XZ ENDP				; CAspTextEdit::~CAspTextEdit
EXTRN	??1CDaoRecordset@@UAE@XZ:NEAR			; CDaoRecordset::~CDaoRecordset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDAspectText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDAspectText@@UAE@XZ PROC NEAR			; CDAspectText::~CDAspectText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDAspectText@@UAE@XZ ENDP				; CDAspectText::~CDAspectText
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CWSpell@@UAE@XZ PROC NEAR				; CWSpell::~CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWSpell@@UAE@XZ ENDP					; CWSpell::~CWSpell
_TEXT	ENDS
PUBLIC	?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateAspecttext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateAspecttext, COMDAT
; _this$ = ecx

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 	// TODO: Add your command update UI handler code here
; 209  : 		pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 210  : 
; 211  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateAspecttext
_TEXT	ENDS
PUBLIC	??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@ ; `string'
PUBLIC	??_C@_04HJGAMMCE@?4Ast?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportahelpfile'::`2'::__LINE__Var
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
PUBLIC	??1CProgress@@UAE@XZ				; CProgress::~CProgress
PUBLIC	??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; ImportHelp::ImportHelp
EXTRN	?DoModal@CFileDialog@@UAEHXZ:NEAR		; CFileDialog::DoModal
EXTRN	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z:NEAR ; CDirectorySelect::CDirectorySelect
EXTRN	??1CDirectorySelect@@UAE@XZ:NEAR		; CDirectorySelect::~CDirectorySelect
EXTRN	??0CProgress@@QAE@PAVCWnd@@@Z:NEAR		; CProgress::CProgress
EXTRN	?Process@ImportHelp@@QAEXXZ:NEAR		; ImportHelp::Process
EXTRN	?GetSrcDir@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:NEAR ; GetSrcDir
EXTRN	??2@YAPAXIPBDH@Z:NEAR				; operator new
EXTRN	??3@YAXPAXPBDH@Z:NEAR				; operator delete
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportahelpfile@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$5
__ehfuncinfo$?OnImportImportahelpfile@CMainFrame@@IAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
CONST	SEGMENT
??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@ DB 'T'
	DB	'ext Files (*.ast)|*.ast|All Files (*.*)|*.*||', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJGAMMCE@?4Ast?$AA@
CONST	SEGMENT
??_C@_04HJGAMMCE@?4Ast?$AA@ DB '.Ast', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA DD 0d6H ; `CMainFrame::OnImportImportahelpfile'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportahelpfile@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv158 = -992						; size = 4
tv156 = -992						; size = 4
tv151 = -988						; size = 4
tv144 = -988						; size = 4
tv78 = -988						; size = 4
tv69 = -988						; size = 4
$T96172 = -980						; size = 4
$T96173 = -968						; size = 4
$T96174 = -956						; size = 4
$T96175 = -944						; size = 4
$T96178 = -932						; size = 4
$T96179 = -920						; size = 4
_imp$ = -716						; size = 4
_dir$ = -704						; size = 4
_sel$ = -692						; size = 456
_prog$ = -228						; size = 196
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportahelpfile@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportahelpfile, COMDAT
; _this$ = ecx

; 214  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 980				; 000003d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-992]
	mov	ecx, 245				; 000000f5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 	// TODO: Add your command handler code here
; 216  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 217  : 	CDirectorySelect sel(TRUE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 218  : 	CString dir;

	lea	ecx, DWORD PTR _dir$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 219  : 	if ( sel.DoModal() == IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	SHORT $L95387

; 220  : 		dir = sel.GetDirectory();

	lea	eax, DWORD PTR $T96172[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv156[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T96172[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 221  : 	else

	jmp	SHORT $L95389
$L95387:

; 222  : 		dir = GetSrcDir();

	lea	eax, DWORD PTR $T96173[ebp]
	push	eax
	call	?GetSrcDir@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; GetSrcDir
	add	esp, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv158[ebp]
	push	edx
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T96173[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
$L95389:

; 223  : 	ImportHelp *imp = new ImportHelp(&prog,dir,FALSE);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
	add	eax, 9
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	184					; 000000b8H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T96175[ebp], 0
	je	SHORT $L96176
	push	0
	lea	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T96175[ebp]
	call	??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; ImportHelp::ImportHelp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $L96177
$L96176:
	mov	DWORD PTR tv144[ebp], 0
$L96177:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T96174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T96174[ebp]
	mov	DWORD PTR _imp$[ebp], ecx

; 224  : 	imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportHelp@@QAEXXZ		; ImportHelp::Process

; 225  : 	delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T96179[ebp], eax
	mov	ecx, DWORD PTR $T96179[ebp]
	mov	DWORD PTR $T96178[ebp], ecx
	cmp	DWORD PTR $T96178[ebp], 0
	je	SHORT $L96180
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96178[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96178[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $L96181
$L96180:
	mov	DWORD PTR tv151[ebp], 0
$L96181:

; 226  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96196
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 992				; 000003e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96196:
	DD	3
	DD	$L96195
$L96195:
	DD	-228					; ffffff1cH
	DD	196					; 000000c4H
	DD	$L96190
	DD	-692					; fffffd4cH
	DD	456					; 000001c8H
	DD	$L96191
	DD	-704					; fffffd40H
	DD	4
	DD	$L96192
$L96192:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$L96191:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96190:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _dir$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$3:
	lea	ecx, DWORD PTR $T96172[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$4:
	lea	ecx, DWORD PTR $T96173[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$5:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
	add	eax, 9
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96175[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportahelpfile@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportahelpfile@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportahelpfile
PUBLIC	??1CDHelpTxt@@UAE@XZ				; CDHelpTxt::~CDHelpTxt
PUBLIC	??_7ImportHelp@@6B@				; ImportHelp::`vftable'
PUBLIC	??_GImportHelp@@UAEPAXI@Z			; ImportHelp::`scalar deleting destructor'
EXTRN	??0CDHelpTxt@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDHelpTxt::CDHelpTxt
EXTRN	??_EImportHelp@@UAEPAXI@Z:NEAR			; ImportHelp::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\importhelp.h
xdata$x	SEGMENT
__unwindtable$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$1
__ehfuncinfo$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7ImportHelp@@6B@
CONST	SEGMENT
??_7ImportHelp@@6B@ DD FLAT:??_EImportHelp@@UAEPAXI@Z	; ImportHelp::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_dr$ = 12						; size = 4
_bExp$ = 16						; size = 4
??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; ImportHelp::ImportHelp, COMDAT
; _this$ = ecx

; 23   :    ImportHelp(CProgress *p, CString &dr, BOOL bExp=FALSE) {m_pProg=p; dir=dr; m_bExport = bExp; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportHelp@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CDHelpTxt@@QAE@PAVCDaoDatabase@@@Z	; CDHelpTxt::CDHelpTxt
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+180], ecx
	mov	eax, DWORD PTR _dr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bExp$[ebp]
	mov	DWORD PTR [eax+176], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CDHelpTxt@@UAE@XZ
__unwindfunclet$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; ImportHelp::ImportHelp
PUBLIC	??1ImportHelp@@UAE@XZ				; ImportHelp::~ImportHelp
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportHelp@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportHelp@@UAEPAXI@Z PROC NEAR			; ImportHelp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportHelp@@UAE@XZ			; ImportHelp::~ImportHelp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93989
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93989:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportHelp@@UAEPAXI@Z ENDP				; ImportHelp::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?IsOpen@CDaoRecordset@@QBEHXZ:NEAR		; CDaoRecordset::IsOpen
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportHelp@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportHelp@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportHelp@@UAE@XZ$1
__ehfuncinfo$??1ImportHelp@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportHelp@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportHelp@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportHelp@@UAE@XZ PROC NEAR				; ImportHelp::~ImportHelp, COMDAT
; _this$ = ecx

; 24   :    virtual ~ImportHelp() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportHelp@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportHelp@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L93984
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93984:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CDHelpTxt@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportHelp@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CDHelpTxt@@UAE@XZ
__unwindfunclet$??1ImportHelp@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1ImportHelp@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportHelp@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportHelp@@UAE@XZ ENDP				; ImportHelp::~ImportHelp
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDHelpTxt@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDHelpTxt@@UAE@XZ PROC NEAR				; CDHelpTxt::~CDHelpTxt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDHelpTxt@@UAE@XZ ENDP				; CDHelpTxt::~CDHelpTxt
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\directoryselect.h
_TEXT	ENDS
;	COMDAT ?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T96231 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CDirectorySelect::GetDirectory, COMDAT
; _this$ = ecx

; 18   : 	CString GetDirectory() { return m_dir; }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T96231[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 452				; 000001c4H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T96231[ebp]
	or	ecx, 1
	mov	DWORD PTR $T96231[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CDirectorySelect::GetDirectory
_TEXT	ENDS
EXTRN	??1CProgressCtrl@@UAE@XZ:NEAR			; CProgressCtrl::~CProgressCtrl
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CProgress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CProgress@@UAE@XZ$0
__ehfuncinfo$??1CProgress@@UAE@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??1CProgress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CProgress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CProgress@@UAE@XZ PROC NEAR				; CProgress::~CProgress, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CProgress@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1CProgressCtrl@@UAE@XZ		; CProgressCtrl::~CProgressCtrl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CProgress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__ehhandler$??1CProgress@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CProgress@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CProgress@@UAE@XZ ENDP				; CProgress::~CProgress
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportahelpfile, COMDAT
; _this$ = ecx

; 229  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 	// TODO: Add your command update UI handler code here
; 231  : 		pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  : 
; 233  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportahelpfile
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportaspecttext'::`2'::__LINE__Var
PUBLIC	??1CFileSelector@@UAE@XZ			; CFileSelector::~CFileSelector
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
PUBLIC	??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportAspText::ImportAspText
PUBLIC	?toTextType@CAsFileAry@@QAEPADPBD@Z		; CAsFileAry::toTextType
EXTRN	?pFileList@@3PAVCAsFileAry@@A:DWORD		; pFileList
EXTRN	??0CFileSelector@@QAE@PAVCWnd@@@Z:NEAR		; CFileSelector::CFileSelector
EXTRN	?GetSize@CStringArray@@QBEHXZ:NEAR		; CStringArray::GetSize
EXTRN	_memset:NEAR
EXTRN	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CStringArray::operator[]
EXTRN	?Process@ImportAspText@@QAEXXZ:NEAR		; ImportAspText::Process
EXTRN	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CAsFileAry::toFileName
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportaspecttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportaspecttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA DD 0ecH ; `CMainFrame::OnImportImportaspecttext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportaspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv161 = -740						; size = 4
tv154 = -740						; size = 4
$T96249 = -732						; size = 4
$T96250 = -720						; size = 4
$T96253 = -708						; size = 4
$T96254 = -696						; size = 4
_imp$95421 = -492					; size = 4
_str$95419 = -480					; size = 4
_i$95415 = -468						; size = 4
_prog$ = -456						; size = 196
_sel$ = -252						; size = 148
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportaspecttext@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportaspecttext, COMDAT
; _this$ = ecx

; 236  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-740]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 237  : 	// TODO: Add your command handler code here
; 238  : 	char buf1[25], buf2[25];
; 239  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 240  : 	sel.m_type=3;

	mov	DWORD PTR _sel$[ebp+116], 3

; 241  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95413

; 242  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95409
$L95413:

; 243  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 244  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95415[ebp], 0
	jmp	SHORT $L95416
$L95417:
	mov	eax, DWORD PTR _i$95415[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95415[ebp], eax
$L95416:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95415[ebp], eax
	jge	$L95418

; 245  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95415[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95419[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 246  : 		if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95419[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95420

; 247  : 			continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95419[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	SHORT $L95417
$L95420:

; 248  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 249  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 250  : 		strcpy(buf1, pFileList->toFileName( str) );

	lea	eax, DWORD PTR _str$95419[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 251  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 252  : 		ImportAspText *imp = new ImportAspText(buf1,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	204					; 000000ccH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96250[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96250[ebp], 0
	je	SHORT $L96251
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96250[ebp]
	call	??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportAspText::ImportAspText
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $L96252
$L96251:
	mov	DWORD PTR tv154[ebp], 0
$L96252:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T96249[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96249[ebp]
	mov	DWORD PTR _imp$95421[ebp], eax

; 253  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95421[ebp]
	call	?Process@ImportAspText@@QAEXXZ		; ImportAspText::Process

; 254  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95421[ebp]
	mov	DWORD PTR $T96254[ebp], eax
	mov	ecx, DWORD PTR $T96254[ebp]
	mov	DWORD PTR $T96253[ebp], ecx
	cmp	DWORD PTR $T96253[ebp], 0
	je	SHORT $L96255
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96253[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96253[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $L96256
$L96255:
	mov	DWORD PTR tv161[ebp], 0
$L96256:

; 255  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95419[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	$L95417
$L95418:

; 256  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95409:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96271
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 740				; 000002e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96271:
	DD	5
	DD	$L96270
$L96270:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96263
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L96264
	DD	-252					; ffffff04H
	DD	148					; 00000094H
	DD	$L96265
	DD	-456					; fffffe38H
	DD	196					; 000000c4H
	DD	$L96266
	DD	-480					; fffffe20H
	DD	4
	DD	$L96267
$L96267:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96266:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96265:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96264:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96263:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$95419[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96250[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportaspecttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportaspecttext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportaspecttext
PUBLIC	?dest@CAsFile@@QAEPADXZ				; CAsFile::dest
EXTRN	?Find@CAsFileAry@@QAEPAVCAsFile@@PBDH@Z:NEAR	; CAsFileAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
;	COMDAT ?toTextType@CAsFileAry@@QAEPADPBD@Z
_TEXT	SEGMENT
_pf$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?toTextType@CAsFileAry@@QAEPADPBD@Z PROC NEAR		; CAsFileAry::toTextType, COMDAT
; _this$ = ecx

; 40   :     char *toTextType( const char *name ) { CAsFile *pf=Find(name); if ( pf==NULL) return NULL; else return( pf->dest() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CAsFileAry@@QAEPAVCAsFile@@PBDH@Z	; CAsFileAry::Find
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	jne	SHORT $L93219
	xor	eax, eax
	jmp	SHORT $L93217
$L93219:
	mov	ecx, DWORD PTR _pf$[ebp]
	call	?dest@CAsFile@@QAEPADXZ			; CAsFile::dest
$L93217:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toTextType@CAsFileAry@@QAEPADPBD@Z ENDP		; CAsFileAry::toTextType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?dest@CAsFile@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dest@CAsFile@@QAEPADXZ PROC NEAR			; CAsFile::dest, COMDAT
; _this$ = ecx

; 21   :     char *dest() { return _dest; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 113				; 00000071H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dest@CAsFile@@QAEPADXZ ENDP				; CAsFile::dest
_TEXT	ENDS
PUBLIC	??_7ImportAspText@@6B@				; ImportAspText::`vftable'
PUBLIC	??_GImportAspText@@UAEPAXI@Z			; ImportAspText::`scalar deleting destructor'
EXTRN	??0CDAspectText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDAspectText::CDAspectText
EXTRN	??_EImportAspText@@UAEPAXI@Z:NEAR		; ImportAspText::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\importasptext.h
xdata$x	SEGMENT
__unwindtable$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7ImportAspText@@6B@
CONST	SEGMENT
??_7ImportAspText@@6B@ DD FLAT:??_EImportAspText@@UAEPAXI@Z ; ImportAspText::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fname$ = 8						; size = 4
_item$ = 12						; size = 4
_p$ = 16						; size = 4
_dir$ = 20						; size = 4
??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; ImportAspText::ImportAspText, COMDAT
; _this$ = ecx

; 22   : 	ImportAspText(char *fname, char *item, CProgress *p, CString &dir) { filename=fname; textitem=item; m_pProg=p; m_dir = dir; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportAspText@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CDAspectText@@QAE@PAVCDaoDatabase@@@Z ; CDAspectText::CDAspectText
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fname$[ebp]
	mov	DWORD PTR [eax+196], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+200], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+192], ecx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDAspectText@@UAE@XZ
__ehhandler$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; ImportAspText::ImportAspText
PUBLIC	??1ImportAspText@@UAE@XZ			; ImportAspText::~ImportAspText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportAspText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportAspText@@UAEPAXI@Z PROC NEAR			; ImportAspText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportAspText@@UAE@XZ		; ImportAspText::~ImportAspText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L94057
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L94057:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportAspText@@UAEPAXI@Z ENDP			; ImportAspText::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportAspText@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportAspText@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportAspText@@UAE@XZ$1
__ehfuncinfo$??1ImportAspText@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportAspText@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportAspText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportAspText@@UAE@XZ PROC NEAR			; ImportAspText::~ImportAspText, COMDAT
; _this$ = ecx

; 23   : 	virtual ~ImportAspText() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportAspText@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportAspText@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L94052
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94052:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CDAspectText@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportAspText@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1ImportAspText@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDAspectText@@UAE@XZ
__ehhandler$??1ImportAspText@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportAspText@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportAspText@@UAE@XZ ENDP				; ImportAspText::~ImportAspText
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CFileSelector@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFileSelector@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFileSelector@@UAE@XZ$1
__ehfuncinfo$??1CFileSelector@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1CFileSelector@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CFileSelector@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CFileSelector@@UAE@XZ PROC NEAR			; CFileSelector::~CFileSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFileSelector@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFileSelector@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CFileSelector@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1CFileSelector@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CFileSelector@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CFileSelector@@UAE@XZ ENDP				; CFileSelector::~CFileSelector
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportaspecttext, COMDAT
; _this$ = ecx

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 260  : 	// TODO: Add your command update UI handler code here
; 261  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 262  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportaspecttext
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportplanethousetext'::`2'::__LINE__Var
PUBLIC	??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportRegText::ImportRegText
EXTRN	?Process@ImportRegText@@QAEXXZ:NEAR		; ImportRegText::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA DD 0109H ; `CMainFrame::OnImportImportplanethousetext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv161 = -740						; size = 4
tv154 = -740						; size = 4
$T96318 = -732						; size = 4
$T96319 = -720						; size = 4
$T96322 = -708						; size = 4
$T96323 = -696						; size = 4
_imp$95451 = -492					; size = 4
_str$95449 = -480					; size = 4
_i$95445 = -468						; size = 4
_prog$ = -456						; size = 196
_sel$ = -252						; size = 148
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportplanethousetext@CMainFrame@@IAEXXZ PROC NEAR ; CMainFrame::OnImportImportplanethousetext, COMDAT
; _this$ = ecx

; 265  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-740]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 266  : 	// TODO: Add your command handler code here
; 267  : 	char buf1[25], buf2[25];
; 268  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 269  : 	sel.m_type=2;

	mov	DWORD PTR _sel$[ebp+116], 2

; 270  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95443

; 271  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95439
$L95443:

; 272  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 273  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95445[ebp], 0
	jmp	SHORT $L95446
$L95447:
	mov	eax, DWORD PTR _i$95445[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95445[ebp], eax
$L95446:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95445[ebp], eax
	jge	$L95448

; 274  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95445[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95449[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 275  : 	    if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95449[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95450

; 276  : 		   continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95449[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	SHORT $L95447
$L95450:

; 277  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 278  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 279  : 	    strcpy(buf1, pFileList->toFileName(str) );

	lea	eax, DWORD PTR _str$95449[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 280  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 281  : 		ImportRegText *imp = new ImportRegText(buf1,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	196					; 000000c4H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96319[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96319[ebp], 0
	je	SHORT $L96320
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96319[ebp]
	call	??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportRegText::ImportRegText
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $L96321
$L96320:
	mov	DWORD PTR tv154[ebp], 0
$L96321:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T96318[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96318[ebp]
	mov	DWORD PTR _imp$95451[ebp], eax

; 282  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95451[ebp]
	call	?Process@ImportRegText@@QAEXXZ		; ImportRegText::Process

; 283  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95451[ebp]
	mov	DWORD PTR $T96323[ebp], eax
	mov	ecx, DWORD PTR $T96323[ebp]
	mov	DWORD PTR $T96322[ebp], ecx
	cmp	DWORD PTR $T96322[ebp], 0
	je	SHORT $L96324
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96322[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96322[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $L96325
$L96324:
	mov	DWORD PTR tv161[ebp], 0
$L96325:

; 284  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95449[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	$L95447
$L95448:

; 285  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95439:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96340
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 740				; 000002e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96340:
	DD	5
	DD	$L96339
$L96339:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96332
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L96333
	DD	-252					; ffffff04H
	DD	148					; 00000094H
	DD	$L96334
	DD	-456					; fffffe38H
	DD	196					; 000000c4H
	DD	$L96335
	DD	-480					; fffffe20H
	DD	4
	DD	$L96336
$L96336:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96335:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96334:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96333:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96332:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$95449[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96319[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportplanethousetext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportplanethousetext
PUBLIC	??1CDregText@@UAE@XZ				; CDregText::~CDregText
PUBLIC	??_7ImportRegText@@6B@				; ImportRegText::`vftable'
PUBLIC	??_GImportRegText@@UAEPAXI@Z			; ImportRegText::`scalar deleting destructor'
EXTRN	??0CDregText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDregText::CDregText
EXTRN	??_EImportRegText@@UAEPAXI@Z:NEAR		; ImportRegText::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\importregtext.h
xdata$x	SEGMENT
__unwindtable$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7ImportRegText@@6B@
CONST	SEGMENT
??_7ImportRegText@@6B@ DD FLAT:??_EImportRegText@@UAEPAXI@Z ; ImportRegText::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fname$ = 8						; size = 4
_item$ = 12						; size = 4
_p$ = 16						; size = 4
_dir$ = 20						; size = 4
??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; ImportRegText::ImportRegText, COMDAT
; _this$ = ecx

; 20   : 	ImportRegText(char *fname, char *item, CProgress *p, CString &dir) { filename=fname; textitem=item; m_pProg=p; m_dir = dir; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportRegText@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CDregText@@QAE@PAVCDaoDatabase@@@Z	; CDregText::CDregText
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fname$[ebp]
	mov	DWORD PTR [eax+184], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+188], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+192], ecx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDregText@@UAE@XZ
__ehhandler$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; ImportRegText::ImportRegText
PUBLIC	??1ImportRegText@@UAE@XZ			; ImportRegText::~ImportRegText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportRegText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportRegText@@UAEPAXI@Z PROC NEAR			; ImportRegText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportRegText@@UAE@XZ		; ImportRegText::~ImportRegText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L94023
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L94023:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportRegText@@UAEPAXI@Z ENDP			; ImportRegText::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportRegText@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportRegText@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportRegText@@UAE@XZ$1
__ehfuncinfo$??1ImportRegText@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportRegText@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportRegText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportRegText@@UAE@XZ PROC NEAR			; ImportRegText::~ImportRegText, COMDAT
; _this$ = ecx

; 21   : 	virtual ~ImportRegText() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportRegText@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportRegText@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L94018
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94018:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CDregText@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportRegText@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1ImportRegText@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDregText@@UAE@XZ
__ehhandler$??1ImportRegText@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportRegText@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportRegText@@UAE@XZ ENDP				; ImportRegText::~ImportRegText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDregText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDregText@@UAE@XZ PROC NEAR				; CDregText::~CDregText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDregText@@UAE@XZ ENDP				; CDregText::~CDregText
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportplanethousetext, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 289  : 	// TODO: Add your command update UI handler code here
; 290  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 291  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportplanethousetext
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportreporttext'::`2'::__LINE__Var
EXTRN	??0ImportReportText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; ImportReportText::ImportReportText
EXTRN	?Process@ImportReportText@@QAEXXZ:NEAR		; ImportReportText::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportreporttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportreporttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA DD 0126H ; `CMainFrame::OnImportImportreporttext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportreporttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv162 = -764						; size = 4
tv155 = -764						; size = 4
$T96379 = -756						; size = 4
$T96380 = -744						; size = 4
$T96383 = -732						; size = 4
$T96384 = -720						; size = 4
_i$ = -516						; size = 4
_str$ = -504						; size = 4
_imp$ = -492						; size = 4
_prog$ = -480						; size = 196
_sel$ = -276						; size = 148
_buf2$ = -120						; size = 50
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportreporttext@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportreporttext, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 752				; 000002f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-764]
	mov	ecx, 188				; 000000bcH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 	// TODO: Add your command handler code here
; 296  : 	char buf1[25], buf2[50];
; 297  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 298  : 	sel.m_type=1;

	mov	DWORD PTR _sel$[ebp+116], 1

; 299  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95471

; 300  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95467
$L95471:

; 301  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 302  : 	ImportReportText *imp;
; 303  : 	CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 304  : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 305  : 	for ( i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L95476
$L95477:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L95476:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$[ebp], eax
	jge	$L95478

; 306  : 	    str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 307  : 	    if (str.GetLength()==0)

	lea	ecx, DWORD PTR _str$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95479

; 308  : 		   continue;

	jmp	SHORT $L95477
$L95479:

; 309  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 310  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 311  : 	    strcpy(buf1, pFileList->toFileName((CString &)str) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 312  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 313  : 		imp = new ImportReportText(buf1,buf2,&prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	284					; 0000011cH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96380[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96380[ebp], 0
	je	SHORT $L96381
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96380[ebp]
	call	??0ImportReportText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportReportText::ImportReportText
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $L96382
$L96381:
	mov	DWORD PTR tv155[ebp], 0
$L96382:
	mov	edx, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T96379[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96379[ebp]
	mov	DWORD PTR _imp$[ebp], eax

; 314  : 		imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportReportText@@QAEXXZ	; ImportReportText::Process

; 315  : 	    delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T96384[ebp], eax
	mov	ecx, DWORD PTR $T96384[ebp]
	mov	DWORD PTR $T96383[ebp], ecx
	cmp	DWORD PTR $T96383[ebp], 0
	je	SHORT $L96385
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96383[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96383[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $L96386
$L96385:
	mov	DWORD PTR tv162[ebp], 0
$L96386:

; 316  : 		}

	jmp	$L95477
$L95478:

; 317  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95467:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96401
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 764				; 000002fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96401:
	DD	5
	DD	$L96400
$L96400:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96393
	DD	-120					; ffffff88H
	DD	50					; 00000032H
	DD	$L96394
	DD	-276					; fffffeecH
	DD	148					; 00000094H
	DD	$L96395
	DD	-480					; fffffe20H
	DD	196					; 000000c4H
	DD	$L96396
	DD	-504					; fffffe08H
	DD	4
	DD	$L96397
$L96397:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96396:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96395:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96394:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96393:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96380[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportreporttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportreporttext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportreporttext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportreporttext, COMDAT
; _this$ = ecx

; 320  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 	// TODO: Add your command update UI handler code here
; 322  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 323  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportreporttext
_TEXT	ENDS
PUBLIC	??1CRegTextEdit@@UAE@XZ				; CRegTextEdit::~CRegTextEdit
EXTRN	??0CRegTextEdit@@QAE@PAVCWnd@@@Z:NEAR		; CRegTextEdit::CRegTextEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRegulartxt@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnRegulartxt@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnRegulartxt@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnRegulartxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_reg$ = -608						; size = 400
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnRegulartxt@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnRegulartxt, COMDAT
; _this$ = ecx

; 326  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnRegulartxt@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 792				; 00000318H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-804]
	mov	ecx, 198				; 000000c6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 	// TODO: Add your command handler code here
; 328  : 	char buf1[20];
; 329  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 330  : 	it.m_type=2;

	mov	DWORD PTR _it$[ebp+120], 2

; 331  : 	it.m_ary=0;

	mov	DWORD PTR _it$[ebp+124], 0

; 332  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95499

; 333  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95496
$L95499:

; 334  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 335  :     strcpy( buf1, pATextTypes->toTextType(str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 336  : 	CRegTextEdit reg(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reg$[ebp]
	call	??0CRegTextEdit@@QAE@PAVCWnd@@@Z	; CRegTextEdit::CRegTextEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 337  : 	reg.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reg$[ebp+204]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 338  : 	reg.DoModal();

	lea	ecx, DWORD PTR _reg$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 339  : 
; 340  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _reg$[ebp]
	call	??1CRegTextEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95496:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96422
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 804				; 00000324H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96422:
	DD	4
	DD	$L96421
$L96421:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L96415
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L96416
	DD	-200					; ffffff38H
	DD	4
	DD	$L96417
	DD	-608					; fffffda0H
	DD	400					; 00000190H
	DD	$L96418
$L96418:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	0
$L96417:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96416:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L96415:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _reg$[ebp]
	jmp	??1CRegTextEdit@@UAE@XZ
__ehhandler$?OnRegulartxt@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnRegulartxt@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnRegulartxt@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnRegulartxt
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CRegTextEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$6
__ehfuncinfo$??1CRegTextEdit@@UAE@XZ DD 019930520H
	DD	07H
	DD	FLAT:__unwindtable$??1CRegTextEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CRegTextEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CRegTextEdit@@UAE@XZ PROC NEAR			; CRegTextEdit::~CRegTextEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CRegTextEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1CDregText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1CRegTextEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CRegTextEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CRegTextEdit@@UAE@XZ ENDP				; CRegTextEdit::~CRegTextEdit
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateRegulartxt, COMDAT
; _this$ = ecx

; 343  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 344  : 	// TODO: Add your command update UI handler code here
; 345  :   pCmdUI->Enable();	

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 346  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateRegulartxt
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnHelptxt'::`2'::__LINE__Var
EXTRN	??2CObject@@SGPAXIPBDH@Z:NEAR			; CObject::operator new
EXTRN	??3CObject@@SGXPAXPBDH@Z:NEAR			; CObject::operator delete
EXTRN	??0CHelpEdit@@QAE@PAVCWnd@@@Z:NEAR		; CHelpEdit::CHelpEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnHelptxt@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnHelptxt@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnHelptxt@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA DD 015eH ; `CMainFrame::OnHelptxt'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnHelptxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv162 = -396						; size = 4
tv149 = -396						; size = 4
tv128 = -396						; size = 4
tv81 = -396						; size = 4
$T96447 = -388						; size = 4
$T96448 = -376						; size = 4
$T96451 = -364						; size = 4
$T96452 = -352						; size = 4
$T96455 = -340						; size = 4
$T96456 = -328						; size = 4
$T96459 = -316						; size = 4
$T96460 = -304						; size = 4
_hlp$95528 = -100					; size = 4
_it$95517 = -88						; size = 4
_str$ = -76						; size = 4
_buf1$ = -64						; size = 20
_ret$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnHelptxt@CMainFrame@@IAEXXZ PROC NEAR			; CMainFrame::OnHelptxt, COMDAT
; _this$ = ecx

; 350  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnHelptxt@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 351  : 	// TODO: Add your command handler code here
; 352  : 	int ret;
; 353  : 	char buf1[20];
; 354  :     CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$L95514:

; 355  : 	do {
; 356  :       CSelectTextItem *it = new CSelectTextItem(this);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 6
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	128					; 00000080H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T96448[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T96448[ebp], 0
	je	SHORT $L96449
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96448[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L96450
$L96449:
	mov	DWORD PTR tv81[ebp], 0
$L96450:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T96447[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T96447[ebp]
	mov	DWORD PTR _it$95517[ebp], eax

; 357  : 	  it->m_type=0;

	mov	eax, DWORD PTR _it$95517[ebp]
	mov	DWORD PTR [eax+120], 0

; 358  : 	  it->m_ary=0;

	mov	eax, DWORD PTR _it$95517[ebp]
	mov	DWORD PTR [eax+124], 0

; 359  : 	  ret = it->DoModal();

	mov	eax, DWORD PTR _it$95517[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _it$95517[ebp]
	call	DWORD PTR [edx+328]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 360  : 	  str = it->m_strItem;

	mov	eax, DWORD PTR _it$95517[ebp]
	add	eax, 116				; 00000074H
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 361  : 	  delete it;      

	mov	eax, DWORD PTR _it$95517[ebp]
	mov	DWORD PTR $T96452[ebp], eax
	mov	ecx, DWORD PTR $T96452[ebp]
	mov	DWORD PTR $T96451[ebp], ecx
	cmp	DWORD PTR $T96451[ebp], 0
	je	SHORT $L96453
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96451[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96451[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $L96454
$L96453:
	mov	DWORD PTR tv128[ebp], 0
$L96454:

; 362  : 	  if ( ret == IDOK ) {

	cmp	DWORD PTR _ret$[ebp], 1
	jne	$L95515

; 363  : 		 strcpy( buf1, pATextTypes->toTextType( str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 364  : 		 CHelpEdit *hlp = new CHelpEdit(this);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	456					; 000001c8H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T96456[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T96456[ebp], 0
	je	SHORT $L96457
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96456[ebp]
	call	??0CHelpEdit@@QAE@PAVCWnd@@@Z		; CHelpEdit::CHelpEdit
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $L96458
$L96457:
	mov	DWORD PTR tv149[ebp], 0
$L96458:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T96455[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T96455[ebp]
	mov	DWORD PTR _hlp$95528[ebp], eax

; 365  : 		 hlp->m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hlp$95528[ebp]
	add	ecx, 368				; 00000170H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 366  : 		 ret = hlp->DoModal();

	mov	eax, DWORD PTR _hlp$95528[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _hlp$95528[ebp]
	call	DWORD PTR [edx+328]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 367  : 		 delete hlp;

	mov	eax, DWORD PTR _hlp$95528[ebp]
	mov	DWORD PTR $T96460[ebp], eax
	mov	ecx, DWORD PTR $T96460[ebp]
	mov	DWORD PTR $T96459[ebp], ecx
	cmp	DWORD PTR $T96459[ebp], 0
	je	SHORT $L96461
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96459[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96459[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $L95515
$L96461:
	mov	DWORD PTR tv162[ebp], 0
$L95515:

; 368  : 		}
; 369  : 	} while ( ret == IDOK );

	cmp	DWORD PTR _ret$[ebp], 1
	je	$L95514

; 370  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96473
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96473:
	DD	2
	DD	$L96472
$L96472:
	DD	-64					; ffffffc0H
	DD	20					; 00000014H
	DD	$L96468
	DD	-76					; ffffffb4H
	DD	4
	DD	$L96469
$L96469:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96468:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$1:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 6
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96448[ebp]
	push	ecx
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$2:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96456[ebp]
	push	ecx
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__ehhandler$?OnHelptxt@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnHelptxt@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnHelptxt@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnHelptxt
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateHelptxt, COMDAT
; _this$ = ecx

; 373  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 	// TODO: Add your command update UI handler code here
; 375  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 376  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateHelptxt
_TEXT	ENDS
PUBLIC	??1CReportEdit@@UAE@XZ				; CReportEdit::~CReportEdit
EXTRN	??0CReportEdit@@QAE@PAVCWnd@@@Z:NEAR		; CReportEdit::CReportEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_rep$ = -680						; size = 472
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ PROC NEAR ; CMainFrame::OnEdittextsourcesReporttextsources, COMDAT
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 864				; 00000360H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-876]
	mov	ecx, 216				; 000000d8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	// TODO: Add your command handler code here
; 381  : 	char buf1[20];
; 382  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 383  : 	it.m_type=1;

	mov	DWORD PTR _it$[ebp+120], 1

; 384  : 	it.m_ary= 0;

	mov	DWORD PTR _it$[ebp+124], 0

; 385  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95546

; 386  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95543
$L95546:

; 387  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 388  :     strcpy( buf1, pATextTypes->toTextType(str ) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 389  : 	CReportEdit rep(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rep$[ebp]
	call	??0CReportEdit@@QAE@PAVCWnd@@@Z		; CReportEdit::CReportEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 390  : 	rep.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rep$[ebp+380]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 391  : 	rep.DoModal();

	lea	ecx, DWORD PTR _rep$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 392  : 
; 393  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rep$[ebp]
	call	??1CReportEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95543:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96494
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 876				; 0000036cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96494:
	DD	4
	DD	$L96493
$L96493:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L96487
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L96488
	DD	-200					; ffffff38H
	DD	4
	DD	$L96489
	DD	-680					; fffffd58H
	DD	472					; 000001d8H
	DD	$L96490
$L96490:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
$L96489:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96488:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L96487:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _rep$[ebp]
	jmp	??1CReportEdit@@UAE@XZ
__ehhandler$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ ENDP ; CMainFrame::OnEdittextsourcesReporttextsources
PUBLIC	??1CTabctrlctrl1@@UAE@XZ			; CTabctrlctrl1::~CTabctrlctrl1
PUBLIC	??1CDReportText@@UAE@XZ				; CDReportText::~CDReportText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReportEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$5
__ehfuncinfo$??1CReportEdit@@UAE@XZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$??1CReportEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CReportEdit@@UAE@XZ PROC NEAR			; CReportEdit::~CReportEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReportEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1CTabctrlctrl1@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??1CDReportText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReportEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CReportEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CDReportText@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??1CReportEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CReportEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CReportEdit@@UAE@XZ ENDP				; CReportEdit::~CReportEdit
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDReportText@@UAE@XZ PROC NEAR			; CDReportText::~CDReportText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDReportText@@UAE@XZ ENDP				; CDReportText::~CDReportText
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTabctrlctrl1@@UAE@XZ PROC NEAR			; CTabctrlctrl1::~CTabctrlctrl1, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTabctrlctrl1@@UAE@XZ ENDP				; CTabctrlctrl1::~CTabctrlctrl1
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateEdittextsourcesReporttextsources, COMDAT
; _this$ = ecx

; 396  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 397  : 	// TODO: Add your command update UI handler code here
; 398  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 399  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateEdittextsourcesReporttextsources
_TEXT	ENDS
PUBLIC	??1CSetup@@UAE@XZ				; CSetup::~CSetup
EXTRN	??0CSetup@@QAE@PAVCWnd@@@Z:NEAR			; CSetup::CSetup
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnOptionsSetup@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnOptionsSetup@CMainFrame@@IAEXXZ$0
__ehfuncinfo$?OnOptionsSetup@CMainFrame@@IAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnOptionsSetup@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnOptionsSetup@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_st$ = -152						; size = 124
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnOptionsSetup@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnOptionsSetup, COMDAT
; _this$ = ecx

; 402  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnOptionsSetup@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 403  : 	// TODO: Add your command handler code here
; 404  : 	CSetup st;

	push	0
	lea	ecx, DWORD PTR _st$[ebp]
	call	??0CSetup@@QAE@PAVCWnd@@@Z		; CSetup::CSetup
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 405  :    st.DoModal();

	lea	ecx, DWORD PTR _st$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 406  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _st$[ebp]
	call	??1CSetup@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96533
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96533:
	DD	1
	DD	$L96532
$L96532:
	DD	-152					; ffffff68H
	DD	124					; 0000007cH
	DD	$L96530
$L96530:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnOptionsSetup@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _st$[ebp]
	jmp	??1CSetup@@UAE@XZ
__ehhandler$?OnOptionsSetup@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnOptionsSetup@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnOptionsSetup@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnOptionsSetup
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CSetup@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSetup@@UAE@XZ PROC NEAR				; CSetup::~CSetup, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSetup@@UAE@XZ ENDP					; CSetup::~CSetup
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateOptionsSetup, COMDAT
; _this$ = ecx

; 409  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 410  : 	// TODO: Add your command update UI handler code here
; 411  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 412  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateOptionsSetup
_TEXT	ENDS
PUBLIC	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
PUBLIC	?SetTextType@CArrayEdit@@QAEXPAD@Z		; CArrayEdit::SetTextType
PUBLIC	?SetSymTypes@CArrayEdit@@QAEXPAD@Z		; CArrayEdit::SetSymTypes
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
EXTRN	??0CArrayEdit@@QAE@PAVCWnd@@@Z:NEAR		; CArrayEdit::CArrayEdit
EXTRN	??1CArrayEdit@@UAE@XZ:NEAR			; CArrayEdit::~CArrayEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnArraytext@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$3
__ehfuncinfo$?OnArraytext@CMainFrame@@QAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnArraytext@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnArraytext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv137 = -596						; size = 4
tv81 = -592						; size = 4
$T96548 = -584						; size = 4
_ed$ = -380						; size = 140
_str$ = -232						; size = 4
_it$ = -220						; size = 128
_buf1$ = -84						; size = 50
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnArraytext@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnArraytext, COMDAT
; _this$ = ecx

; 415  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnArraytext@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-596]
	mov	ecx, 146				; 00000092H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	// TODO: Add your command handler code here
; 417  : 	char buf1[50];
; 418  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 419  : 	it.m_type=1;

	mov	DWORD PTR _it$[ebp+120], 1

; 420  : 	it.m_ary = 1;

	mov	DWORD PTR _it$[ebp+124], 1

; 421  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95572

; 422  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95569
$L95572:

; 423  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 424  :     strcpy( buf1, pATextTypes->toTextType( str ) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 425  :     CArrayEdit ed(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	??0CArrayEdit@@QAE@PAVCWnd@@@Z		; CArrayEdit::CArrayEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 426  : 	ed.SetTextType(buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	?SetTextType@CArrayEdit@@QAEXPAD@Z	; CArrayEdit::SetTextType

; 427  : 	strcpy( buf1, pATextTypes->toSymType( CString(buf1), 1 ) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T96548[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv137[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	1
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
	push	eax
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T96548[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 428  : 	ed.SetSymTypes(buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	?SetSymTypes@CArrayEdit@@QAEXPAD@Z	; CArrayEdit::SetSymTypes

; 429  :     ed.DoModal();

	lea	ecx, DWORD PTR _ed$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 430  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _ed$[ebp]
	call	??1CArrayEdit@@UAE@XZ			; CArrayEdit::~CArrayEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95569:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96562
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 596				; 00000254H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96562:
	DD	4
	DD	$L96561
$L96561:
	DD	-84					; ffffffacH
	DD	50					; 00000032H
	DD	$L96555
	DD	-220					; ffffff24H
	DD	128					; 00000080H
	DD	$L96556
	DD	-232					; ffffff18H
	DD	4
	DD	$L96557
	DD	-380					; fffffe84H
	DD	140					; 0000008cH
	DD	$L96558
$L96558:
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$L96557:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96556:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L96555:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _ed$[ebp]
	jmp	??1CArrayEdit@@UAE@XZ			; CArrayEdit::~CArrayEdit
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96548[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?OnArraytext@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnArraytext@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnArraytext@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnArraytext
PUBLIC	?symtypes@CATextType@@QAEPADXZ			; CATextType::symtypes
EXTRN	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HH@Z:NEAR ; CATextTypeAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_pf$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_tp$ = 12						; size = 4
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; CATextTypeAry::toSymType, COMDAT
; _this$ = ecx

; 41   :     char *toSymType( CString &name, int tp ) { CATextType *pf=Find(name, tp); if ( pf==NULL) return NULL; else return( pf->symtypes() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _tp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HH@Z ; CATextTypeAry::Find
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	jne	SHORT $L93707
	xor	eax, eax
	jmp	SHORT $L93705
$L93707:
	mov	ecx, DWORD PTR _pf$[ebp]
	call	?symtypes@CATextType@@QAEPADXZ		; CATextType::symtypes
$L93705:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CATextTypeAry::toSymType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?symtypes@CATextType@@QAEPADXZ PROC NEAR		; CATextType::symtypes, COMDAT
; _this$ = ecx

; 20   :     char *symtypes() { return _symtypes; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?symtypes@CATextType@@QAEPADXZ ENDP			; CATextType::symtypes
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\arrayedit.h
_TEXT	ENDS
;	COMDAT ?SetTextType@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?SetTextType@CArrayEdit@@QAEXPAD@Z PROC NEAR		; CArrayEdit::SetTextType, COMDAT
; _this$ = ecx

; 27   : 	void SetTextType( char *p) {m_texttype = p;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTextType@CArrayEdit@@QAEXPAD@Z ENDP			; CArrayEdit::SetTextType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?SetSymTypes@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?SetSymTypes@CArrayEdit@@QAEXPAD@Z PROC NEAR		; CArrayEdit::SetSymTypes, COMDAT
; _this$ = ecx

; 28   : 	void SetSymTypes( char *p) {m_symtypes=p;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSymTypes@CArrayEdit@@QAEXPAD@Z ENDP			; CArrayEdit::SetSymTypes
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateArraytext, COMDAT
; _this$ = ecx

; 433  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 434  : 	// TODO: Add your command update UI handler code here
; 435  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 436  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateArraytext
_TEXT	ENDS
EXTRN	??0CNewLanguage@@QAE@PAVCWnd@@@Z:NEAR		; CNewLanguage::CNewLanguage
EXTRN	??1CNewLanguage@@UAE@XZ:NEAR			; CNewLanguage::~CNewLanguage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnAddlanguage@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnAddlanguage@CMainFrame@@QAEXXZ$0
__ehfuncinfo$?OnAddlanguage@CMainFrame@@QAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnAddlanguage@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnAddlanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
_lang$ = -148						; size = 120
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnAddlanguage@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnAddlanguage, COMDAT
; _this$ = ecx

; 439  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnAddlanguage@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 440  : 	// TODO: Add your command handler code here
; 441  : 	CNewLanguage lang(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lang$[ebp]
	call	??0CNewLanguage@@QAE@PAVCWnd@@@Z	; CNewLanguage::CNewLanguage
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 442  : 	lang.DoModal();

	lea	ecx, DWORD PTR _lang$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 443  : 
; 444  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lang$[ebp]
	call	??1CNewLanguage@@UAE@XZ			; CNewLanguage::~CNewLanguage
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96584
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96584:
	DD	1
	DD	$L96583
$L96583:
	DD	-148					; ffffff6cH
	DD	120					; 00000078H
	DD	$L96581
$L96581:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnAddlanguage@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _lang$[ebp]
	jmp	??1CNewLanguage@@UAE@XZ			; CNewLanguage::~CNewLanguage
__ehhandler$?OnAddlanguage@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnAddlanguage@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnAddlanguage@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnAddlanguage
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateAddlanguage, COMDAT
; _this$ = ecx

; 447  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 448  : 	// TODO: Add your command update UI handler code here
; 449  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 450  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateAddlanguage
_TEXT	ENDS
EXTRN	??0CSetLanguage@@QAE@PAVCWnd@@@Z:NEAR		; CSetLanguage::CSetLanguage
EXTRN	??1CSetLanguage@@UAE@XZ:NEAR			; CSetLanguage::~CSetLanguage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetLanguage@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetLanguage@CMainFrame@@QAEXXZ$0
__ehfuncinfo$?OnSetLanguage@CMainFrame@@QAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetLanguage@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnSetLanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
_setlang$ = -224					; size = 196
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnSetLanguage@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnSetLanguage, COMDAT
; _this$ = ecx

; 453  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSetLanguage@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 454  : 	// TODO: Add your command handler code here
; 455  : 	CSetLanguage setlang(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _setlang$[ebp]
	call	??0CSetLanguage@@QAE@PAVCWnd@@@Z	; CSetLanguage::CSetLanguage
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 456  : 	setlang.DoModal();

	lea	ecx, DWORD PTR _setlang$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 457  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setlang$[ebp]
	call	??1CSetLanguage@@UAE@XZ			; CSetLanguage::~CSetLanguage
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96598
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96598:
	DD	1
	DD	$L96597
$L96597:
	DD	-224					; ffffff20H
	DD	196					; 000000c4H
	DD	$L96595
$L96595:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetLanguage@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _setlang$[ebp]
	jmp	??1CSetLanguage@@UAE@XZ			; CSetLanguage::~CSetLanguage
__ehhandler$?OnSetLanguage@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnSetLanguage@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnSetLanguage@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnSetLanguage
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateSetLanguage, COMDAT
; _this$ = ecx

; 460  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 461  : 	// TODO: Add your command update UI handler code here
; 462  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 463  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateSetLanguage
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CAspDbExport::CAspDbExport
EXTRN	?TypeCount@CATextTypeAry@@QAEHH@Z:NEAR		; CATextTypeAry::TypeCount
EXTRN	??1CAspDbExport@@UAE@XZ:NEAR			; CAspDbExport::~CAspDbExport
EXTRN	?Process@CAspDbExport@@UAEXXZ:NEAR		; CAspDbExport::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnExportExportaspecttext@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$4
__ehfuncinfo$?OnExportExportaspecttext@CMainFrame@@QAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnExportExportaspecttext@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?OnExportExportaspecttext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv136 = -1140						; size = 4
tv81 = -1136						; size = 4
$T96607 = -1128						; size = 4
_exp$95604 = -924					; size = 212
_prog$95602 = -704					; size = 196
_Lang$ = -500						; size = 4
_sel$ = -488						; size = 456
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnExportExportaspecttext@CMainFrame@@QAEXXZ PROC NEAR	; CMainFrame::OnExportExportaspecttext, COMDAT
; _this$ = ecx

; 466  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnExportExportaspecttext@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1128				; 00000468H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1140]
	mov	ecx, 282				; 0000011aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 467  : 	// TODO: Add your command handler code here
; 468  : 	CDirectorySelect sel(FALSE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 469  : 	CString Lang = "";

	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 470  : #ifdef _UNICODE
; 471  :     Lang = GetCurLanguage();
; 472  : #endif
; 473  : 	if ( sel.DoModal() == IDOK ) {

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	$L95601

; 474  : 	  CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$95602[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 475  : 	  CAspDbExport exp(sel.GetDirectory(),&prog,pATextTypes->TypeCount(3),Lang);

	lea	eax, DWORD PTR $T96607[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR _Lang$[ebp]
	push	edx
	push	3
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?TypeCount@CATextTypeAry@@QAEHH@Z	; CATextTypeAry::TypeCount
	push	eax
	lea	eax, DWORD PTR _prog$95602[ebp]
	push	eax
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	ecx, DWORD PTR _exp$95604[ebp]
	call	??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CAspDbExport::CAspDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T96607[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 476  : 	  exp.Process();

	lea	ecx, DWORD PTR _exp$95604[ebp]
	call	?Process@CAspDbExport@@UAEXXZ		; CAspDbExport::Process

; 477  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _exp$95604[ebp]
	call	??1CAspDbExport@@UAE@XZ			; CAspDbExport::~CAspDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _prog$95602[ebp]
	call	??1CProgress@@UAE@XZ
$L95601:

; 478  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96622
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1140				; 00000474H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96622:
	DD	4
	DD	$L96621
$L96621:
	DD	-488					; fffffe18H
	DD	456					; 000001c8H
	DD	$L96615
	DD	-500					; fffffe0cH
	DD	4
	DD	$L96616
	DD	-704					; fffffd40H
	DD	196					; 000000c4H
	DD	$L96617
	DD	-924					; fffffc64H
	DD	212					; 000000d4H
	DD	$L96618
$L96618:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	0
$L96617:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96616:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$L96615:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _Lang$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _prog$95602[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96607[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportaspecttext@CMainFrame@@QAEXXZ$4:
	lea	ecx, DWORD PTR _exp$95604[ebp]
	jmp	??1CAspDbExport@@UAE@XZ			; CAspDbExport::~CAspDbExport
__ehhandler$?OnExportExportaspecttext@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnExportExportaspecttext@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnExportExportaspecttext@CMainFrame@@QAEXXZ ENDP	; CMainFrame::OnExportExportaspecttext
PUBLIC	??_7CAspDbExport@@6B@				; CAspDbExport::`vftable'
PUBLIC	??_GCAspDbExport@@UAEPAXI@Z			; CAspDbExport::`scalar deleting destructor'
EXTRN	??0CBaseDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z:NEAR ; CBaseDbExport::CBaseDbExport
EXTRN	??1CBaseDbExport@@UAE@XZ:NEAR			; CBaseDbExport::~CBaseDbExport
EXTRN	??_ECAspDbExport@@UAEPAXI@Z:NEAR		; CAspDbExport::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\aspdbexport.h
xdata$x	SEGMENT
__unwindtable$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0
__ehfuncinfo$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CAspDbExport@@6B@
CONST	SEGMENT
??_7CAspDbExport@@6B@ DD FLAT:??_ECAspDbExport@@UAEPAXI@Z ; CAspDbExport::`vftable'
	DD	FLAT:?Process@CAspDbExport@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_dir$ = 8						; size = 4
_prog$ = 12						; size = 4
_items$ = 16						; size = 4
_lang$ = 20						; size = 4
??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z PROC NEAR ; CAspDbExport::CAspDbExport, COMDAT
; _this$ = ecx

; 11   : 	    CBaseDbExport(dir,prog,items,lang) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	mov	ecx, DWORD PTR _items$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CBaseDbExport::CBaseDbExport
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CAspDbExport@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0CDAspectText@@QAE@PAVCDaoDatabase@@@Z ; CDAspectText::CDAspectText
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseDbExport@@UAE@XZ		; CBaseDbExport::~CBaseDbExport
__ehhandler$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CAspDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ENDP ; CAspDbExport::CAspDbExport
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCAspDbExport@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCAspDbExport@@UAEPAXI@Z PROC NEAR			; CAspDbExport::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAspDbExport@@UAE@XZ			; CAspDbExport::~CAspDbExport
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L95068
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L95068:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCAspDbExport@@UAEPAXI@Z ENDP			; CAspDbExport::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateExportExportaspecttext, COMDAT
; _this$ = ecx

; 481  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 482  : 	// TODO: Add your command update UI handler code here
; 483  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 484  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateExportExportaspecttext@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateExportExportaspecttext
_TEXT	ENDS
PUBLIC	??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CHlpDbExport::CHlpDbExport
EXTRN	??1CHlpDbExport@@UAE@XZ:NEAR			; CHlpDbExport::~CHlpDbExport
EXTRN	?Process@CHlpDbExport@@UAEXXZ:NEAR		; CHlpDbExport::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnExportExporthelp@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$4
__ehfuncinfo$?OnExportExporthelp@CMainFrame@@QAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnExportExporthelp@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnExportExporthelp@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv136 = -1124						; size = 4
tv81 = -1120						; size = 4
$T96643 = -1112						; size = 4
_exp$95617 = -908					; size = 196
_prog$95615 = -704					; size = 196
_Lang$ = -500						; size = 4
_sel$ = -488						; size = 456
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnExportExporthelp@CMainFrame@@QAEXXZ PROC NEAR	; CMainFrame::OnExportExporthelp, COMDAT
; _this$ = ecx

; 487  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnExportExporthelp@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1112				; 00000458H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1124]
	mov	ecx, 278				; 00000116H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 488  : 	// TODO: Add your command handler code here
; 489  : 	CDirectorySelect sel(FALSE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 490  : 	CString Lang = "";

	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 491  : #ifdef _UNICODE
; 492  :     Lang = GetCurLanguage();
; 493  : #endif	
; 494  : 	if ( sel.DoModal() == IDOK ) {

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	$L95614

; 495  : 	  CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$95615[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 496  : 	  CHlpDbExport exp(sel.GetDirectory(),&prog,pATextTypes->TypeCount(0),Lang);

	lea	eax, DWORD PTR $T96643[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR _Lang$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?TypeCount@CATextTypeAry@@QAEHH@Z	; CATextTypeAry::TypeCount
	push	eax
	lea	eax, DWORD PTR _prog$95615[ebp]
	push	eax
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	ecx, DWORD PTR _exp$95617[ebp]
	call	??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CHlpDbExport::CHlpDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T96643[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 497  : 	  exp.Process();

	lea	ecx, DWORD PTR _exp$95617[ebp]
	call	?Process@CHlpDbExport@@UAEXXZ		; CHlpDbExport::Process

; 498  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _exp$95617[ebp]
	call	??1CHlpDbExport@@UAE@XZ			; CHlpDbExport::~CHlpDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _prog$95615[ebp]
	call	??1CProgress@@UAE@XZ
$L95614:

; 499  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96658
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1124				; 00000464H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96658:
	DD	4
	DD	$L96657
$L96657:
	DD	-488					; fffffe18H
	DD	456					; 000001c8H
	DD	$L96651
	DD	-500					; fffffe0cH
	DD	4
	DD	$L96652
	DD	-704					; fffffd40H
	DD	196					; 000000c4H
	DD	$L96653
	DD	-908					; fffffc74H
	DD	196					; 000000c4H
	DD	$L96654
$L96654:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	0
$L96653:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96652:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$L96651:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _Lang$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _prog$95615[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96643[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExporthelp@CMainFrame@@QAEXXZ$4:
	lea	ecx, DWORD PTR _exp$95617[ebp]
	jmp	??1CHlpDbExport@@UAE@XZ			; CHlpDbExport::~CHlpDbExport
__ehhandler$?OnExportExporthelp@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnExportExporthelp@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnExportExporthelp@CMainFrame@@QAEXXZ ENDP		; CMainFrame::OnExportExporthelp
PUBLIC	??_7CHlpDbExport@@6B@				; CHlpDbExport::`vftable'
PUBLIC	??_GCHlpDbExport@@UAEPAXI@Z			; CHlpDbExport::`scalar deleting destructor'
EXTRN	??_ECHlpDbExport@@UAEPAXI@Z:NEAR		; CHlpDbExport::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\hlpdbexport.h
xdata$x	SEGMENT
__unwindtable$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0
__ehfuncinfo$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CHlpDbExport@@6B@
CONST	SEGMENT
??_7CHlpDbExport@@6B@ DD FLAT:??_ECHlpDbExport@@UAEPAXI@Z ; CHlpDbExport::`vftable'
	DD	FLAT:?Process@CHlpDbExport@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_dir$ = 8						; size = 4
_prog$ = 12						; size = 4
_items$ = 16						; size = 4
_lang$ = 20						; size = 4
??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z PROC NEAR ; CHlpDbExport::CHlpDbExport, COMDAT
; _this$ = ecx

; 11   : 	    CBaseDbExport(dir,prog,items,lang) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	mov	ecx, DWORD PTR _items$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CBaseDbExport::CBaseDbExport
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CHlpDbExport@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0CDHelpTxt@@QAE@PAVCDaoDatabase@@@Z	; CDHelpTxt::CDHelpTxt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseDbExport@@UAE@XZ		; CBaseDbExport::~CBaseDbExport
__ehhandler$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CHlpDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ENDP ; CHlpDbExport::CHlpDbExport
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCHlpDbExport@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCHlpDbExport@@UAEPAXI@Z PROC NEAR			; CHlpDbExport::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CHlpDbExport@@UAE@XZ			; CHlpDbExport::~CHlpDbExport
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L95091
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L95091:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCHlpDbExport@@UAEPAXI@Z ENDP			; CHlpDbExport::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateExportExporthelp, COMDAT
; _this$ = ecx

; 502  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 503  : 	// TODO: Add your command update UI handler code here
; 504  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 505  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateExportExporthelp@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateExportExporthelp
_TEXT	ENDS
PUBLIC	??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CRegDbExport::CRegDbExport
EXTRN	??1CRegDbExport@@UAE@XZ:NEAR			; CRegDbExport::~CRegDbExport
EXTRN	?Process@CRegDbExport@@UAEXXZ:NEAR		; CRegDbExport::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnExportExportregulartext@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$4
__ehfuncinfo$?OnExportExportregulartext@CMainFrame@@QAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnExportExportregulartext@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnExportExportregulartext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv136 = -1132						; size = 4
tv81 = -1128						; size = 4
$T96679 = -1120						; size = 4
_exp$95630 = -916					; size = 204
_prog$95628 = -704					; size = 196
_Lang$ = -500						; size = 4
_sel$ = -488						; size = 456
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnExportExportregulartext@CMainFrame@@QAEXXZ PROC NEAR	; CMainFrame::OnExportExportregulartext, COMDAT
; _this$ = ecx

; 508  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnExportExportregulartext@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1120				; 00000460H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1132]
	mov	ecx, 280				; 00000118H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 509  : 	// TODO: Add your command handler code here
; 510  : 	CDirectorySelect sel(FALSE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 511  : 	CString Lang = "";

	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 512  : #ifdef _UNICODE
; 513  :     Lang = GetCurLanguage();
; 514  : #endif
; 515  : 	if ( sel.DoModal() == IDOK ) {

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	$L95627

; 516  : 	  CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$95628[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 517  : 	  CRegDbExport exp(sel.GetDirectory(),&prog,pATextTypes->TypeCount(2),Lang);

	lea	eax, DWORD PTR $T96679[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR _Lang$[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?TypeCount@CATextTypeAry@@QAEHH@Z	; CATextTypeAry::TypeCount
	push	eax
	lea	eax, DWORD PTR _prog$95628[ebp]
	push	eax
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	ecx, DWORD PTR _exp$95630[ebp]
	call	??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CRegDbExport::CRegDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T96679[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 518  : 	  exp.Process();

	lea	ecx, DWORD PTR _exp$95630[ebp]
	call	?Process@CRegDbExport@@UAEXXZ		; CRegDbExport::Process

; 519  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _exp$95630[ebp]
	call	??1CRegDbExport@@UAE@XZ			; CRegDbExport::~CRegDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _prog$95628[ebp]
	call	??1CProgress@@UAE@XZ
$L95627:

; 520  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96694
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1132				; 0000046cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96694:
	DD	4
	DD	$L96693
$L96693:
	DD	-488					; fffffe18H
	DD	456					; 000001c8H
	DD	$L96687
	DD	-500					; fffffe0cH
	DD	4
	DD	$L96688
	DD	-704					; fffffd40H
	DD	196					; 000000c4H
	DD	$L96689
	DD	-916					; fffffc6cH
	DD	204					; 000000ccH
	DD	$L96690
$L96690:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	0
$L96689:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96688:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$L96687:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _Lang$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _prog$95628[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96679[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportregulartext@CMainFrame@@QAEXXZ$4:
	lea	ecx, DWORD PTR _exp$95630[ebp]
	jmp	??1CRegDbExport@@UAE@XZ			; CRegDbExport::~CRegDbExport
__ehhandler$?OnExportExportregulartext@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnExportExportregulartext@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnExportExportregulartext@CMainFrame@@QAEXXZ ENDP	; CMainFrame::OnExportExportregulartext
PUBLIC	??_7CRegDbExport@@6B@				; CRegDbExport::`vftable'
PUBLIC	??_GCRegDbExport@@UAEPAXI@Z			; CRegDbExport::`scalar deleting destructor'
EXTRN	??_ECRegDbExport@@UAEPAXI@Z:NEAR		; CRegDbExport::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\regdbexport.h
xdata$x	SEGMENT
__unwindtable$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0
__ehfuncinfo$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CRegDbExport@@6B@
CONST	SEGMENT
??_7CRegDbExport@@6B@ DD FLAT:??_ECRegDbExport@@UAEPAXI@Z ; CRegDbExport::`vftable'
	DD	FLAT:?Process@CRegDbExport@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_dir$ = 8						; size = 4
_prog$ = 12						; size = 4
_items$ = 16						; size = 4
_lang$ = 20						; size = 4
??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z PROC NEAR ; CRegDbExport::CRegDbExport, COMDAT
; _this$ = ecx

; 11   : 	    CBaseDbExport(dir,prog,items,lang) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	mov	ecx, DWORD PTR _items$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CBaseDbExport::CBaseDbExport
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRegDbExport@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0CDregText@@QAE@PAVCDaoDatabase@@@Z	; CDregText::CDregText
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseDbExport@@UAE@XZ		; CBaseDbExport::~CBaseDbExport
__ehhandler$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CRegDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ENDP ; CRegDbExport::CRegDbExport
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCRegDbExport@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCRegDbExport@@UAEPAXI@Z PROC NEAR			; CRegDbExport::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRegDbExport@@UAE@XZ			; CRegDbExport::~CRegDbExport
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L95045
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L95045:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRegDbExport@@UAEPAXI@Z ENDP			; CRegDbExport::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateExportExportregulartext, COMDAT
; _this$ = ecx

; 523  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 524  : 	// TODO: Add your command update UI handler code here
; 525  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 526  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateExportExportregulartext@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateExportExportregulartext
_TEXT	ENDS
PUBLIC	??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CReptDbExport::CReptDbExport
EXTRN	??1CReptDbExport@@UAE@XZ:NEAR			; CReptDbExport::~CReptDbExport
EXTRN	?Process@CReptDbExport@@UAEXXZ:NEAR		; CReptDbExport::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnExportExportreports@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$4
__ehfuncinfo$?OnExportExportreports@CMainFrame@@QAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnExportExportreports@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnExportExportreports@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv136 = -1128						; size = 4
tv81 = -1124						; size = 4
$T96715 = -1116						; size = 4
_exp$95643 = -912					; size = 200
_prog$95641 = -704					; size = 196
_Lang$ = -500						; size = 4
_sel$ = -488						; size = 456
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnExportExportreports@CMainFrame@@QAEXXZ PROC NEAR	; CMainFrame::OnExportExportreports, COMDAT
; _this$ = ecx

; 529  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnExportExportreports@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1116				; 0000045cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1128]
	mov	ecx, 279				; 00000117H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 	// TODO: Add your command handler code here
; 531  : 	CDirectorySelect sel(FALSE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 532  : 	CString Lang = "";

	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 533  : #ifdef _UNICODE
; 534  :     Lang = GetCurLanguage();
; 535  : #endif
; 536  : 	if ( sel.DoModal() == IDOK ) {

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	$L95640

; 537  : 	  CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$95641[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 538  : 	  CReptDbExport exp(sel.GetDirectory(),&prog,pATextTypes->TypeCount(1),Lang);

	lea	eax, DWORD PTR $T96715[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR _Lang$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?TypeCount@CATextTypeAry@@QAEHH@Z	; CATextTypeAry::TypeCount
	push	eax
	lea	eax, DWORD PTR _prog$95641[ebp]
	push	eax
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	ecx, DWORD PTR _exp$95643[ebp]
	call	??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CReptDbExport::CReptDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T96715[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 539  : 	  exp.Process();

	lea	ecx, DWORD PTR _exp$95643[ebp]
	call	?Process@CReptDbExport@@UAEXXZ		; CReptDbExport::Process

; 540  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _exp$95643[ebp]
	call	??1CReptDbExport@@UAE@XZ		; CReptDbExport::~CReptDbExport
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _prog$95641[ebp]
	call	??1CProgress@@UAE@XZ
$L95640:

; 541  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _Lang$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96730
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1128				; 00000468H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96730:
	DD	4
	DD	$L96729
$L96729:
	DD	-488					; fffffe18H
	DD	456					; 000001c8H
	DD	$L96723
	DD	-500					; fffffe0cH
	DD	4
	DD	$L96724
	DD	-704					; fffffd40H
	DD	196					; 000000c4H
	DD	$L96725
	DD	-912					; fffffc70H
	DD	200					; 000000c8H
	DD	$L96726
$L96726:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	0
$L96725:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96724:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$L96723:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _Lang$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _prog$95641[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96715[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnExportExportreports@CMainFrame@@QAEXXZ$4:
	lea	ecx, DWORD PTR _exp$95643[ebp]
	jmp	??1CReptDbExport@@UAE@XZ		; CReptDbExport::~CReptDbExport
__ehhandler$?OnExportExportreports@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnExportExportreports@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnExportExportreports@CMainFrame@@QAEXXZ ENDP		; CMainFrame::OnExportExportreports
PUBLIC	??_7CReptDbExport@@6B@				; CReptDbExport::`vftable'
PUBLIC	??_GCReptDbExport@@UAEPAXI@Z			; CReptDbExport::`scalar deleting destructor'
EXTRN	??0CDReportText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDReportText::CDReportText
EXTRN	??_ECReptDbExport@@UAEPAXI@Z:NEAR		; CReptDbExport::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\reptdbexport.h
xdata$x	SEGMENT
__unwindtable$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0
__ehfuncinfo$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CReptDbExport@@6B@
CONST	SEGMENT
??_7CReptDbExport@@6B@ DD FLAT:??_ECReptDbExport@@UAEPAXI@Z ; CReptDbExport::`vftable'
	DD	FLAT:?Process@CReptDbExport@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_dir$ = 8						; size = 4
_prog$ = 12						; size = 4
_items$ = 16						; size = 4
_lang$ = 20						; size = 4
??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z PROC NEAR ; CReptDbExport::CReptDbExport, COMDAT
; _this$ = ecx

; 11   : 	    CBaseDbExport(dir,prog,items,lang) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	mov	ecx, DWORD PTR _items$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ; CBaseDbExport::CBaseDbExport
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CReptDbExport@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0CDReportText@@QAE@PAVCDaoDatabase@@@Z ; CDReportText::CDReportText
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseDbExport@@UAE@XZ		; CBaseDbExport::~CBaseDbExport
__ehhandler$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CReptDbExport@@QAE@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCProgress@@H0@Z ENDP ; CReptDbExport::CReptDbExport
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCReptDbExport@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCReptDbExport@@UAEPAXI@Z PROC NEAR			; CReptDbExport::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CReptDbExport@@UAE@XZ		; CReptDbExport::~CReptDbExport
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L95114
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L95114:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCReptDbExport@@UAEPAXI@Z ENDP			; CReptDbExport::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateExportExportreports, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	// TODO: Add your command update UI handler code here
; 546  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 547  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateExportExportreports@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateExportExportreports
_TEXT	ENDS
PUBLIC	??_C@_04LHJABDGJ@3?9?$CFs?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA ; `CMainFrame::OnImportImportexportedaspectfile'::`2'::__LINE__Var
EXTRN	_sprintf:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$3
__ehfuncinfo$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_04LHJABDGJ@3?9?$CFs?$AA@
CONST	SEGMENT
??_C@_04LHJABDGJ@3?9?$CFs?$AA@ DB '3-%s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA DD 0226H ; `CMainFrame::OnImportImportexportedaspectfile'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv164 = -776						; size = 4
tv157 = -776						; size = 4
$T96751 = -768						; size = 4
$T96752 = -756						; size = 4
$T96755 = -744						; size = 4
$T96756 = -732						; size = 4
_imp$95664 = -528					; size = 4
_str$95661 = -516					; size = 4
_i$95657 = -504						; size = 4
_prog$ = -492						; size = 196
_sel$ = -288						; size = 148
_buf3$ = -132						; size = 25
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ PROC NEAR ; CMainFrame::OnImportImportexportedaspectfile, COMDAT
; _this$ = ecx

; 550  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 764				; 000002fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-776]
	mov	ecx, 191				; 000000bfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 551  : 	// TODO: Add your command handler code here
; 552  :     char buf1[25], buf2[25], buf3[25];;
; 553  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 554  : 	sel.m_type=3;

	mov	DWORD PTR _sel$[ebp+116], 3

; 555  : 	sel.m_bExport = TRUE;

	mov	DWORD PTR _sel$[ebp+144], 1

; 556  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95655

; 557  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95650
$L95655:

; 558  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 559  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95657[ebp], 0
	jmp	SHORT $L95658
$L95659:
	mov	eax, DWORD PTR _i$95657[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95657[ebp], eax
$L95658:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95657[ebp], eax
	jge	$L95660

; 560  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95657[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95661[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 561  : 		if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95661[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95662

; 562  : 			continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95661[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	SHORT $L95659
$L95662:

; 563  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 564  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 565  : 		memset(buf3,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf3$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 566  : 		strcpy(buf1, pFileList->toFileName( str) );

	lea	eax, DWORD PTR _str$95661[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 567  :         strcpy(buf2, buf1 );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 568  : 		sprintf(buf3,"3-%s", buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_04LHJABDGJ@3?9?$CFs?$AA@
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 569  : 		ImportAspText *imp = new ImportAspText(buf3,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	204					; 000000ccH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96752[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96752[ebp], 0
	je	SHORT $L96753
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96752[ebp]
	call	??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportAspText::ImportAspText
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $L96754
$L96753:
	mov	DWORD PTR tv157[ebp], 0
$L96754:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T96751[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96751[ebp]
	mov	DWORD PTR _imp$95664[ebp], eax

; 570  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95664[ebp]
	call	?Process@ImportAspText@@QAEXXZ		; ImportAspText::Process

; 571  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95664[ebp]
	mov	DWORD PTR $T96756[ebp], eax
	mov	ecx, DWORD PTR $T96756[ebp]
	mov	DWORD PTR $T96755[ebp], ecx
	cmp	DWORD PTR $T96755[ebp], 0
	je	SHORT $L96757
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96755[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96755[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $L96758
$L96757:
	mov	DWORD PTR tv164[ebp], 0
$L96758:

; 572  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95661[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	$L95659
$L95660:

; 573  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95650:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96774
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 776				; 00000308H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96774:
	DD	6
	DD	$L96773
$L96773:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96765
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L96766
	DD	-132					; ffffff7cH
	DD	25					; 00000019H
	DD	$L96767
	DD	-288					; fffffee0H
	DD	148					; 00000094H
	DD	$L96768
	DD	-492					; fffffe14H
	DD	196					; 000000c4H
	DD	$L96769
	DD	-516					; fffffdfcH
	DD	4
	DD	$L96770
$L96770:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96769:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96768:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96767:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	51					; 00000033H
	DB	0
$L96766:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96765:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _str$95661[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96752[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportexportedaspectfile@CMainFrame@@QAEXXZ ENDP ; CMainFrame::OnImportImportexportedaspectfile
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportexportedaspectfile, COMDAT
; _this$ = ecx

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 577  : 	// TODO: Add your command update UI handler code here
; 578  :    pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 579  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportexportedaspectfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportexportedaspectfile
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA ; `CMainFrame::OnImportImportexportedhelpfile'::`2'::__LINE__Var
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$5
__ehfuncinfo$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA DD 0246H ; `CMainFrame::OnImportImportexportedhelpfile'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv158 = -992						; size = 4
tv156 = -992						; size = 4
tv151 = -988						; size = 4
tv144 = -988						; size = 4
tv78 = -988						; size = 4
tv69 = -988						; size = 4
$T96783 = -980						; size = 4
$T96784 = -968						; size = 4
$T96785 = -956						; size = 4
$T96786 = -944						; size = 4
$T96789 = -932						; size = 4
$T96790 = -920						; size = 4
_imp$ = -716						; size = 4
_dir$ = -704						; size = 4
_sel$ = -692						; size = 456
_prog$ = -228						; size = 196
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ PROC NEAR ; CMainFrame::OnImportImportexportedhelpfile, COMDAT
; _this$ = ecx

; 582  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 980				; 000003d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-992]
	mov	ecx, 245				; 000000f5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 	// TODO: Add your command handler code here
; 584  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 585  : 	CDirectorySelect sel(TRUE);

	push	0
	push	OFFSET FLAT:??_C@_0CP@PGPPFNCE@Text?5Files?5?$CI?$CK?4ast?$CJ?$HM?$CK?4ast?$HMAll?5Fil@
	push	4
	push	0
	push	OFFSET FLAT:??_C@_04HJGAMMCE@?4Ast?$AA@
	push	1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CDirectorySelect@@QAE@HPBD0K0PAVCWnd@@@Z ; CDirectorySelect::CDirectorySelect
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 586  : 	CString dir;

	lea	ecx, DWORD PTR _dir$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 587  : 	if ( sel.DoModal() == IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CFileDialog@@UAEHXZ		; CFileDialog::DoModal
	cmp	eax, 1
	jne	SHORT $L95684

; 588  : 		dir = sel.GetDirectory();

	lea	eax, DWORD PTR $T96783[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	?GetDirectory@CDirectorySelect@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CDirectorySelect::GetDirectory
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv156[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T96783[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 589  : 	else

	jmp	SHORT $L95686
$L95684:

; 590  : 		dir = GetSrcDir();

	lea	eax, DWORD PTR $T96784[ebp]
	push	eax
	call	?GetSrcDir@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; GetSrcDir
	add	esp, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv158[ebp]
	push	edx
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T96784[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
$L95686:

; 591  : 	ImportHelp *imp = new ImportHelp(&prog,dir,TRUE);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 9
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	184					; 000000b8H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96786[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T96786[ebp], 0
	je	SHORT $L96787
	push	1
	lea	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T96786[ebp]
	call	??0ImportHelp@@QAE@PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; ImportHelp::ImportHelp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $L96788
$L96787:
	mov	DWORD PTR tv144[ebp], 0
$L96788:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T96785[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T96785[ebp]
	mov	DWORD PTR _imp$[ebp], ecx

; 592  : 	imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportHelp@@QAEXXZ		; ImportHelp::Process

; 593  : 	delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T96790[ebp], eax
	mov	ecx, DWORD PTR $T96790[ebp]
	mov	DWORD PTR $T96789[ebp], ecx
	cmp	DWORD PTR $T96789[ebp], 0
	je	SHORT $L96791
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96789[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96789[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $L96792
$L96791:
	mov	DWORD PTR tv151[ebp], 0
$L96792:

; 594  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _dir$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96807
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 992				; 000003e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96807:
	DD	3
	DD	$L96806
$L96806:
	DD	-228					; ffffff1cH
	DD	196					; 000000c4H
	DD	$L96801
	DD	-692					; fffffd4cH
	DD	456					; 000001c8H
	DD	$L96802
	DD	-704					; fffffd40H
	DD	4
	DD	$L96803
$L96803:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$L96802:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96801:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CDirectorySelect@@UAE@XZ		; CDirectorySelect::~CDirectorySelect
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _dir$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T96783[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$4:
	lea	ecx, DWORD PTR $T96784[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ$5:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 9
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96786[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportexportedhelpfile@CMainFrame@@QAEXXZ ENDP	; CMainFrame::OnImportImportexportedhelpfile
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportexportedhelpfile, COMDAT
; _this$ = ecx

; 597  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 598  : 	// TODO: Add your command update UI handler code here
; 599  :    pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 600  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportexportedhelpfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportexportedhelpfile
_TEXT	ENDS
PUBLIC	??_C@_04IKPADKNJ@2?9?$CFs?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA ; `CMainFrame::OnImportImportexportedplanet'::`2'::__LINE__Var
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$3
__ehfuncinfo$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_04IKPADKNJ@2?9?$CFs?$AA@
CONST	SEGMENT
??_C@_04IKPADKNJ@2?9?$CFs?$AA@ DB '2-%s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA DD 025bH ; `CMainFrame::OnImportImportexportedplanet'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv164 = -776						; size = 4
tv157 = -776						; size = 4
$T96816 = -768						; size = 4
$T96817 = -756						; size = 4
$T96820 = -744						; size = 4
$T96821 = -732						; size = 4
_imp$95718 = -528					; size = 4
_str$95715 = -516					; size = 4
_i$95711 = -504						; size = 4
_prog$ = -492						; size = 196
_sel$ = -288						; size = 148
_buf3$ = -132						; size = 25
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportexportedplanet@CMainFrame@@QAEXXZ PROC NEAR ; CMainFrame::OnImportImportexportedplanet, COMDAT
; _this$ = ecx

; 603  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 764				; 000002fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-776]
	mov	ecx, 191				; 000000bfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 604  : 	// TODO: Add your command handler code here
; 605  : 	char buf1[25], buf2[25], buf3[25];
; 606  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 607  : 	sel.m_bExport = TRUE;

	mov	DWORD PTR _sel$[ebp+144], 1

; 608  : 	sel.m_type=2;

	mov	DWORD PTR _sel$[ebp+116], 2

; 609  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95709

; 610  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95704
$L95709:

; 611  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 612  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95711[ebp], 0
	jmp	SHORT $L95712
$L95713:
	mov	eax, DWORD PTR _i$95711[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95711[ebp], eax
$L95712:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95711[ebp], eax
	jge	$L95714

; 613  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95711[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95715[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 614  : 	    if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95715[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95716

; 615  : 		   continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95715[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	SHORT $L95713
$L95716:

; 616  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 617  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 618  : 		memset(buf3,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf3$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 619  : 	    strcpy(buf1, pFileList->toFileName(str) );

	lea	eax, DWORD PTR _str$95715[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 620  :         strcpy(buf2, buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 621  : 		sprintf(buf3,"2-%s", buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_04IKPADKNJ@2?9?$CFs?$AA@
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 622  : 		ImportRegText *imp = new ImportRegText(buf3,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	196					; 000000c4H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96817[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96817[ebp], 0
	je	SHORT $L96818
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96817[ebp]
	call	??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportRegText::ImportRegText
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $L96819
$L96818:
	mov	DWORD PTR tv157[ebp], 0
$L96819:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T96816[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96816[ebp]
	mov	DWORD PTR _imp$95718[ebp], eax

; 623  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95718[ebp]
	call	?Process@ImportRegText@@QAEXXZ		; ImportRegText::Process

; 624  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95718[ebp]
	mov	DWORD PTR $T96821[ebp], eax
	mov	ecx, DWORD PTR $T96821[ebp]
	mov	DWORD PTR $T96820[ebp], ecx
	cmp	DWORD PTR $T96820[ebp], 0
	je	SHORT $L96822
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96820[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96820[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $L96823
$L96822:
	mov	DWORD PTR tv164[ebp], 0
$L96823:

; 625  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95715[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	jmp	$L95713
$L95714:

; 626  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95704:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96839
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 776				; 00000308H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96839:
	DD	6
	DD	$L96838
$L96838:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96830
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L96831
	DD	-132					; ffffff7cH
	DD	25					; 00000019H
	DD	$L96832
	DD	-288					; fffffee0H
	DD	148					; 00000094H
	DD	$L96833
	DD	-492					; fffffe14H
	DD	196					; 000000c4H
	DD	$L96834
	DD	-516					; fffffdfcH
	DD	4
	DD	$L96835
$L96835:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96834:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96833:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96832:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	51					; 00000033H
	DB	0
$L96831:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96830:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _str$95715[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedplanet@CMainFrame@@QAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96817[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportexportedplanet@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportexportedplanet@CMainFrame@@QAEXXZ ENDP	; CMainFrame::OnImportImportexportedplanet
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportexportedplanet, COMDAT
; _this$ = ecx

; 629  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 	// TODO: Add your command update UI handler code here
; 631  :    pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 632  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportexportedplanet@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportexportedplanet
_TEXT	ENDS
PUBLIC	??_C@_04MNFAEAAJ@1?9?$CFs?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA ; `CMainFrame::OnImportImportexportedreportfile'::`2'::__LINE__Var
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$3
__ehfuncinfo$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_04MNFAEAAJ@1?9?$CFs?$AA@
CONST	SEGMENT
??_C@_04MNFAEAAJ@1?9?$CFs?$AA@ DB '1-%s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA DD 027bH ; `CMainFrame::OnImportImportexportedreportfile'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv165 = -824						; size = 4
tv158 = -824						; size = 4
$T96848 = -816						; size = 4
$T96849 = -804						; size = 4
$T96852 = -792						; size = 4
$T96853 = -780						; size = 4
_i$ = -576						; size = 4
_str$ = -564						; size = 4
_imp$ = -552						; size = 4
_prog$ = -540						; size = 196
_sel$ = -336						; size = 148
_buf3$ = -180						; size = 50
_buf2$ = -120						; size = 50
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ PROC NEAR ; CMainFrame::OnImportImportexportedreportfile, COMDAT
; _this$ = ecx

; 635  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 812				; 0000032cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-824]
	mov	ecx, 203				; 000000cbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 636  : 	// TODO: Add your command handler code here
; 637  : 	char buf1[25], buf2[50], buf3[50];
; 638  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 639  : 	sel.m_bExport = TRUE;

	mov	DWORD PTR _sel$[ebp+144], 1

; 640  : 	sel.m_type=1;

	mov	DWORD PTR _sel$[ebp+116], 1

; 641  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95739

; 642  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95734
$L95739:

; 643  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 644  : 	ImportReportText *imp;
; 645  : 	CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 646  : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 647  : 	for ( i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L95744
$L95745:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L95744:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$[ebp], eax
	jge	$L95746

; 648  : 	    str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 649  : 	    if (str.GetLength()==0)

	lea	ecx, DWORD PTR _str$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	test	eax, eax
	jne	SHORT $L95747

; 650  : 		   continue;

	jmp	SHORT $L95745
$L95747:

; 651  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 652  : 		memset(buf2,0,50);

	push	50					; 00000032H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 653  : 		memset(buf3,0,50);

	push	50					; 00000032H
	push	0
	lea	eax, DWORD PTR _buf3$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 654  : 	    strcpy(buf1, pFileList->toFileName((CString &)str) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 655  :         strcpy(buf2, buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 656  : 		sprintf(buf3,"1-%s",buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_04MNFAEAAJ@1?9?$CFs?$AA@
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 657  : 		imp = new ImportReportText(buf3,buf2,&prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	284					; 0000011cH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T96849[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T96849[ebp], 0
	je	SHORT $L96850
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf3$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T96849[ebp]
	call	??0ImportReportText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; ImportReportText::ImportReportText
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $L96851
$L96850:
	mov	DWORD PTR tv158[ebp], 0
$L96851:
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR $T96848[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T96848[ebp]
	mov	DWORD PTR _imp$[ebp], eax

; 658  : 		imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportReportText@@QAEXXZ	; ImportReportText::Process

; 659  : 	    delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T96853[ebp], eax
	mov	ecx, DWORD PTR $T96853[ebp]
	mov	DWORD PTR $T96852[ebp], ecx
	cmp	DWORD PTR $T96852[ebp], 0
	je	SHORT $L96854
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T96852[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T96852[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $L96855
$L96854:
	mov	DWORD PTR tv165[ebp], 0
$L96855:

; 660  : 		}

	jmp	$L95745
$L95746:

; 661  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95734:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L96871
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 824				; 00000338H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L96871:
	DD	6
	DD	$L96870
$L96870:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L96862
	DD	-120					; ffffff88H
	DD	50					; 00000032H
	DD	$L96863
	DD	-180					; ffffff4cH
	DD	50					; 00000032H
	DD	$L96864
	DD	-336					; fffffeb0H
	DD	148					; 00000094H
	DD	$L96865
	DD	-540					; fffffde4H
	DD	196					; 000000c4H
	DD	$L96866
	DD	-564					; fffffdccH
	DD	4
	DD	$L96867
$L96867:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L96866:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L96865:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L96864:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	51					; 00000033H
	DB	0
$L96863:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L96862:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportexportedreportfile@CMainFrame@@QAEXXZ@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T96849[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportexportedreportfile@CMainFrame@@QAEXXZ ENDP ; CMainFrame::OnImportImportexportedreportfile
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportexportedreportfile, COMDAT
; _this$ = ecx

; 664  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 665  : 	// TODO: Add your command update UI handler code here
; 666  :    pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 667  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportexportedreportfile@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportexportedreportfile
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 967  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 969  : 
; 970  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 971  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$95773 = -44					; size = 4
_pOldData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 273  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 275  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 276  : 		if( pSrcData != pOldData)

	mov	eax, DWORD PTR _pSrcData$[ebp]
	cmp	eax, DWORD PTR _pOldData$[ebp]
	je	SHORT $L95769

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L95771
	mov	eax, DWORD PTR _pSrcData$[ebp]
	mov	ecx, DWORD PTR _pOldData$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $L95770
$L95771:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 281  : 			}
; 282  : 			else

	jmp	SHORT $L95769
$L95770:

; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$95773[ebp], eax

; 285  : 				pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 286  : 				Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$95773[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L95769:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L96886
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96886
	int	3
$L96886:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L25707

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L25707:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
PUBLIC	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 797  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 815  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 830  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 831  : 		if( !CheckImplicitLoad( pszSrc ) )

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L92648

; 832  : 		{
; 833  : 			// nDestLength is in XCHARs
; 834  : 			*this = pszSrc;

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
$L92648:

; 835  : 		}
; 836  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
__ehhandler$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 500  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	eax, DWORD PTR [eax+4]

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 982  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ; ATL::CSimpleStringT<char,0>::operator=

; 984  : 
; 985  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 986  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@ ; `string'
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
EXTRN	@_RTC_Check_4_to_2@4:NEAR
EXTRN	?atlTraceString@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceString
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT
??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@ DB 'Warn'
	DB	'ing: implicit LoadString(%u) failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
$T96909 = -240						; size = 8
_nID$92783 = -32					; size = 4
_bRet$ = -17						; size = 1
_this$ = -8						; size = 4
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2230 : 		bool bRet = false;

	mov	BYTE PTR _bRet$[ebp], 0

; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	cmp	DWORD PTR _pv$[ebp], 0
	je	SHORT $L92782
	mov	eax, DWORD PTR _pv$[ebp]
	shr	eax, 16					; 00000010H
	test	eax, eax
	jne	SHORT $L92782

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

	mov	ecx, DWORD PTR _pv$[ebp]
	and	ecx, 65535				; 0000ffffH
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	mov	DWORD PTR _nID$92783[ebp], eax

; 2235 : 			if( !LoadString( nID ) )

	mov	eax, DWORD PTR _nID$92783[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
	test	eax, eax
	jne	SHORT $L92787

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );

	mov	eax, DWORD PTR _nID$92783[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceString@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceString
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2237					; 000008bdH
	push	OFFSET FLAT:??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T96909[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
$L92787:

; 2238 : 			}
; 2239 : 			bRet = true;

	mov	BYTE PTR _bRet$[ebp], 1
$L92782:

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );

	mov	al, BYTE PTR _bRet$[ebp]

; 2243 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 164  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_hInst$ = -20						; size = 4
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1969 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
	add	esp, 4
	mov	DWORD PTR _hInst$[ebp], eax

; 1971 : 		if( hInst == NULL )

	cmp	DWORD PTR _hInst$[ebp], 0
	jne	SHORT $L92676

; 1972 : 		{
; 1973 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92674
$L92676:

; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
$L92674:

; 1977 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_pszBuffer$ = -44					; size = 4
_nLength$ = -32						; size = 4
_pImage$ = -20						; size = 4
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1981 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _pImage$[ebp], eax

; 1983 : 		if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L92775

; 1984 : 		{
; 1985 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92773
$L92775:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
	add	esp, 8
	mov	DWORD PTR _nLength$[ebp], eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	call	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 1991 : 		ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength

; 1992 : 
; 1993 : 		return( TRUE );

	mov	eax, 1
$L92773:

; 1994 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -8					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	ecx, DWORD PTR _id$[ebp]
	shr	ecx, 4
	add	ecx, 1
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L25360

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25352
$L25360:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L25352:

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -56						; size = 4
_hGlobal$ = -44						; size = 4
_nResourceSize$ = -32					; size = 4
_pImageEnd$ = -20					; size = 4
_pImage$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L25337

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L25331
$L25337:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	eax, DWORD PTR _hGlobal$[ebp]
	push	eax
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L25339

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25331
$L25339:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	eax, DWORD PTR _pImage$[ebp]
	add	eax, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], eax

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L25342:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L25343
	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L25343

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pImage$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _pImage$[ebp], eax

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L25342
$L25343:

; 267  : 	if( pImage >= pImageEnd )

	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L25347

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25331
$L25347:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $L25348

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25331
$L25348:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L25331:

; 277  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L96923
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96923
	int	3
$L96923:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_pNewData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 217  : 	CSimpleStringT( const CSimpleStringT& strSrc )

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$[ebp], eax

; 221  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 222  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L96932
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96932
	int	3
$L96932:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92828

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L92828:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L96939
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96939
	int	3
$L96939:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L96940
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96940
	int	3
$L96940:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92836
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92835
$L92836:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92835:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	BYTE PTR [ecx+edx], 0
$L96938:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T96943 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T96943[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L24989

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L24989:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L96942:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:NEAR ; AfxFindStringResourceHandle
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   : 		return( AfxFindStringResourceHandle( nID ) );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
EXTRN	__imp__WideCharToMultiByte@32:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::ConvertToBaseType, COMDAT

; 451  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 452  : 		// nLen is in XCHARs
; 453  : 		::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength, NULL, NULL );

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nSrcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp

; 454  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ENDP ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		SetString( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92884 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92880

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92880:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92881

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92878
$L92881:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92878

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92884[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92884[ebp], 1024	; 00000400H
	jle	SHORT $L92885

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92884[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92886
$L92885:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92886:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92887

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92887:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L92878:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pNewStringMgr$ = -20					; size = 4
_pNewData$ = -8						; size = 4
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 802  : 		CStringData* pNewData = NULL;

	mov	DWORD PTR _pNewData$[ebp], 0

; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewStringMgr$[ebp], eax

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L92891
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L92891

; 806  : 		{
; 807  : 			pNewData = pData;

	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pNewData$[ebp], eax

; 808  : 			pNewData->AddRef();

	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?AddRef@CStringData@ATL@@QAEXXZ		; ATL::CStringData::AddRef

; 809  : 		}
; 810  : 		else

	jmp	SHORT $L92892
$L92891:

; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pNewStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 813  : 			if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92894

; 814  : 			{
; 815  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92894:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92892:

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
$L96963:

; 822  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@		; `string'
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT
??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@ DB 'nRefs > 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		ATLASSERT(nRefs > 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jg	SHORT $L96966
	push	OFFSET FLAT:??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
	push	0
	push	71					; 00000047H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96966
	int	3
$L96966:

; 72   : 		_InterlockedIncrement(&nRefs);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSource$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::GetBaseTypeLength, COMDAT

; 436  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 437  : 		// Returns required buffer length in XCHARs
; 438  : 		return ::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSource, nLength, NULL, 0, NULL, NULL );

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSource$[ebp]
	push	ecx
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp

; 439  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<char>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 581  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
EXTRN	_strlen:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 677  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		if( psz == NULL )

	cmp	DWORD PTR _psz$[ebp], 0
	jne	SHORT $L92819

; 679  : 		{
; 680  : 			return( 0 );

	xor	eax, eax
	jmp	SHORT $L92818
$L92819:

; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

	mov	eax, DWORD PTR _psz$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
$L92818:

; 683  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L96976:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92916

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92916:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L96979
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L96980
$L96979:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L96980:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L96978:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L96983
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96983
	int	3
$L96983:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92926

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92926:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L96982:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszBuffer$92935 = -44					; size = 4
_nOffset$92934 = -32					; size = 4
_nOldLength$92933 = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 		if( nLength == 0 )

	cmp	DWORD PTR _nLength$[ebp], 0
	jne	SHORT $L92929

; 585  : 		{
; 586  : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty

; 587  : 		}
; 588  : 		else

	jmp	SHORT $L96985
$L92929:

; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

	cmp	DWORD PTR _pszSrc$[ebp], 0
	jne	SHORT $L92931

; 597  : 				AtlThrow(E_INVALIDARG);			

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92931:

; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	mov	DWORD PTR _nOldLength$92933[ebp], eax

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nOffset$92934[ebp], ecx

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92935[ebp], eax

; 605  : 			if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$92934[ebp]
	cmp	eax, DWORD PTR _nOldLength$92933[ebp]
	ja	SHORT $L92936

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$92935[ebp]
	add	ecx, DWORD PTR _nOffset$92934[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
	add	esp, 12					; 0000000cH

; 608  : 			}
; 609  : 			else

	jmp	SHORT $L92937
$L92936:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92937:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
$L96985:

; 614  : 		}
; 615  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92811 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92808

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92805
$L92808:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92809

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92805
$L92809:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92811[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92811[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L92805:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 509  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 510  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 511  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
EXTRN	_memmove:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 656  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 658  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
END
