; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\wspell.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_07CMAILJOJ@CWSpell?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05PGMGPAMI@2?4clx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIGJOCHO@?4tlx?$DL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNEOABME@sscream?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01ICJEACDI@?$DL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NGLILAGL@ssceca?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06LGJFJLMO@sscebr?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@HIGENLHL@accent?4clx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@HHIMOECC@correct?4clx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08EOMMGLAM@tech?4tlx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@EOPAGCHG@userdic?4tlx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@KENCKLIF@?$CIiChar?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiChar?5?$DM?$DN?5GetLen@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@CWSpell@@SGPAVCObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWSpell@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWSpell@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestionCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSuggestionCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMisspelledWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetReplacementWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWordOffset@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWordOffset@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWordCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWordCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWordsReplacedCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWordsReplacedCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCaseSensitive@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCaseSensitive@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCanUndo@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCanUndo@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCatchDoubledWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCatchDoubledWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCatchMixedCaseWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCatchMixedCaseWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCatchWordsWithDigits@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCatchWordsWithDigits@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCurrentWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreAllCapsWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreAllCapsWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreMixedCaseWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreMixedCaseWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreWordsWithDigits@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreWordsWithDigits@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMainDictionaryCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMainDictionaryCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMaxSuggestions@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMaxSuggestions@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMinSuggestionDepth@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMinSuggestionDepth@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPhoneticSuggestions@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPhoneticSuggestions@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSplitContractedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSplitContractedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSplitHyphenatedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSplitHyphenatedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSplitWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSplitWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStripPossessives@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStripPossessives@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestionDepth@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSuggestionDepth@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestionDepthIncrement@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSuggestionDepthIncrement@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestSplitWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSuggestSplitWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTextLength@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTextLength@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypographicalSuggestions@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTypographicalSuggestions@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetUndoNewText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUndoOffset@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetUndoOffset@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetUndoOldText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetUserDictionaryCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetUserDictionaryFiles@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreCapitalizedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreCapitalizedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetShowContext@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetShowContext@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetShowDialog@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetShowDialog@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTextControlHWnd@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTextControlHWnd@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogLeft@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDialogLeft@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogTop@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDialogTop@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestionScoreRange@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSuggestionScoreRange@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMinSuggestionScore@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMinSuggestionScore@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAutoCorrect@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAutoCorrect@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetVersion@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMisspelledWordCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMisspelledWordCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetErrorCode@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetErrorCode@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreNonAlphaWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreNonAlphaWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreDomainNames@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreDomainNames@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAllowAccentedCaps@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowAccentedCaps@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIgnoreHTMLMarkups@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIgnoreHTMLMarkups@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCharacterSet@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCharacterSet@CWSpell@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBackupUserDictionary@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBackupUserDictionary@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetShowOptionsButton@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetShowOptionsButton@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetShowDictionariesButton@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetShowDictionariesButton@CWSpell@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddMainDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddUserDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearTempDictionary@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateUserDictionary@CWSpell@@QAEFPBDF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IgnoreAllWord@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IgnoreWord@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NextWord@CWSpell@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveMainDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveUserDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceAllWord@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceWord@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Resume@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Start@CWSpell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Suggest@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TestWord@CWSpell@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Undo@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowUserDictionaryDialog@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowOptionsDialog@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteWord@CWSpell@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AboutBox@CWSpell@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?classCWSpell@CWSpell@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWSpell@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07CMAILJOJ@CWSpell?$AA@			; `string'
PUBLIC	?classCWSpell@CWSpell@@2UCRuntimeClass@@B	; CWSpell::classCWSpell
PUBLIC	?CreateObject@CWSpell@@SGPAVCObject@@XZ		; CWSpell::CreateObject
EXTRN	?classCWnd@CWnd@@2UCRuntimeClass@@B:BYTE	; CWnd::classCWnd
;	COMDAT ??_C@_07CMAILJOJ@CWSpell?$AA@
CONST	SEGMENT
??_C@_07CMAILJOJ@CWSpell?$AA@ DB 'CWSpell', 00H		; `string'
CONST	ENDS
;	COMDAT ?classCWSpell@CWSpell@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCWSpell@CWSpell@@2UCRuntimeClass@@B DD FLAT:??_C@_07CMAILJOJ@CWSpell?$AA@ ; CWSpell::classCWSpell
	DD	050H
	DD	0ffffH
	DD	FLAT:?CreateObject@CWSpell@@SGPAVCObject@@XZ
	DD	FLAT:?classCWnd@CWnd@@2UCRuntimeClass@@B
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
?parms@?1??GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA DB 02H
	DB	00H						; `CWSpell::GetSuggestion'::`2'::parms
	ORG $+2
?parms@?1??GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA DB 02H
	DB	00H						; `CWSpell::GetMainDictionary'::`2'::parms
	ORG $+2
?parms@?1??GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA DB 02H
	DB	00H						; `CWSpell::GetUserDictionary'::`2'::parms
	ORG $+2
?parms@?1??AddMainDictionary@CWSpell@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::AddMainDictionary'::`2'::parms
	ORG $+2
?parms@?1??AddUserDictionary@CWSpell@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::AddUserDictionary'::`2'::parms
	ORG $+2
?parms@?1??CreateUserDictionary@CWSpell@@QAEFPBDF@Z@4PAEA DB 0eH, 02H, 00H ; `CWSpell::CreateUserDictionary'::`2'::parms
	ORG $+1
?parms@?1??DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH
	DB	00H						; `CWSpell::DeleteFromUserDictionary'::`2'::parms
	ORG $+1
?parms@?1??RemoveMainDictionary@CWSpell@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::RemoveMainDictionary'::`2'::parms
	ORG $+2
?parms@?1??RemoveUserDictionary@CWSpell@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::RemoveUserDictionary'::`2'::parms
	ORG $+2
?parms@?1??TestWord@CWSpell@@QAEHPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::TestWord'::`2'::parms
	ORG $+2
?parms@?1??GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA DB 0eH
	DB	03H, 00H					; `CWSpell::GetUserDictionaryWord'::`2'::parms
	ORG $+1
?parms@?1??GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CWSpell::GetUserDictionaryWordCount'::`2'::parms
	ORG $+2
?parms@?1??GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z@4PAEA DB 0eH, 0eH
	DB	00H						; `CWSpell::GetUserDictionaryWordAction'::`2'::parms
	ORG $+1
?parms@?1??GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z@4PAEA DB 0eH
	DB	0eH, 00H					; `CWSpell::GetUserDictionaryOtherWord'::`2'::parms
	ORG $+1
?parms@?1??AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z@4PAEA DB 0eH, 0eH, 02H
	DB	0eH, 00H					; `CWSpell::AddToUserDictionary'::`2'::parms
	ORG $+3
?parms@?1??CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z@4PAEA DB 03H, 0bH, 0bH
	DB	0bH, 0bH, 03H, 00H				; `CWSpell::CheckBackgroundNotify'::`2'::parms
	ORG $+1
?parms@?1??CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z@4PAEA DB 03H, 0bH
	DB	0bH, 0bH, 0bH, 03H, 00H			; `CWSpell::CheckBackgroundRecheck'::`2'::parms
	ORG $+1
?parms@?1??CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z@4PAEA DB 03H, 03H
	DB	03H, 03H, 0bH, 0bH, 0bH, 0bH, 03H, 00H	; `CWSpell::CheckBackgroundMenu'::`2'::parms
_DATA	ENDS
PUBLIC	??0CWSpell@@QAE@XZ				; CWSpell::CWSpell
EXTRN	??2CObject@@SGPAXI@Z:NEAR			; CObject::operator new
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__except_list:DWORD
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT rtc$IMZ
; File c:\astrow32dev\tbt32\wspell.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateObject@CWSpell@@SGPAVCObject@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@CWSpell@@SGPAVCObject@@XZ$0
__ehfuncinfo$?CreateObject@CWSpell@@SGPAVCObject@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@CWSpell@@SGPAVCObject@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateObject@CWSpell@@SGPAVCObject@@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T94366 = -224						; size = 4
$T94367 = -212						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CWSpell@@SGPAVCObject@@XZ PROC NEAR	; CWSpell::CreateObject, COMDAT

; 18   : IMPLEMENT_DYNCREATE(CWSpell, CWnd)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateObject@CWSpell@@SGPAVCObject@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	80					; 00000050H
	call	??2CObject@@SGPAXI@Z			; CObject::operator new
	mov	DWORD PTR $T94367[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T94367[ebp], 0
	je	SHORT $L94368
	mov	ecx, DWORD PTR $T94367[ebp]
	call	??0CWSpell@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $L94369
$L94368:
	mov	DWORD PTR tv71[ebp], 0
$L94369:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T94366[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T94366[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateObject@CWSpell@@SGPAVCObject@@XZ$0:
	mov	eax, DWORD PTR $T94367[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
	ret	0
__ehhandler$?CreateObject@CWSpell@@SGPAVCObject@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?CreateObject@CWSpell@@SGPAVCObject@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateObject@CWSpell@@SGPAVCObject@@XZ ENDP		; CWSpell::CreateObject
PUBLIC	??_7CWSpell@@6B@				; CWSpell::`vftable'
PUBLIC	??_GCWSpell@@UAEPAXI@Z				; CWSpell::`scalar deleting destructor'
PUBLIC	?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ ; CWSpell::GetRuntimeClass
PUBLIC	?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CWSpell::Create
EXTRN	??_ECWSpell@@UAEPAXI@Z:NEAR			; CWSpell::`vector deleting destructor'
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:NEAR			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CWnd::Dump
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
;	COMDAT ??_7CWSpell@@6B@
CONST	SEGMENT
??_7CWSpell@@6B@ DD FLAT:?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ ; CWSpell::`vftable'
	DD	FLAT:??_ECWSpell@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CWSpell@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CWSpell@@QAE@XZ PROC NEAR				; CWSpell::CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWnd@@QAE@XZ				; CWnd::CWnd
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CWSpell@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWSpell@@QAE@XZ ENDP					; CWSpell::CWSpell
_TEXT	ENDS
PUBLIC	?GetClsid@CWSpell@@QAEABU_GUID@@XZ		; CWSpell::GetClsid
EXTRN	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPAG@Z:NEAR ; CWnd::CreateControl
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\wspell.h
;	COMDAT ?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC NEAR ; CWSpell::Create, COMDAT
; _this$ = ecx

; 31   : 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pParentWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszWindowName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClsid@CWSpell@@QAEABU_GUID@@XZ	; CWSpell::GetClsid
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPAG@Z ; CWnd::CreateControl
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@CWSpell@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CWSpell::Create
_TEXT	ENDS
PUBLIC	?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B ; `CWSpell::GetClsid'::`2'::clsid
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B DD 0245338c3H ; `CWSpell::GetClsid'::`2'::clsid
	DW	0bca3H
	DW	04a2cH
	DB	0a7H
	DB	0b7H
	DB	053H
	DB	034H
	DB	059H
	DB	099H
	DB	0a8H
	DB	0e8H
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetClsid@CWSpell@@QAEABU_GUID@@XZ PROC NEAR		; CWSpell::GetClsid, COMDAT
; _this$ = ecx

; 21   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 22   : 		static CLSID const clsid
; 23   : 			= { 0x245338c3, 0xbca3, 0x4a2c, { 0xa7, 0xb7, 0x53, 0x34, 0x59, 0x99, 0xa8, 0xe8 } };
; 24   : 		return clsid;

	mov	eax, OFFSET FLAT:?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B ; `CWSpell::GetClsid'::`2'::clsid

; 25   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClsid@CWSpell@@QAEABU_GUID@@XZ ENDP			; CWSpell::GetClsid
_TEXT	ENDS
PUBLIC	??1CWSpell@@UAE@XZ				; CWSpell::~CWSpell
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCWSpell@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCWSpell@@UAEPAXI@Z PROC NEAR			; CWSpell::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWSpell@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93293
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93293:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCWSpell@@UAEPAXI@Z ENDP				; CWSpell::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CWSpell@@UAE@XZ PROC NEAR				; CWSpell::~CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWSpell@@UAE@XZ ENDP					; CWSpell::~CWSpell
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\wspell.cpp
_TEXT	ENDS
;	COMDAT ?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CWSpell::GetRuntimeClass, COMDAT
; _this$ = ecx

; 18   : IMPLEMENT_DYNCREATE(CWSpell, CWnd)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?classCWSpell@CWSpell@@2UCRuntimeClass@@B ; CWSpell::classCWSpell
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRuntimeClass@CWSpell@@UBEPAUCRuntimeClass@@XZ ENDP	; CWSpell::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_05PGMGPAMI@2?4clx?$AA@			; `string'
PUBLIC	??_C@_05GIGJOCHO@?4tlx?$DL?$AA@			; `string'
PUBLIC	??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z		; ATL::CSimpleStringT<char,0>::operator[]
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
EXTRN	_getcwd:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$4
__ehfuncinfo$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z DD 019930520H
	DD	05H
	DD	FLAT:__unwindtable$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIGJOCHO@?4tlx?$DL?$AA@
CONST	SEGMENT
??_C@_05GIGJOCHO@?4tlx?$DL?$AA@ DB '.tlx;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PGMGPAMI@2?4clx?$AA@
CONST	SEGMENT
??_C@_05PGMGPAMI@2?4clx?$AA@ DB '2.clx', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z
_TEXT	SEGMENT
tv151 = -564						; size = 4
tv141 = -560						; size = 4
tv149 = -556						; size = 4
tv65 = -552						; size = 4
tv147 = -548						; size = 4
tv68 = -544						; size = 4
$T94407 = -536						; size = 4
$T94408 = -524						; size = 4
$T94409 = -512						; size = 4
$T94416 = -500						; size = 4
_str$ = -296						; size = 4
_ret$ = -284						; size = 4
_buf$ = -272						; size = 250
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_p$ = 12						; size = 4
_one$ = 16						; size = 4
?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z PROC NEAR ; MakeName, COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR $T94416[ebp], 0

; 25   :   char buf[250];
; 26   :   CString ret, str;

	lea	ecx, DWORD PTR _ret$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 27   : #ifndef TBT32
; 28   :   str= theDirectories.getMain();
; 29   : #else
; 30   :   str = getcwd(buf,249);

	push	249					; 000000f9H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_getcwd
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=

; 31   : #endif
; 32   :   if ( str[str.GetLength()-1] != '\\' )

	lea	ecx, DWORD PTR _str$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z	; ATL::CSimpleStringT<char,0>::operator[]
	movsx	eax, al
	cmp	eax, 92					; 0000005cH
	je	SHORT $L93311

; 33   : 	  str += "\\";

	push	OFFSET FLAT:??_C@_01KICIPPFI@?2?$AA@
	lea	ecx, DWORD PTR _str$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
$L93311:

; 34   :   str += p;

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 35   :   if ( !one )

	cmp	DWORD PTR _one$[ebp], 0
	jne	$L93313

; 36   :     ret = str + ".tlx;" + str + "2.clx";

	push	OFFSET FLAT:??_C@_05GIGJOCHO@?4tlx?$DL?$AA@
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T94407[ebp]
	push	ecx
	call	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv147[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	lea	edx, DWORD PTR $T94408[ebp]
	push	edx
	call	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv149[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET FLAT:??_C@_05PGMGPAMI@2?4clx?$AA@
	mov	ecx, DWORD PTR tv149[ebp]
	push	ecx
	lea	edx, DWORD PTR $T94409[ebp]
	push	edx
	call	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv151[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv151[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ret$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T94409[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T94408[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T94407[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
$L93313:

; 37   :   return( ret );

	lea	eax, DWORD PTR _ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94416[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94416[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ret$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 38   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94427
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94427:
	DD	3
	DD	$L94426
$L94426:
	DD	-272					; fffffef0H
	DD	250					; 000000faH
	DD	$L94420
	DD	-284					; fffffee4H
	DD	4
	DD	$L94421
	DD	-296					; fffffed8H
	DD	4
	DD	$L94422
$L94422:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L94421:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$L94420:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$0:
	lea	ecx, DWORD PTR _ret$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$2:
	lea	ecx, DWORD PTR $T94407[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$3:
	lea	ecx, DWORD PTR $T94408[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z$4:
	lea	ecx, DWORD PTR $T94409[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ENDP ; MakeName
PUBLIC	?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; MakeDics
PUBLIC	??_C@_07PNEOABME@sscream?$AA@			; `string'
PUBLIC	??_C@_01ICJEACDI@?$DL?$AA@			; `string'
PUBLIC	??_C@_06NGLILAGL@ssceca?$AA@			; `string'
PUBLIC	??_C@_06LGJFJLMO@sscebr?$AA@			; `string'
PUBLIC	??_C@_0L@HIGENLHL@accent?4clx?$AA@		; `string'
PUBLIC	??_C@_0M@HHIMOECC@correct?4clx?$AA@		; `string'
PUBLIC	??_C@_08EOMMGLAM@tech?4tlx?$AA@			; `string'
PUBLIC	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$5
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$6
__ehfuncinfo$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	07H
	DD	FLAT:__unwindtable$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_07PNEOABME@sscream?$AA@
CONST	SEGMENT
??_C@_07PNEOABME@sscream?$AA@ DB 'sscream', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01ICJEACDI@?$DL?$AA@
CONST	SEGMENT
??_C@_01ICJEACDI@?$DL?$AA@ DB ';', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NGLILAGL@ssceca?$AA@
CONST	SEGMENT
??_C@_06NGLILAGL@ssceca?$AA@ DB 'ssceca', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGJFJLMO@sscebr?$AA@
CONST	SEGMENT
??_C@_06LGJFJLMO@sscebr?$AA@ DB 'sscebr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HIGENLHL@accent?4clx?$AA@
CONST	SEGMENT
??_C@_0L@HIGENLHL@accent?4clx?$AA@ DB 'accent.clx', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHIMOECC@correct?4clx?$AA@
CONST	SEGMENT
??_C@_0M@HHIMOECC@correct?4clx?$AA@ DB 'correct.clx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOMMGLAM@tech?4tlx?$AA@
CONST	SEGMENT
??_C@_08EOMMGLAM@tech?4tlx?$AA@ DB 'tech.tlx', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
tv173 = -308						; size = 4
tv171 = -308						; size = 4
tv169 = -308						; size = 4
tv167 = -308						; size = 4
tv165 = -308						; size = 4
tv163 = -308						; size = 4
tv182 = -304						; size = 4
tv181 = -304						; size = 4
tv180 = -304						; size = 4
tv179 = -304						; size = 4
tv158 = -304						; size = 4
tv65 = -304						; size = 4
$T94435 = -296						; size = 4
$T94436 = -284						; size = 4
$T94437 = -272						; size = 4
$T94438 = -260						; size = 4
$T94439 = -248						; size = 4
$T94440 = -236						; size = 4
$T94449 = -224						; size = 4
_dirs$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; MakeDics, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T94449[ebp], 0

; 42   :  CString dirs;

	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 
; 44   :  dirs = MakeName("sscream",0);

	push	0
	push	OFFSET FLAT:??_C@_07PNEOABME@sscream?$AA@
	lea	eax, DWORD PTR $T94435[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv163[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94435[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 45   :  dirs += ";";

	push	OFFSET FLAT:??_C@_01ICJEACDI@?$DL?$AA@
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 46   :  dirs += MakeName("ssceca",0);

	push	0
	push	OFFSET FLAT:??_C@_06NGLILAGL@ssceca?$AA@
	lea	eax, DWORD PTR $T94436[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv158[ebp], eax
	mov	ecx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv165[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94436[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 47   :  dirs += ";";

	push	OFFSET FLAT:??_C@_01ICJEACDI@?$DL?$AA@
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 48   :  dirs += MakeName("sscebr",0);

	push	0
	push	OFFSET FLAT:??_C@_06LGJFJLMO@sscebr?$AA@
	lea	eax, DWORD PTR $T94437[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv179[ebp], eax
	mov	ecx, DWORD PTR tv179[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv167[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94437[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 49   :  dirs += ";";

	push	OFFSET FLAT:??_C@_01ICJEACDI@?$DL?$AA@
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 50   :  dirs += MakeName("accent.clx",1);

	push	1
	push	OFFSET FLAT:??_C@_0L@HIGENLHL@accent?4clx?$AA@
	lea	eax, DWORD PTR $T94438[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv180[ebp], eax
	mov	ecx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94438[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 51   :  dirs += ";";

	push	OFFSET FLAT:??_C@_01ICJEACDI@?$DL?$AA@
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 52   :  dirs += MakeName("correct.clx",1);

	push	1
	push	OFFSET FLAT:??_C@_0M@HHIMOECC@correct?4clx?$AA@
	lea	eax, DWORD PTR $T94439[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94439[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 53   :  dirs += ";";

	push	OFFSET FLAT:??_C@_01ICJEACDI@?$DL?$AA@
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=

; 54   :  dirs += MakeName("tech.tlx",1);

	push	1
	push	OFFSET FLAT:??_C@_08EOMMGLAM@tech?4tlx?$AA@
	lea	eax, DWORD PTR $T94440[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	mov	ecx, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv173[ebp]
	push	edx
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T94440[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 55   :  return(dirs);

	lea	eax, DWORD PTR _dirs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94449[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94449[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dirs$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 56   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94456
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94456:
	DD	1
	DD	$L94455
$L94455:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94453
$L94453:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _dirs$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$1:
	lea	ecx, DWORD PTR $T94435[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$2:
	lea	ecx, DWORD PTR $T94436[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$3:
	lea	ecx, DWORD PTR $T94437[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$4:
	lea	ecx, DWORD PTR $T94438[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$5:
	lea	ecx, DWORD PTR $T94439[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$6:
	lea	ecx, DWORD PTR $T94440[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; MakeDics
PUBLIC	?GetSuggestionCount@CWSpell@@QAEFXZ		; CWSpell::GetSuggestionCount
EXTRN	?GetProperty@CWnd@@QBEXJGPAX@Z:NEAR		; CWnd::GetProperty
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSuggestionCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetSuggestionCount@CWSpell@@QAEFXZ PROC NEAR		; CWSpell::GetSuggestionCount, COMDAT
; _this$ = ecx

; 59   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 	short result;
; 61   : 	GetProperty(0x6, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 62   : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 63   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94464
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94464:
	DD	1
	DD	$L94463
$L94463:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94462
$L94462:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSuggestionCount@CWSpell@@QAEFXZ ENDP		; CWSpell::GetSuggestionCount
_TEXT	ENDS
PUBLIC	?SetSuggestionCount@CWSpell@@QAEXF@Z		; CWSpell::SetSuggestionCount
EXTRN	?SetProperty@CWnd@@QAAXJGZZ:NEAR		; CWnd::SetProperty
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSuggestionCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetSuggestionCount@CWSpell@@QAEXF@Z PROC NEAR		; CWSpell::SetSuggestionCount, COMDAT
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 	SetProperty(0x6, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 68   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSuggestionCount@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetSuggestionCount
_TEXT	ENDS
PUBLIC	?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetMisspelledWord
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94471 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetMisspelledWord, COMDAT
; _this$ = ecx

; 71   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94471[ebp], 0

; 72   : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 	GetProperty(0x7, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 74   : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94471[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94471[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 75   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94478
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94478:
	DD	1
	DD	$L94477
$L94477:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94475
$L94475:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetMisspelledWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetMisspelledWord
PUBLIC	?SetMisspelledWord@CWSpell@@QAEXPBD@Z		; CWSpell::SetMisspelledWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMisspelledWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetMisspelledWord@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::SetMisspelledWord, COMDAT
; _this$ = ecx

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 	SetProperty(0x7, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 80   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMisspelledWord@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::SetMisspelledWord
_TEXT	ENDS
PUBLIC	?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetReplacementWord
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94488 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetReplacementWord, COMDAT
; _this$ = ecx

; 83   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94488[ebp], 0

; 84   : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 85   : 	GetProperty(0x8, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 86   : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94488[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94488[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 87   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94495
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94495:
	DD	1
	DD	$L94494
$L94494:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94492
$L94492:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetReplacementWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetReplacementWord
PUBLIC	?SetReplacementWord@CWSpell@@QAEXPBD@Z		; CWSpell::SetReplacementWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetReplacementWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetReplacementWord@CWSpell@@QAEXPBD@Z PROC NEAR	; CWSpell::SetReplacementWord, COMDAT
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	SetProperty(0x8, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 92   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReplacementWord@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::SetReplacementWord
_TEXT	ENDS
PUBLIC	?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94505 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetText, COMDAT
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94505[ebp], 0

; 96   : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 97   : 	GetProperty(DISPID_TEXT, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	-517					; fffffdfbH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 98   : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94505[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94505[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 99   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94512
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94512:
	DD	1
	DD	$L94511
$L94511:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94509
$L94509:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetText
PUBLIC	?SetText@CWSpell@@QAEXPBD@Z			; CWSpell::SetText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetText@CWSpell@@QAEXPBD@Z PROC NEAR			; CWSpell::SetText, COMDAT
; _this$ = ecx

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 103  : 	SetProperty(DISPID_TEXT, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	-517					; fffffdfbH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 104  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetText@CWSpell@@QAEXPBD@Z ENDP			; CWSpell::SetText
_TEXT	ENDS
PUBLIC	?GetWordOffset@CWSpell@@QAEJXZ			; CWSpell::GetWordOffset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetWordOffset@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetWordOffset@CWSpell@@QAEJXZ PROC NEAR		; CWSpell::GetWordOffset, COMDAT
; _this$ = ecx

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	long result;
; 109  : 	GetProperty(0x9, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 110  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 111  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94522
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94522:
	DD	1
	DD	$L94521
$L94521:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94520
$L94520:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetWordOffset@CWSpell@@QAEJXZ ENDP			; CWSpell::GetWordOffset
_TEXT	ENDS
PUBLIC	?SetWordOffset@CWSpell@@QAEXJ@Z			; CWSpell::SetWordOffset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetWordOffset@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetWordOffset@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetWordOffset, COMDAT
; _this$ = ecx

; 114  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	SetProperty(0x9, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 116  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWordOffset@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetWordOffset
_TEXT	ENDS
PUBLIC	?GetWordCount@CWSpell@@QAEJXZ			; CWSpell::GetWordCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetWordCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetWordCount@CWSpell@@QAEJXZ PROC NEAR			; CWSpell::GetWordCount, COMDAT
; _this$ = ecx

; 119  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  : 	long result;
; 121  : 	GetProperty(0xa, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 122  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 123  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94529
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94529:
	DD	1
	DD	$L94528
$L94528:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94527
$L94527:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetWordCount@CWSpell@@QAEJXZ ENDP			; CWSpell::GetWordCount
_TEXT	ENDS
PUBLIC	?SetWordCount@CWSpell@@QAEXJ@Z			; CWSpell::SetWordCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetWordCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetWordCount@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetWordCount, COMDAT
; _this$ = ecx

; 126  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 	SetProperty(0xa, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 128  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWordCount@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetWordCount
_TEXT	ENDS
PUBLIC	?GetWordsReplacedCount@CWSpell@@QAEJXZ		; CWSpell::GetWordsReplacedCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetWordsReplacedCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetWordsReplacedCount@CWSpell@@QAEJXZ PROC NEAR	; CWSpell::GetWordsReplacedCount, COMDAT
; _this$ = ecx

; 131  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 	long result;
; 133  : 	GetProperty(0xb, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 134  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 135  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94536
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94536:
	DD	1
	DD	$L94535
$L94535:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94534
$L94534:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetWordsReplacedCount@CWSpell@@QAEJXZ ENDP		; CWSpell::GetWordsReplacedCount
_TEXT	ENDS
PUBLIC	?SetWordsReplacedCount@CWSpell@@QAEXJ@Z		; CWSpell::SetWordsReplacedCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetWordsReplacedCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetWordsReplacedCount@CWSpell@@QAEXJ@Z PROC NEAR	; CWSpell::SetWordsReplacedCount, COMDAT
; _this$ = ecx

; 138  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 139  : 	SetProperty(0xb, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 140  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWordsReplacedCount@CWSpell@@QAEXJ@Z ENDP		; CWSpell::SetWordsReplacedCount
_TEXT	ENDS
PUBLIC	?GetCaseSensitive@CWSpell@@QAEHXZ		; CWSpell::GetCaseSensitive
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCaseSensitive@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetCaseSensitive@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetCaseSensitive, COMDAT
; _this$ = ecx

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 	BOOL result;
; 145  : 	GetProperty(0xc, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 146  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 147  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94543
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94543:
	DD	1
	DD	$L94542
$L94542:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94541
$L94541:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCaseSensitive@CWSpell@@QAEHXZ ENDP			; CWSpell::GetCaseSensitive
_TEXT	ENDS
PUBLIC	?SetCaseSensitive@CWSpell@@QAEXH@Z		; CWSpell::SetCaseSensitive
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCaseSensitive@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCaseSensitive@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetCaseSensitive, COMDAT
; _this$ = ecx

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 	SetProperty(0xc, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 152  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCaseSensitive@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetCaseSensitive
_TEXT	ENDS
PUBLIC	?GetCanUndo@CWSpell@@QAEHXZ			; CWSpell::GetCanUndo
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCanUndo@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetCanUndo@CWSpell@@QAEHXZ PROC NEAR			; CWSpell::GetCanUndo, COMDAT
; _this$ = ecx

; 155  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  : 	BOOL result;
; 157  : 	GetProperty(0xd, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 158  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 159  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94550
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94550:
	DD	1
	DD	$L94549
$L94549:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94548
$L94548:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCanUndo@CWSpell@@QAEHXZ ENDP			; CWSpell::GetCanUndo
_TEXT	ENDS
PUBLIC	?SetCanUndo@CWSpell@@QAEXH@Z			; CWSpell::SetCanUndo
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCanUndo@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCanUndo@CWSpell@@QAEXH@Z PROC NEAR			; CWSpell::SetCanUndo, COMDAT
; _this$ = ecx

; 162  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 	SetProperty(0xd, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 164  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCanUndo@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetCanUndo
_TEXT	ENDS
PUBLIC	?GetCatchDoubledWords@CWSpell@@QAEHXZ		; CWSpell::GetCatchDoubledWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCatchDoubledWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetCatchDoubledWords@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetCatchDoubledWords, COMDAT
; _this$ = ecx

; 167  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 168  : 	BOOL result;
; 169  : 	GetProperty(0xe, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 170  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 171  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94557
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94557:
	DD	1
	DD	$L94556
$L94556:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94555
$L94555:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCatchDoubledWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetCatchDoubledWords
_TEXT	ENDS
PUBLIC	?SetCatchDoubledWords@CWSpell@@QAEXH@Z		; CWSpell::SetCatchDoubledWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCatchDoubledWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCatchDoubledWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetCatchDoubledWords, COMDAT
; _this$ = ecx

; 174  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 	SetProperty(0xe, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 176  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCatchDoubledWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetCatchDoubledWords
_TEXT	ENDS
PUBLIC	?GetCatchMixedCaseWords@CWSpell@@QAEHXZ		; CWSpell::GetCatchMixedCaseWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCatchMixedCaseWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetCatchMixedCaseWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetCatchMixedCaseWords, COMDAT
; _this$ = ecx

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 	BOOL result;
; 181  : 	GetProperty(0xf, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 182  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 183  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94564
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94564:
	DD	1
	DD	$L94563
$L94563:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94562
$L94562:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCatchMixedCaseWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetCatchMixedCaseWords
_TEXT	ENDS
PUBLIC	?SetCatchMixedCaseWords@CWSpell@@QAEXH@Z	; CWSpell::SetCatchMixedCaseWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCatchMixedCaseWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCatchMixedCaseWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetCatchMixedCaseWords, COMDAT
; _this$ = ecx

; 186  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 	SetProperty(0xf, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 188  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCatchMixedCaseWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetCatchMixedCaseWords
_TEXT	ENDS
PUBLIC	?GetCatchWordsWithDigits@CWSpell@@QAEHXZ	; CWSpell::GetCatchWordsWithDigits
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCatchWordsWithDigits@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetCatchWordsWithDigits@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetCatchWordsWithDigits, COMDAT
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 	BOOL result;
; 193  : 	GetProperty(0x10, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 194  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 195  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94571
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94571:
	DD	1
	DD	$L94570
$L94570:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94569
$L94569:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCatchWordsWithDigits@CWSpell@@QAEHXZ ENDP		; CWSpell::GetCatchWordsWithDigits
_TEXT	ENDS
PUBLIC	?SetCatchWordsWithDigits@CWSpell@@QAEXH@Z	; CWSpell::SetCatchWordsWithDigits
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCatchWordsWithDigits@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCatchWordsWithDigits@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetCatchWordsWithDigits, COMDAT
; _this$ = ecx

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 	SetProperty(0x10, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 200  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCatchWordsWithDigits@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetCatchWordsWithDigits
_TEXT	ENDS
PUBLIC	?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetCurrentWord
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94578 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetCurrentWord, COMDAT
; _this$ = ecx

; 203  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94578[ebp], 0

; 204  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 205  : 	GetProperty(0x11, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 206  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94578[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94578[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 207  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94585
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94585:
	DD	1
	DD	$L94584
$L94584:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94582
$L94582:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetCurrentWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetCurrentWord
PUBLIC	?SetCurrentWord@CWSpell@@QAEXPBD@Z		; CWSpell::SetCurrentWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCurrentWord@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetCurrentWord@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::SetCurrentWord, COMDAT
; _this$ = ecx

; 210  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	SetProperty(0x11, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 212  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCurrentWord@CWSpell@@QAEXPBD@Z ENDP			; CWSpell::SetCurrentWord
_TEXT	ENDS
PUBLIC	?GetIgnoreAllCapsWords@CWSpell@@QAEHXZ		; CWSpell::GetIgnoreAllCapsWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreAllCapsWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreAllCapsWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetIgnoreAllCapsWords, COMDAT
; _this$ = ecx

; 215  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 	BOOL result;
; 217  : 	GetProperty(0x12, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 218  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 219  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94595
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94595:
	DD	1
	DD	$L94594
$L94594:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94593
$L94593:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreAllCapsWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreAllCapsWords
_TEXT	ENDS
PUBLIC	?SetIgnoreAllCapsWords@CWSpell@@QAEXH@Z		; CWSpell::SetIgnoreAllCapsWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreAllCapsWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreAllCapsWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreAllCapsWords, COMDAT
; _this$ = ecx

; 222  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 223  : 	SetProperty(0x12, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 224  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreAllCapsWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreAllCapsWords
_TEXT	ENDS
PUBLIC	?GetIgnoreMixedCaseWords@CWSpell@@QAEHXZ	; CWSpell::GetIgnoreMixedCaseWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreMixedCaseWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreMixedCaseWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetIgnoreMixedCaseWords, COMDAT
; _this$ = ecx

; 227  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 228  : 	BOOL result;
; 229  : 	GetProperty(0x13, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 230  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 231  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94602
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94602:
	DD	1
	DD	$L94601
$L94601:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94600
$L94600:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreMixedCaseWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreMixedCaseWords
_TEXT	ENDS
PUBLIC	?SetIgnoreMixedCaseWords@CWSpell@@QAEXH@Z	; CWSpell::SetIgnoreMixedCaseWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreMixedCaseWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreMixedCaseWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreMixedCaseWords, COMDAT
; _this$ = ecx

; 234  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 235  : 	SetProperty(0x13, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 236  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreMixedCaseWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreMixedCaseWords
_TEXT	ENDS
PUBLIC	?GetIgnoreWordsWithDigits@CWSpell@@QAEHXZ	; CWSpell::GetIgnoreWordsWithDigits
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreWordsWithDigits@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreWordsWithDigits@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetIgnoreWordsWithDigits, COMDAT
; _this$ = ecx

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 	BOOL result;
; 241  : 	GetProperty(0x14, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 242  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 243  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94609
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94609:
	DD	1
	DD	$L94608
$L94608:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94607
$L94607:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreWordsWithDigits@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreWordsWithDigits
_TEXT	ENDS
PUBLIC	?SetIgnoreWordsWithDigits@CWSpell@@QAEXH@Z	; CWSpell::SetIgnoreWordsWithDigits
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreWordsWithDigits@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreWordsWithDigits@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreWordsWithDigits, COMDAT
; _this$ = ecx

; 246  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 	SetProperty(0x14, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 248  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreWordsWithDigits@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreWordsWithDigits
_TEXT	ENDS
PUBLIC	?GetMainDictionaryCount@CWSpell@@QAEFXZ		; CWSpell::GetMainDictionaryCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMainDictionaryCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetMainDictionaryCount@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetMainDictionaryCount, COMDAT
; _this$ = ecx

; 251  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 	short result;
; 253  : 	GetProperty(0x15, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 254  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 255  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94616
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94616:
	DD	1
	DD	$L94615
$L94615:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94614
$L94614:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetMainDictionaryCount@CWSpell@@QAEFXZ ENDP		; CWSpell::GetMainDictionaryCount
_TEXT	ENDS
PUBLIC	?SetMainDictionaryCount@CWSpell@@QAEXF@Z	; CWSpell::SetMainDictionaryCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMainDictionaryCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetMainDictionaryCount@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetMainDictionaryCount, COMDAT
; _this$ = ecx

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  : 	SetProperty(0x15, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 260  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMainDictionaryCount@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetMainDictionaryCount
_TEXT	ENDS
PUBLIC	?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetMainDictionaryFiles
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94623 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetMainDictionaryFiles, COMDAT
; _this$ = ecx

; 263  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94623[ebp], 0

; 264  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 265  : 	GetProperty(0x16, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	22					; 00000016H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 266  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94623[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94623[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 267  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94630
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94630:
	DD	1
	DD	$L94629
$L94629:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94627
$L94627:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetMainDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetMainDictionaryFiles
PUBLIC	?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z	; CWSpell::SetMainDictionaryFiles
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z PROC NEAR	; CWSpell::SetMainDictionaryFiles, COMDAT
; _this$ = ecx

; 270  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 271  : 	SetProperty(0x16, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	22					; 00000016H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 272  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::SetMainDictionaryFiles
_TEXT	ENDS
PUBLIC	?GetMaxSuggestions@CWSpell@@QAEFXZ		; CWSpell::GetMaxSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMaxSuggestions@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetMaxSuggestions@CWSpell@@QAEFXZ PROC NEAR		; CWSpell::GetMaxSuggestions, COMDAT
; _this$ = ecx

; 275  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 276  : 	short result;
; 277  : 	GetProperty(0x17, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 278  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 279  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94640
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94640:
	DD	1
	DD	$L94639
$L94639:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94638
$L94638:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetMaxSuggestions@CWSpell@@QAEFXZ ENDP			; CWSpell::GetMaxSuggestions
_TEXT	ENDS
PUBLIC	?SetMaxSuggestions@CWSpell@@QAEXF@Z		; CWSpell::SetMaxSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMaxSuggestions@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetMaxSuggestions@CWSpell@@QAEXF@Z PROC NEAR		; CWSpell::SetMaxSuggestions, COMDAT
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	SetProperty(0x17, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 284  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMaxSuggestions@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetMaxSuggestions
_TEXT	ENDS
PUBLIC	?GetMinSuggestionDepth@CWSpell@@QAEFXZ		; CWSpell::GetMinSuggestionDepth
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMinSuggestionDepth@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetMinSuggestionDepth@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetMinSuggestionDepth, COMDAT
; _this$ = ecx

; 287  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 288  : 	short result;
; 289  : 	GetProperty(0x18, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 290  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 291  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94647
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94647:
	DD	1
	DD	$L94646
$L94646:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94645
$L94645:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetMinSuggestionDepth@CWSpell@@QAEFXZ ENDP		; CWSpell::GetMinSuggestionDepth
_TEXT	ENDS
PUBLIC	?SetMinSuggestionDepth@CWSpell@@QAEXF@Z		; CWSpell::SetMinSuggestionDepth
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMinSuggestionDepth@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetMinSuggestionDepth@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetMinSuggestionDepth, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 	SetProperty(0x18, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 296  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMinSuggestionDepth@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetMinSuggestionDepth
_TEXT	ENDS
PUBLIC	?GetPhoneticSuggestions@CWSpell@@QAEHXZ		; CWSpell::GetPhoneticSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetPhoneticSuggestions@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetPhoneticSuggestions@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetPhoneticSuggestions, COMDAT
; _this$ = ecx

; 299  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 	BOOL result;
; 301  : 	GetProperty(0x19, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 302  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 303  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94654
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94654:
	DD	1
	DD	$L94653
$L94653:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94652
$L94652:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetPhoneticSuggestions@CWSpell@@QAEHXZ ENDP		; CWSpell::GetPhoneticSuggestions
_TEXT	ENDS
PUBLIC	?SetPhoneticSuggestions@CWSpell@@QAEXH@Z	; CWSpell::SetPhoneticSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetPhoneticSuggestions@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetPhoneticSuggestions@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetPhoneticSuggestions, COMDAT
; _this$ = ecx

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 307  : 	SetProperty(0x19, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 308  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPhoneticSuggestions@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetPhoneticSuggestions
_TEXT	ENDS
PUBLIC	?GetSplitContractedWords@CWSpell@@QAEHXZ	; CWSpell::GetSplitContractedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSplitContractedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetSplitContractedWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetSplitContractedWords, COMDAT
; _this$ = ecx

; 311  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 	BOOL result;
; 313  : 	GetProperty(0x1a, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	26					; 0000001aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 314  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 315  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94661
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94661:
	DD	1
	DD	$L94660
$L94660:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94659
$L94659:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSplitContractedWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetSplitContractedWords
_TEXT	ENDS
PUBLIC	?SetSplitContractedWords@CWSpell@@QAEXH@Z	; CWSpell::SetSplitContractedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSplitContractedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetSplitContractedWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetSplitContractedWords, COMDAT
; _this$ = ecx

; 318  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 319  : 	SetProperty(0x1a, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	26					; 0000001aH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 320  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSplitContractedWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetSplitContractedWords
_TEXT	ENDS
PUBLIC	?GetSplitHyphenatedWords@CWSpell@@QAEHXZ	; CWSpell::GetSplitHyphenatedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSplitHyphenatedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetSplitHyphenatedWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetSplitHyphenatedWords, COMDAT
; _this$ = ecx

; 323  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 	BOOL result;
; 325  : 	GetProperty(0x1b, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 326  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 327  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94668
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94668:
	DD	1
	DD	$L94667
$L94667:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94666
$L94666:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSplitHyphenatedWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetSplitHyphenatedWords
_TEXT	ENDS
PUBLIC	?SetSplitHyphenatedWords@CWSpell@@QAEXH@Z	; CWSpell::SetSplitHyphenatedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSplitHyphenatedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetSplitHyphenatedWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetSplitHyphenatedWords, COMDAT
; _this$ = ecx

; 330  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 331  : 	SetProperty(0x1b, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 332  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSplitHyphenatedWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetSplitHyphenatedWords
_TEXT	ENDS
PUBLIC	?GetSplitWords@CWSpell@@QAEHXZ			; CWSpell::GetSplitWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSplitWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetSplitWords@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetSplitWords, COMDAT
; _this$ = ecx

; 335  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 336  : 	BOOL result;
; 337  : 	GetProperty(0x1c, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 338  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 339  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94675
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94675:
	DD	1
	DD	$L94674
$L94674:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94673
$L94673:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSplitWords@CWSpell@@QAEHXZ ENDP			; CWSpell::GetSplitWords
_TEXT	ENDS
PUBLIC	?SetSplitWords@CWSpell@@QAEXH@Z			; CWSpell::SetSplitWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSplitWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetSplitWords@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetSplitWords, COMDAT
; _this$ = ecx

; 342  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 343  : 	SetProperty(0x1c, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 344  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSplitWords@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetSplitWords
_TEXT	ENDS
PUBLIC	?GetStripPossessives@CWSpell@@QAEHXZ		; CWSpell::GetStripPossessives
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetStripPossessives@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetStripPossessives@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetStripPossessives, COMDAT
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	BOOL result;
; 349  : 	GetProperty(0x1d, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 350  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 351  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94682
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94682:
	DD	1
	DD	$L94681
$L94681:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94680
$L94680:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetStripPossessives@CWSpell@@QAEHXZ ENDP		; CWSpell::GetStripPossessives
_TEXT	ENDS
PUBLIC	?SetStripPossessives@CWSpell@@QAEXH@Z		; CWSpell::SetStripPossessives
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetStripPossessives@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetStripPossessives@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetStripPossessives, COMDAT
; _this$ = ecx

; 354  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 	SetProperty(0x1d, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 356  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStripPossessives@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetStripPossessives
_TEXT	ENDS
PUBLIC	?GetSuggestionDepth@CWSpell@@QAEFXZ		; CWSpell::GetSuggestionDepth
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSuggestionDepth@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetSuggestionDepth@CWSpell@@QAEFXZ PROC NEAR		; CWSpell::GetSuggestionDepth, COMDAT
; _this$ = ecx

; 359  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 360  : 	short result;
; 361  : 	GetProperty(0x1e, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 362  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 363  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94689
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94689:
	DD	1
	DD	$L94688
$L94688:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94687
$L94687:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSuggestionDepth@CWSpell@@QAEFXZ ENDP		; CWSpell::GetSuggestionDepth
_TEXT	ENDS
PUBLIC	?SetSuggestionDepth@CWSpell@@QAEXF@Z		; CWSpell::SetSuggestionDepth
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSuggestionDepth@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetSuggestionDepth@CWSpell@@QAEXF@Z PROC NEAR		; CWSpell::SetSuggestionDepth, COMDAT
; _this$ = ecx

; 366  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 	SetProperty(0x1e, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSuggestionDepth@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetSuggestionDepth
_TEXT	ENDS
PUBLIC	?GetSuggestionDepthIncrement@CWSpell@@QAEFXZ	; CWSpell::GetSuggestionDepthIncrement
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSuggestionDepthIncrement@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetSuggestionDepthIncrement@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetSuggestionDepthIncrement, COMDAT
; _this$ = ecx

; 371  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 372  : 	short result;
; 373  : 	GetProperty(0x1f, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 374  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 375  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94696
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94696:
	DD	1
	DD	$L94695
$L94695:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94694
$L94694:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSuggestionDepthIncrement@CWSpell@@QAEFXZ ENDP	; CWSpell::GetSuggestionDepthIncrement
_TEXT	ENDS
PUBLIC	?SetSuggestionDepthIncrement@CWSpell@@QAEXF@Z	; CWSpell::SetSuggestionDepthIncrement
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSuggestionDepthIncrement@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetSuggestionDepthIncrement@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetSuggestionDepthIncrement, COMDAT
; _this$ = ecx

; 378  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 	SetProperty(0x1f, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 380  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSuggestionDepthIncrement@CWSpell@@QAEXF@Z ENDP	; CWSpell::SetSuggestionDepthIncrement
_TEXT	ENDS
PUBLIC	?GetSuggestSplitWords@CWSpell@@QAEHXZ		; CWSpell::GetSuggestSplitWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSuggestSplitWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetSuggestSplitWords@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetSuggestSplitWords, COMDAT
; _this$ = ecx

; 383  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 	BOOL result;
; 385  : 	GetProperty(0x20, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 386  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 387  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94703
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94703:
	DD	1
	DD	$L94702
$L94702:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94701
$L94701:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSuggestSplitWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetSuggestSplitWords
_TEXT	ENDS
PUBLIC	?SetSuggestSplitWords@CWSpell@@QAEXH@Z		; CWSpell::SetSuggestSplitWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSuggestSplitWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetSuggestSplitWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetSuggestSplitWords, COMDAT
; _this$ = ecx

; 390  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 	SetProperty(0x20, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 392  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSuggestSplitWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetSuggestSplitWords
_TEXT	ENDS
PUBLIC	?GetTextLength@CWSpell@@QAEJXZ			; CWSpell::GetTextLength
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetTextLength@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetTextLength@CWSpell@@QAEJXZ PROC NEAR		; CWSpell::GetTextLength, COMDAT
; _this$ = ecx

; 395  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 396  : 	long result;
; 397  : 	GetProperty(0x21, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 398  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 399  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94710
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94710:
	DD	1
	DD	$L94709
$L94709:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94708
$L94708:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetTextLength@CWSpell@@QAEJXZ ENDP			; CWSpell::GetTextLength
_TEXT	ENDS
PUBLIC	?SetTextLength@CWSpell@@QAEXJ@Z			; CWSpell::SetTextLength
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetTextLength@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetTextLength@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetTextLength, COMDAT
; _this$ = ecx

; 402  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 403  : 	SetProperty(0x21, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 404  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTextLength@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetTextLength
_TEXT	ENDS
PUBLIC	?GetTypographicalSuggestions@CWSpell@@QAEHXZ	; CWSpell::GetTypographicalSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetTypographicalSuggestions@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetTypographicalSuggestions@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetTypographicalSuggestions, COMDAT
; _this$ = ecx

; 407  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 408  : 	BOOL result;
; 409  : 	GetProperty(0x22, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	34					; 00000022H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 410  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 411  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94717
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94717:
	DD	1
	DD	$L94716
$L94716:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94715
$L94715:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetTypographicalSuggestions@CWSpell@@QAEHXZ ENDP	; CWSpell::GetTypographicalSuggestions
_TEXT	ENDS
PUBLIC	?SetTypographicalSuggestions@CWSpell@@QAEXH@Z	; CWSpell::SetTypographicalSuggestions
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetTypographicalSuggestions@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetTypographicalSuggestions@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetTypographicalSuggestions, COMDAT
; _this$ = ecx

; 414  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 415  : 	SetProperty(0x22, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	34					; 00000022H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 416  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTypographicalSuggestions@CWSpell@@QAEXH@Z ENDP	; CWSpell::SetTypographicalSuggestions
_TEXT	ENDS
PUBLIC	?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetUndoNewText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94724 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetUndoNewText, COMDAT
; _this$ = ecx

; 419  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94724[ebp], 0

; 420  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 421  : 	GetProperty(0x23, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	35					; 00000023H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 422  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94724[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94724[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 423  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94731
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94731:
	DD	1
	DD	$L94730
$L94730:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94728
$L94728:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUndoNewText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetUndoNewText
PUBLIC	?SetUndoNewText@CWSpell@@QAEXPBD@Z		; CWSpell::SetUndoNewText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetUndoNewText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetUndoNewText@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::SetUndoNewText, COMDAT
; _this$ = ecx

; 426  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 427  : 	SetProperty(0x23, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	35					; 00000023H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 428  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUndoNewText@CWSpell@@QAEXPBD@Z ENDP			; CWSpell::SetUndoNewText
_TEXT	ENDS
PUBLIC	?GetUndoOffset@CWSpell@@QAEJXZ			; CWSpell::GetUndoOffset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetUndoOffset@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetUndoOffset@CWSpell@@QAEJXZ PROC NEAR		; CWSpell::GetUndoOffset, COMDAT
; _this$ = ecx

; 431  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 432  : 	long result;
; 433  : 	GetProperty(0x24, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 434  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 435  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94741
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94741:
	DD	1
	DD	$L94740
$L94740:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94739
$L94739:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetUndoOffset@CWSpell@@QAEJXZ ENDP			; CWSpell::GetUndoOffset
_TEXT	ENDS
PUBLIC	?SetUndoOffset@CWSpell@@QAEXJ@Z			; CWSpell::SetUndoOffset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetUndoOffset@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetUndoOffset@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetUndoOffset, COMDAT
; _this$ = ecx

; 438  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 439  : 	SetProperty(0x24, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 440  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUndoOffset@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetUndoOffset
_TEXT	ENDS
PUBLIC	?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetUndoOldText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94748 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetUndoOldText, COMDAT
; _this$ = ecx

; 443  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94748[ebp], 0

; 444  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 445  : 	GetProperty(0x25, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 446  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94748[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94748[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 447  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94755
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94755:
	DD	1
	DD	$L94754
$L94754:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94752
$L94752:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUndoOldText@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetUndoOldText
PUBLIC	?SetUndoOldText@CWSpell@@QAEXPBD@Z		; CWSpell::SetUndoOldText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetUndoOldText@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetUndoOldText@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::SetUndoOldText, COMDAT
; _this$ = ecx

; 450  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 	SetProperty(0x25, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 452  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUndoOldText@CWSpell@@QAEXPBD@Z ENDP			; CWSpell::SetUndoOldText
_TEXT	ENDS
PUBLIC	?GetUserDictionaryCount@CWSpell@@QAEFXZ		; CWSpell::GetUserDictionaryCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetUserDictionaryCount@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetUserDictionaryCount@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetUserDictionaryCount, COMDAT
; _this$ = ecx

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 456  : 	short result;
; 457  : 	GetProperty(0x26, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 458  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 459  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94765
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94765:
	DD	1
	DD	$L94764
$L94764:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94763
$L94763:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetUserDictionaryCount@CWSpell@@QAEFXZ ENDP		; CWSpell::GetUserDictionaryCount
_TEXT	ENDS
PUBLIC	?SetUserDictionaryCount@CWSpell@@QAEXF@Z	; CWSpell::SetUserDictionaryCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetUserDictionaryCount@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetUserDictionaryCount@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetUserDictionaryCount, COMDAT
; _this$ = ecx

; 462  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 	SetProperty(0x26, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 464  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUserDictionaryCount@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetUserDictionaryCount
_TEXT	ENDS
PUBLIC	?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetUserDictionaryFiles
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94772 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetUserDictionaryFiles, COMDAT
; _this$ = ecx

; 467  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94772[ebp], 0

; 468  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 469  : 	GetProperty(0x27, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	39					; 00000027H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 470  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94772[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94772[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 471  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94779
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94779:
	DD	1
	DD	$L94778
$L94778:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94776
$L94776:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUserDictionaryFiles@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetUserDictionaryFiles
PUBLIC	?SetUserDictionaryFiles@CWSpell@@QAEXPBD@Z	; CWSpell::SetUserDictionaryFiles
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetUserDictionaryFiles@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetUserDictionaryFiles@CWSpell@@QAEXPBD@Z PROC NEAR	; CWSpell::SetUserDictionaryFiles, COMDAT
; _this$ = ecx

; 474  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 475  : 	SetProperty(0x27, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	39					; 00000027H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 476  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUserDictionaryFiles@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::SetUserDictionaryFiles
_TEXT	ENDS
PUBLIC	?GetIgnoreCapitalizedWords@CWSpell@@QAEHXZ	; CWSpell::GetIgnoreCapitalizedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreCapitalizedWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreCapitalizedWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetIgnoreCapitalizedWords, COMDAT
; _this$ = ecx

; 479  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 480  : 	BOOL result;
; 481  : 	GetProperty(0x28, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 482  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 483  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94789
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94789:
	DD	1
	DD	$L94788
$L94788:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94787
$L94787:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreCapitalizedWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreCapitalizedWords
_TEXT	ENDS
PUBLIC	?SetIgnoreCapitalizedWords@CWSpell@@QAEXH@Z	; CWSpell::SetIgnoreCapitalizedWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreCapitalizedWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreCapitalizedWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreCapitalizedWords, COMDAT
; _this$ = ecx

; 486  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 487  : 	SetProperty(0x28, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 488  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreCapitalizedWords@CWSpell@@QAEXH@Z ENDP	; CWSpell::SetIgnoreCapitalizedWords
_TEXT	ENDS
PUBLIC	?GetShowContext@CWSpell@@QAEHXZ			; CWSpell::GetShowContext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetShowContext@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetShowContext@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetShowContext, COMDAT
; _this$ = ecx

; 491  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 492  : 	BOOL result;
; 493  : 	GetProperty(0x1, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 494  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 495  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94796
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94796:
	DD	1
	DD	$L94795
$L94795:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94794
$L94794:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetShowContext@CWSpell@@QAEHXZ ENDP			; CWSpell::GetShowContext
_TEXT	ENDS
PUBLIC	?SetShowContext@CWSpell@@QAEXH@Z		; CWSpell::SetShowContext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetShowContext@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetShowContext@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetShowContext, COMDAT
; _this$ = ecx

; 498  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 499  : 	SetProperty(0x1, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 500  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetShowContext@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetShowContext
_TEXT	ENDS
PUBLIC	?GetShowDialog@CWSpell@@QAEHXZ			; CWSpell::GetShowDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetShowDialog@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetShowDialog@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetShowDialog, COMDAT
; _this$ = ecx

; 503  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 504  : 	BOOL result;
; 505  : 	GetProperty(0x2, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 506  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 507  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94803
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94803:
	DD	1
	DD	$L94802
$L94802:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94801
$L94801:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetShowDialog@CWSpell@@QAEHXZ ENDP			; CWSpell::GetShowDialog
_TEXT	ENDS
PUBLIC	?SetShowDialog@CWSpell@@QAEXH@Z			; CWSpell::SetShowDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetShowDialog@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetShowDialog@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetShowDialog, COMDAT
; _this$ = ecx

; 510  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 511  : 	SetProperty(0x2, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 512  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetShowDialog@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetShowDialog
_TEXT	ENDS
PUBLIC	?GetTextControlHWnd@CWSpell@@QAEJXZ		; CWSpell::GetTextControlHWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetTextControlHWnd@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetTextControlHWnd@CWSpell@@QAEJXZ PROC NEAR		; CWSpell::GetTextControlHWnd, COMDAT
; _this$ = ecx

; 515  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 516  : 	long result;
; 517  : 	GetProperty(0x3, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 518  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 519  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94810
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94810:
	DD	1
	DD	$L94809
$L94809:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94808
$L94808:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetTextControlHWnd@CWSpell@@QAEJXZ ENDP		; CWSpell::GetTextControlHWnd
_TEXT	ENDS
PUBLIC	?SetTextControlHWnd@CWSpell@@QAEXJ@Z		; CWSpell::SetTextControlHWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetTextControlHWnd@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetTextControlHWnd@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetTextControlHWnd, COMDAT
; _this$ = ecx

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 523  : 	SetProperty(0x3, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 524  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTextControlHWnd@CWSpell@@QAEXJ@Z ENDP		; CWSpell::SetTextControlHWnd
_TEXT	ENDS
PUBLIC	?GetDialogLeft@CWSpell@@QAEJXZ			; CWSpell::GetDialogLeft
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDialogLeft@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetDialogLeft@CWSpell@@QAEJXZ PROC NEAR		; CWSpell::GetDialogLeft, COMDAT
; _this$ = ecx

; 527  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 528  : 	long result;
; 529  : 	GetProperty(0x4, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 530  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 531  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94817
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94817:
	DD	1
	DD	$L94816
$L94816:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94815
$L94815:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetDialogLeft@CWSpell@@QAEJXZ ENDP			; CWSpell::GetDialogLeft
_TEXT	ENDS
PUBLIC	?SetDialogLeft@CWSpell@@QAEXJ@Z			; CWSpell::SetDialogLeft
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetDialogLeft@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetDialogLeft@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetDialogLeft, COMDAT
; _this$ = ecx

; 534  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 535  : 	SetProperty(0x4, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 536  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDialogLeft@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetDialogLeft
_TEXT	ENDS
PUBLIC	?GetDialogTop@CWSpell@@QAEJXZ			; CWSpell::GetDialogTop
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDialogTop@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetDialogTop@CWSpell@@QAEJXZ PROC NEAR			; CWSpell::GetDialogTop, COMDAT
; _this$ = ecx

; 539  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 540  : 	long result;
; 541  : 	GetProperty(0x5, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 542  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 543  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94824
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94824:
	DD	1
	DD	$L94823
$L94823:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94822
$L94822:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetDialogTop@CWSpell@@QAEJXZ ENDP			; CWSpell::GetDialogTop
_TEXT	ENDS
PUBLIC	?SetDialogTop@CWSpell@@QAEXJ@Z			; CWSpell::SetDialogTop
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetDialogTop@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetDialogTop@CWSpell@@QAEXJ@Z PROC NEAR		; CWSpell::SetDialogTop, COMDAT
; _this$ = ecx

; 546  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 	SetProperty(0x5, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 548  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDialogTop@CWSpell@@QAEXJ@Z ENDP			; CWSpell::SetDialogTop
_TEXT	ENDS
PUBLIC	?GetSuggestionScoreRange@CWSpell@@QAEFXZ	; CWSpell::GetSuggestionScoreRange
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetSuggestionScoreRange@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetSuggestionScoreRange@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetSuggestionScoreRange, COMDAT
; _this$ = ecx

; 551  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 552  : 	short result;
; 553  : 	GetProperty(0x29, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	41					; 00000029H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 554  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 555  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94831
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94831:
	DD	1
	DD	$L94830
$L94830:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94829
$L94829:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetSuggestionScoreRange@CWSpell@@QAEFXZ ENDP		; CWSpell::GetSuggestionScoreRange
_TEXT	ENDS
PUBLIC	?SetSuggestionScoreRange@CWSpell@@QAEXF@Z	; CWSpell::SetSuggestionScoreRange
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetSuggestionScoreRange@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetSuggestionScoreRange@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetSuggestionScoreRange, COMDAT
; _this$ = ecx

; 558  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 	SetProperty(0x29, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	41					; 00000029H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 560  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSuggestionScoreRange@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetSuggestionScoreRange
_TEXT	ENDS
PUBLIC	?GetMinSuggestionScore@CWSpell@@QAEFXZ		; CWSpell::GetMinSuggestionScore
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMinSuggestionScore@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetMinSuggestionScore@CWSpell@@QAEFXZ PROC NEAR	; CWSpell::GetMinSuggestionScore, COMDAT
; _this$ = ecx

; 563  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 564  : 	short result;
; 565  : 	GetProperty(0x2a, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	42					; 0000002aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 566  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 567  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94838
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94838:
	DD	1
	DD	$L94837
$L94837:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94836
$L94836:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetMinSuggestionScore@CWSpell@@QAEFXZ ENDP		; CWSpell::GetMinSuggestionScore
_TEXT	ENDS
PUBLIC	?SetMinSuggestionScore@CWSpell@@QAEXF@Z		; CWSpell::SetMinSuggestionScore
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMinSuggestionScore@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetMinSuggestionScore@CWSpell@@QAEXF@Z PROC NEAR	; CWSpell::SetMinSuggestionScore, COMDAT
; _this$ = ecx

; 570  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 571  : 	SetProperty(0x2a, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	42					; 0000002aH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 572  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMinSuggestionScore@CWSpell@@QAEXF@Z ENDP		; CWSpell::SetMinSuggestionScore
_TEXT	ENDS
PUBLIC	?GetAutoCorrect@CWSpell@@QAEHXZ			; CWSpell::GetAutoCorrect
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetAutoCorrect@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetAutoCorrect@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetAutoCorrect, COMDAT
; _this$ = ecx

; 575  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 576  : 	BOOL result;
; 577  : 	GetProperty(0x2b, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 578  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 579  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94845
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94845:
	DD	1
	DD	$L94844
$L94844:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94843
$L94843:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetAutoCorrect@CWSpell@@QAEHXZ ENDP			; CWSpell::GetAutoCorrect
_TEXT	ENDS
PUBLIC	?SetAutoCorrect@CWSpell@@QAEXH@Z		; CWSpell::SetAutoCorrect
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetAutoCorrect@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetAutoCorrect@CWSpell@@QAEXH@Z PROC NEAR		; CWSpell::SetAutoCorrect, COMDAT
; _this$ = ecx

; 582  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 	SetProperty(0x2b, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 584  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAutoCorrect@CWSpell@@QAEXH@Z ENDP			; CWSpell::SetAutoCorrect
_TEXT	ENDS
PUBLIC	?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CWSpell::GetVersion
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T94852 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CWSpell::GetVersion, COMDAT
; _this$ = ecx

; 587  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94852[ebp], 0

; 588  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 589  : 	GetProperty(0x2c, VT_BSTR, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	8
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 590  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94852[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94852[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 591  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94859
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L94859:
	DD	1
	DD	$L94858
$L94858:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94856
$L94856:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
?GetVersion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CWSpell::GetVersion
PUBLIC	?SetVersion@CWSpell@@QAEXPBD@Z			; CWSpell::SetVersion
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetVersion@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetVersion@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::SetVersion, COMDAT
; _this$ = ecx

; 594  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 595  : 	SetProperty(0x2c, VT_BSTR, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	8
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 596  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetVersion@CWSpell@@QAEXPBD@Z ENDP			; CWSpell::SetVersion
_TEXT	ENDS
PUBLIC	?GetMisspelledWordCount@CWSpell@@QAEJXZ		; CWSpell::GetMisspelledWordCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMisspelledWordCount@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetMisspelledWordCount@CWSpell@@QAEJXZ PROC NEAR	; CWSpell::GetMisspelledWordCount, COMDAT
; _this$ = ecx

; 599  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 	long result;
; 601  : 	GetProperty(0x2d, VT_I4, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 602  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 603  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94869
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94869:
	DD	1
	DD	$L94868
$L94868:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94867
$L94867:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetMisspelledWordCount@CWSpell@@QAEJXZ ENDP		; CWSpell::GetMisspelledWordCount
_TEXT	ENDS
PUBLIC	?SetMisspelledWordCount@CWSpell@@QAEXJ@Z	; CWSpell::SetMisspelledWordCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetMisspelledWordCount@CWSpell@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetMisspelledWordCount@CWSpell@@QAEXJ@Z PROC NEAR	; CWSpell::SetMisspelledWordCount, COMDAT
; _this$ = ecx

; 606  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 	SetProperty(0x2d, VT_I4, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	3
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 608  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMisspelledWordCount@CWSpell@@QAEXJ@Z ENDP		; CWSpell::SetMisspelledWordCount
_TEXT	ENDS
PUBLIC	?GetErrorCode@CWSpell@@QAEFXZ			; CWSpell::GetErrorCode
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetErrorCode@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetErrorCode@CWSpell@@QAEFXZ PROC NEAR			; CWSpell::GetErrorCode, COMDAT
; _this$ = ecx

; 611  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 	short result;
; 613  : 	GetProperty(0x2e, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 614  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 615  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94876
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94876:
	DD	1
	DD	$L94875
$L94875:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94874
$L94874:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetErrorCode@CWSpell@@QAEFXZ ENDP			; CWSpell::GetErrorCode
_TEXT	ENDS
PUBLIC	?SetErrorCode@CWSpell@@QAEXF@Z			; CWSpell::SetErrorCode
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetErrorCode@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetErrorCode@CWSpell@@QAEXF@Z PROC NEAR		; CWSpell::SetErrorCode, COMDAT
; _this$ = ecx

; 618  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 619  : 	SetProperty(0x2e, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 620  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetErrorCode@CWSpell@@QAEXF@Z ENDP			; CWSpell::SetErrorCode
_TEXT	ENDS
PUBLIC	?GetIgnoreNonAlphaWords@CWSpell@@QAEHXZ		; CWSpell::GetIgnoreNonAlphaWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreNonAlphaWords@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreNonAlphaWords@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetIgnoreNonAlphaWords, COMDAT
; _this$ = ecx

; 623  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 624  : 	BOOL result;
; 625  : 	GetProperty(0x2f, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 626  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 627  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94883
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94883:
	DD	1
	DD	$L94882
$L94882:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94881
$L94881:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreNonAlphaWords@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreNonAlphaWords
_TEXT	ENDS
PUBLIC	?SetIgnoreNonAlphaWords@CWSpell@@QAEXH@Z	; CWSpell::SetIgnoreNonAlphaWords
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreNonAlphaWords@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreNonAlphaWords@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreNonAlphaWords, COMDAT
; _this$ = ecx

; 630  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 631  : 	SetProperty(0x2f, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 632  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreNonAlphaWords@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreNonAlphaWords
_TEXT	ENDS
PUBLIC	?GetIgnoreDomainNames@CWSpell@@QAEHXZ		; CWSpell::GetIgnoreDomainNames
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreDomainNames@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreDomainNames@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetIgnoreDomainNames, COMDAT
; _this$ = ecx

; 635  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 636  : 	BOOL result;
; 637  : 	GetProperty(0x30, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	48					; 00000030H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 638  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 639  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94890
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94890:
	DD	1
	DD	$L94889
$L94889:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94888
$L94888:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreDomainNames@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreDomainNames
_TEXT	ENDS
PUBLIC	?SetIgnoreDomainNames@CWSpell@@QAEXH@Z		; CWSpell::SetIgnoreDomainNames
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreDomainNames@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreDomainNames@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreDomainNames, COMDAT
; _this$ = ecx

; 642  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 	SetProperty(0x30, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	48					; 00000030H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 644  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreDomainNames@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreDomainNames
_TEXT	ENDS
PUBLIC	?GetAllowAccentedCaps@CWSpell@@QAEHXZ		; CWSpell::GetAllowAccentedCaps
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetAllowAccentedCaps@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetAllowAccentedCaps@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetAllowAccentedCaps, COMDAT
; _this$ = ecx

; 647  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 	BOOL result;
; 649  : 	GetProperty(0x31, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	49					; 00000031H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 650  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 651  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94897
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94897:
	DD	1
	DD	$L94896
$L94896:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94895
$L94895:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetAllowAccentedCaps@CWSpell@@QAEHXZ ENDP		; CWSpell::GetAllowAccentedCaps
_TEXT	ENDS
PUBLIC	?SetAllowAccentedCaps@CWSpell@@QAEXH@Z		; CWSpell::SetAllowAccentedCaps
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetAllowAccentedCaps@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetAllowAccentedCaps@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetAllowAccentedCaps, COMDAT
; _this$ = ecx

; 654  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 655  : 	SetProperty(0x31, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	49					; 00000031H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 656  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAllowAccentedCaps@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetAllowAccentedCaps
_TEXT	ENDS
PUBLIC	?GetIgnoreHTMLMarkups@CWSpell@@QAEHXZ		; CWSpell::GetIgnoreHTMLMarkups
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetIgnoreHTMLMarkups@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetIgnoreHTMLMarkups@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetIgnoreHTMLMarkups, COMDAT
; _this$ = ecx

; 659  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 660  : 	BOOL result;
; 661  : 	GetProperty(0x32, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	50					; 00000032H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 662  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 663  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94904
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94904:
	DD	1
	DD	$L94903
$L94903:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94902
$L94902:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetIgnoreHTMLMarkups@CWSpell@@QAEHXZ ENDP		; CWSpell::GetIgnoreHTMLMarkups
_TEXT	ENDS
PUBLIC	?SetIgnoreHTMLMarkups@CWSpell@@QAEXH@Z		; CWSpell::SetIgnoreHTMLMarkups
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetIgnoreHTMLMarkups@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetIgnoreHTMLMarkups@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetIgnoreHTMLMarkups, COMDAT
; _this$ = ecx

; 666  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 667  : 	SetProperty(0x32, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	50					; 00000032H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 668  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIgnoreHTMLMarkups@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetIgnoreHTMLMarkups
_TEXT	ENDS
PUBLIC	?GetCharacterSet@CWSpell@@QAEFXZ		; CWSpell::GetCharacterSet
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetCharacterSet@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?GetCharacterSet@CWSpell@@QAEFXZ PROC NEAR		; CWSpell::GetCharacterSet, COMDAT
; _this$ = ecx

; 671  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 672  : 	short result;
; 673  : 	GetProperty(0x33, VT_I2, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 674  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 675  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94911
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94911:
	DD	1
	DD	$L94910
$L94910:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94909
$L94909:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetCharacterSet@CWSpell@@QAEFXZ ENDP			; CWSpell::GetCharacterSet
_TEXT	ENDS
PUBLIC	?SetCharacterSet@CWSpell@@QAEXF@Z		; CWSpell::SetCharacterSet
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetCharacterSet@CWSpell@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 2
?SetCharacterSet@CWSpell@@QAEXF@Z PROC NEAR		; CWSpell::SetCharacterSet, COMDAT
; _this$ = ecx

; 678  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 679  : 	SetProperty(0x33, VT_I2, propVal);

	movsx	eax, WORD PTR _propVal$[ebp]
	push	eax
	push	2
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 680  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCharacterSet@CWSpell@@QAEXF@Z ENDP			; CWSpell::SetCharacterSet
_TEXT	ENDS
PUBLIC	?GetBackupUserDictionary@CWSpell@@QAEHXZ	; CWSpell::GetBackupUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBackupUserDictionary@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetBackupUserDictionary@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetBackupUserDictionary, COMDAT
; _this$ = ecx

; 683  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 684  : 	BOOL result;
; 685  : 	GetProperty(0x34, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 686  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 687  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94918
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94918:
	DD	1
	DD	$L94917
$L94917:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94916
$L94916:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetBackupUserDictionary@CWSpell@@QAEHXZ ENDP		; CWSpell::GetBackupUserDictionary
_TEXT	ENDS
PUBLIC	?SetBackupUserDictionary@CWSpell@@QAEXH@Z	; CWSpell::SetBackupUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetBackupUserDictionary@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetBackupUserDictionary@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetBackupUserDictionary, COMDAT
; _this$ = ecx

; 690  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 691  : 	SetProperty(0x34, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 692  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBackupUserDictionary@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetBackupUserDictionary
_TEXT	ENDS
PUBLIC	?GetShowOptionsButton@CWSpell@@QAEHXZ		; CWSpell::GetShowOptionsButton
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetShowOptionsButton@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetShowOptionsButton@CWSpell@@QAEHXZ PROC NEAR		; CWSpell::GetShowOptionsButton, COMDAT
; _this$ = ecx

; 695  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 696  : 	BOOL result;
; 697  : 	GetProperty(0x35, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	53					; 00000035H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 698  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 699  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94925
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94925:
	DD	1
	DD	$L94924
$L94924:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94923
$L94923:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetShowOptionsButton@CWSpell@@QAEHXZ ENDP		; CWSpell::GetShowOptionsButton
_TEXT	ENDS
PUBLIC	?SetShowOptionsButton@CWSpell@@QAEXH@Z		; CWSpell::SetShowOptionsButton
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetShowOptionsButton@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetShowOptionsButton@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetShowOptionsButton, COMDAT
; _this$ = ecx

; 702  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 703  : 	SetProperty(0x35, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	53					; 00000035H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 704  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetShowOptionsButton@CWSpell@@QAEXH@Z ENDP		; CWSpell::SetShowOptionsButton
_TEXT	ENDS
PUBLIC	?GetShowDictionariesButton@CWSpell@@QAEHXZ	; CWSpell::GetShowDictionariesButton
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetShowDictionariesButton@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?GetShowDictionariesButton@CWSpell@@QAEHXZ PROC NEAR	; CWSpell::GetShowDictionariesButton, COMDAT
; _this$ = ecx

; 707  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 708  : 	BOOL result;
; 709  : 	GetProperty(0x36, VT_BOOL, (void*)&result);

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	54					; 00000036H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProperty@CWnd@@QBEXJGPAX@Z		; CWnd::GetProperty

; 710  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 711  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94932
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L94932:
	DD	1
	DD	$L94931
$L94931:
	DD	-20					; ffffffecH
	DD	4
	DD	$L94930
$L94930:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetShowDictionariesButton@CWSpell@@QAEHXZ ENDP		; CWSpell::GetShowDictionariesButton
_TEXT	ENDS
PUBLIC	?SetShowDictionariesButton@CWSpell@@QAEXH@Z	; CWSpell::SetShowDictionariesButton
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetShowDictionariesButton@CWSpell@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_propVal$ = 8						; size = 4
?SetShowDictionariesButton@CWSpell@@QAEXH@Z PROC NEAR	; CWSpell::SetShowDictionariesButton, COMDAT
; _this$ = ecx

; 714  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 715  : 	SetProperty(0x36, VT_BOOL, propVal);

	mov	eax, DWORD PTR _propVal$[ebp]
	push	eax
	push	11					; 0000000bH
	push	54					; 00000036H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetProperty@CWnd@@QAAXJGZZ		; CWnd::SetProperty
	add	esp, 16					; 00000010H

; 716  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetShowDictionariesButton@CWSpell@@QAEXH@Z ENDP	; CWSpell::SetShowDictionariesButton
_TEXT	ENDS
PUBLIC	?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ; CWSpell::GetSuggestion
EXTRN	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ:NEAR	; CWnd::InvokeHelper
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0
__ehfuncinfo$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT
$T94939 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 2
?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z PROC NEAR ; CWSpell::GetSuggestion, COMDAT
; _this$ = ecx

; 722  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94939[ebp], 0

; 723  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 724  : 	static BYTE parms[] =
; 725  : 		VTS_I2;
; 726  : 	InvokeHelper(0x50, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
; 727  : 		index);

	movsx	eax, WORD PTR _index$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	8
	push	2
	push	80					; 00000050H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 728  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94939[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94939[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 729  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94946
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L94946:
	DD	1
	DD	$L94945
$L94945:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94943
$L94943:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?GetSuggestion@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ENDP ; CWSpell::GetSuggestion
PUBLIC	?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ; CWSpell::GetMainDictionary
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0
__ehfuncinfo$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT
$T94954 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 2
?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z PROC NEAR ; CWSpell::GetMainDictionary, COMDAT
; _this$ = ecx

; 732  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94954[ebp], 0

; 733  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 734  : 	static BYTE parms[] =
; 735  : 		VTS_I2;
; 736  : 	InvokeHelper(0x51, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
; 737  : 		index);

	movsx	eax, WORD PTR _index$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	8
	push	2
	push	81					; 00000051H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 738  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94954[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94954[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 739  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94961
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L94961:
	DD	1
	DD	$L94960
$L94960:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94958
$L94958:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?GetMainDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ENDP ; CWSpell::GetMainDictionary
PUBLIC	?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ; CWSpell::GetUserDictionary
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0
__ehfuncinfo$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
_TEXT	SEGMENT
$T94969 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 2
?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z PROC NEAR ; CWSpell::GetUserDictionary, COMDAT
; _this$ = ecx

; 742  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T94969[ebp], 0

; 743  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 744  : 	static BYTE parms[] =
; 745  : 		VTS_I2;
; 746  : 	InvokeHelper(0x52, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
; 747  : 		index);

	movsx	eax, WORD PTR _index$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	8
	push	2
	push	82					; 00000052H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 748  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T94969[ebp]
	or	ecx, 1
	mov	DWORD PTR $T94969[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 749  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94976
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L94976:
	DD	1
	DD	$L94975
$L94975:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L94973
$L94973:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUserDictionary@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@F@Z ENDP ; CWSpell::GetUserDictionary
PUBLIC	?AddMainDictionary@CWSpell@@QAEXPBD@Z		; CWSpell::AddMainDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AddMainDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fileName$ = 8						; size = 4
?AddMainDictionary@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::AddMainDictionary, COMDAT
; _this$ = ecx

; 752  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 753  : 	static BYTE parms[] =
; 754  : 		VTS_BSTR;
; 755  : 	InvokeHelper(0x37, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 756  : 		 fileName);

	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??AddMainDictionary@CWSpell@@QAEXPBD@Z@4PAEA
	push	0
	push	0
	push	1
	push	55					; 00000037H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 757  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddMainDictionary@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::AddMainDictionary
_TEXT	ENDS
PUBLIC	?AddUserDictionary@CWSpell@@QAEXPBD@Z		; CWSpell::AddUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AddUserDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fileName$ = 8						; size = 4
?AddUserDictionary@CWSpell@@QAEXPBD@Z PROC NEAR		; CWSpell::AddUserDictionary, COMDAT
; _this$ = ecx

; 760  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 761  : 	static BYTE parms[] =
; 762  : 		VTS_BSTR;
; 763  : 	InvokeHelper(0x38, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 764  : 		 fileName);

	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??AddUserDictionary@CWSpell@@QAEXPBD@Z@4PAEA
	push	0
	push	0
	push	1
	push	56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 765  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddUserDictionary@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::AddUserDictionary
_TEXT	ENDS
PUBLIC	?ClearTempDictionary@CWSpell@@QAEXXZ		; CWSpell::ClearTempDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ClearTempDictionary@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ClearTempDictionary@CWSpell@@QAEXXZ PROC NEAR		; CWSpell::ClearTempDictionary, COMDAT
; _this$ = ecx

; 768  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 769  : 	InvokeHelper(0x39, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	57					; 00000039H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 770  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearTempDictionary@CWSpell@@QAEXXZ ENDP		; CWSpell::ClearTempDictionary
_TEXT	ENDS
PUBLIC	?Close@CWSpell@@QAEXXZ				; CWSpell::Close
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Close@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Close@CWSpell@@QAEXXZ PROC NEAR			; CWSpell::Close, COMDAT
; _this$ = ecx

; 773  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 774  : 	InvokeHelper(0x3a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	58					; 0000003aH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 775  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CWSpell@@QAEXXZ ENDP				; CWSpell::Close
_TEXT	ENDS
PUBLIC	?CreateUserDictionary@CWSpell@@QAEFPBDF@Z	; CWSpell::CreateUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CreateUserDictionary@CWSpell@@QAEFPBDF@Z
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
_fileName$ = 8						; size = 4
_language$ = 12						; size = 2
?CreateUserDictionary@CWSpell@@QAEFPBDF@Z PROC NEAR	; CWSpell::CreateUserDictionary, COMDAT
; _this$ = ecx

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 	short result;
; 780  : 	static BYTE parms[] =
; 781  : 		VTS_BSTR VTS_I2;
; 782  : 	InvokeHelper(0x3b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
; 783  : 		fileName, language);

	movsx	eax, WORD PTR _language$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	push	OFFSET FLAT:?parms@?1??CreateUserDictionary@CWSpell@@QAEFPBDF@Z@4PAEA
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	push	2
	push	1
	push	59					; 0000003bH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 32					; 00000020H

; 784  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 785  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L94992
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L94992:
	DD	1
	DD	$L94991
$L94991:
	DD	-20					; ffffffecH
	DD	2
	DD	$L94990
$L94990:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?CreateUserDictionary@CWSpell@@QAEFPBDF@Z ENDP		; CWSpell::CreateUserDictionary
_TEXT	ENDS
PUBLIC	?DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z	; CWSpell::DeleteFromUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_userDictFile$ = 8					; size = 4
_word$ = 12						; size = 4
?DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z PROC NEAR	; CWSpell::DeleteFromUserDictionary, COMDAT
; _this$ = ecx

; 788  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 789  : 	static BYTE parms[] =
; 790  : 		VTS_BSTR VTS_BSTR;
; 791  : 	InvokeHelper(0x3c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 792  : 		 userDictFile, word);

	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	mov	ecx, DWORD PTR _userDictFile$[ebp]
	push	ecx
	push	OFFSET FLAT:?parms@?1??DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z@4PAEA
	push	0
	push	0
	push	1
	push	60					; 0000003cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 32					; 00000020H

; 793  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeleteFromUserDictionary@CWSpell@@QAEXPBD0@Z ENDP	; CWSpell::DeleteFromUserDictionary
_TEXT	ENDS
PUBLIC	?IgnoreAllWord@CWSpell@@QAEXXZ			; CWSpell::IgnoreAllWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IgnoreAllWord@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IgnoreAllWord@CWSpell@@QAEXXZ PROC NEAR		; CWSpell::IgnoreAllWord, COMDAT
; _this$ = ecx

; 796  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 797  : 	InvokeHelper(0x3d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	61					; 0000003dH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 798  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IgnoreAllWord@CWSpell@@QAEXXZ ENDP			; CWSpell::IgnoreAllWord
_TEXT	ENDS
PUBLIC	?IgnoreWord@CWSpell@@QAEXXZ			; CWSpell::IgnoreWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IgnoreWord@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IgnoreWord@CWSpell@@QAEXXZ PROC NEAR			; CWSpell::IgnoreWord, COMDAT
; _this$ = ecx

; 801  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 802  : 	InvokeHelper(0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	62					; 0000003eH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 803  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IgnoreWord@CWSpell@@QAEXXZ ENDP			; CWSpell::IgnoreWord
_TEXT	ENDS
PUBLIC	?NextWord@CWSpell@@QAEHXZ			; CWSpell::NextWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?NextWord@CWSpell@@QAEHXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?NextWord@CWSpell@@QAEHXZ PROC NEAR			; CWSpell::NextWord, COMDAT
; _this$ = ecx

; 806  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 807  : 	BOOL result;
; 808  : 	InvokeHelper(0x3f, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	11					; 0000000bH
	push	1
	push	63					; 0000003fH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 809  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 810  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95003
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95003:
	DD	1
	DD	$L95002
$L95002:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95001
$L95001:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?NextWord@CWSpell@@QAEHXZ ENDP				; CWSpell::NextWord
_TEXT	ENDS
PUBLIC	?RemoveMainDictionary@CWSpell@@QAEXPBD@Z	; CWSpell::RemoveMainDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?RemoveMainDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mainDictFile$ = 8					; size = 4
?RemoveMainDictionary@CWSpell@@QAEXPBD@Z PROC NEAR	; CWSpell::RemoveMainDictionary, COMDAT
; _this$ = ecx

; 813  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 814  : 	static BYTE parms[] =
; 815  : 		VTS_BSTR;
; 816  : 	InvokeHelper(0x40, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 817  : 		 mainDictFile);

	mov	eax, DWORD PTR _mainDictFile$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??RemoveMainDictionary@CWSpell@@QAEXPBD@Z@4PAEA
	push	0
	push	0
	push	1
	push	64					; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 818  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveMainDictionary@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::RemoveMainDictionary
_TEXT	ENDS
PUBLIC	?RemoveUserDictionary@CWSpell@@QAEXPBD@Z	; CWSpell::RemoveUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?RemoveUserDictionary@CWSpell@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_userDictFile$ = 8					; size = 4
?RemoveUserDictionary@CWSpell@@QAEXPBD@Z PROC NEAR	; CWSpell::RemoveUserDictionary, COMDAT
; _this$ = ecx

; 821  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 822  : 	static BYTE parms[] =
; 823  : 		VTS_BSTR;
; 824  : 	InvokeHelper(0x41, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 825  : 		 userDictFile);

	mov	eax, DWORD PTR _userDictFile$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??RemoveUserDictionary@CWSpell@@QAEXPBD@Z@4PAEA
	push	0
	push	0
	push	1
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 826  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveUserDictionary@CWSpell@@QAEXPBD@Z ENDP		; CWSpell::RemoveUserDictionary
_TEXT	ENDS
PUBLIC	?ReplaceAllWord@CWSpell@@QAEFXZ			; CWSpell::ReplaceAllWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ReplaceAllWord@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?ReplaceAllWord@CWSpell@@QAEFXZ PROC NEAR		; CWSpell::ReplaceAllWord, COMDAT
; _this$ = ecx

; 829  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 	short result;
; 831  : 	InvokeHelper(0x42, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	1
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 832  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 833  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95012
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95012:
	DD	1
	DD	$L95011
$L95011:
	DD	-20					; ffffffecH
	DD	2
	DD	$L95010
$L95010:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?ReplaceAllWord@CWSpell@@QAEFXZ ENDP			; CWSpell::ReplaceAllWord
_TEXT	ENDS
PUBLIC	?ReplaceWord@CWSpell@@QAEFXZ			; CWSpell::ReplaceWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ReplaceWord@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?ReplaceWord@CWSpell@@QAEFXZ PROC NEAR			; CWSpell::ReplaceWord, COMDAT
; _this$ = ecx

; 836  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 837  : 	short result;
; 838  : 	InvokeHelper(0x43, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	1
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 839  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 840  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95017
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95017:
	DD	1
	DD	$L95016
$L95016:
	DD	-20					; ffffffecH
	DD	2
	DD	$L95015
$L95015:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?ReplaceWord@CWSpell@@QAEFXZ ENDP			; CWSpell::ReplaceWord
_TEXT	ENDS
PUBLIC	?Resume@CWSpell@@QAEFXZ				; CWSpell::Resume
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Resume@CWSpell@@QAEFXZ
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
?Resume@CWSpell@@QAEFXZ PROC NEAR			; CWSpell::Resume, COMDAT
; _this$ = ecx

; 843  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 844  : 	short result;
; 845  : 	InvokeHelper(0x44, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	1
	push	68					; 00000044H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 846  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 847  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95022
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95022:
	DD	1
	DD	$L95021
$L95021:
	DD	-20					; ffffffecH
	DD	2
	DD	$L95020
$L95020:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?Resume@CWSpell@@QAEFXZ ENDP				; CWSpell::Resume
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
PUBLIC	??_C@_0M@EOPAGCHG@userdic?4tlx?$AA@		; `string'
PUBLIC	?Start@CWSpell@@QAEFXZ				; CWSpell::Start
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Start@CWSpell@@QAEFXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Start@CWSpell@@QAEFXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Start@CWSpell@@QAEFXZ$1
__ehfuncinfo$?Start@CWSpell@@QAEFXZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$?Start@CWSpell@@QAEFXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0M@EOPAGCHG@userdic?4tlx?$AA@
CONST	SEGMENT
??_C@_0M@EOPAGCHG@userdic?4tlx?$AA@ DB 'userdic.tlx', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Start@CWSpell@@QAEFXZ
_TEXT	SEGMENT
tv91 = -260						; size = 4
tv89 = -260						; size = 4
tv93 = -256						; size = 4
tv92 = -256						; size = 4
$T95025 = -248						; size = 4
$T95026 = -236						; size = 4
_result$ = -32						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Start@CWSpell@@QAEFXZ PROC NEAR			; CWSpell::Start, COMDAT
; _this$ = ecx

; 850  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Start@CWSpell@@QAEFXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 851  : 	short result;
; 852  : 	SetMainDictionaryFiles(MakeDics());

	lea	eax, DWORD PTR $T95025[ebp]
	push	eax
	call	?MakeDics@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; MakeDics
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv89[ebp]
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMainDictionaryFiles@CWSpell@@QAEXPBD@Z ; CWSpell::SetMainDictionaryFiles
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T95025[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 853  : 	AddUserDictionary(MakeName("userdic.tlx",1));

	push	1
	push	OFFSET FLAT:??_C@_0M@EOPAGCHG@userdic?4tlx?$AA@
	lea	eax, DWORD PTR $T95026[ebp]
	push	eax
	call	?MakeName@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PADH@Z ; MakeName
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv91[ebp]
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddUserDictionary@CWSpell@@QAEXPBD@Z	; CWSpell::AddUserDictionary
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T95026[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >

; 854  : 	InvokeHelper(0x45, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	2
	push	1
	push	69					; 00000045H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 855  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 856  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95034
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95034:
	DD	1
	DD	$L95033
$L95033:
	DD	-32					; ffffffe0H
	DD	2
	DD	$L95031
$L95031:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Start@CWSpell@@QAEFXZ$0:
	lea	ecx, DWORD PTR $T95025[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?Start@CWSpell@@QAEFXZ$1:
	lea	ecx, DWORD PTR $T95026[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?Start@CWSpell@@QAEFXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?Start@CWSpell@@QAEFXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?Start@CWSpell@@QAEFXZ ENDP				; CWSpell::Start
PUBLIC	?Suggest@CWSpell@@QAEXXZ			; CWSpell::Suggest
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Suggest@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Suggest@CWSpell@@QAEXXZ PROC NEAR			; CWSpell::Suggest, COMDAT
; _this$ = ecx

; 859  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 860  : 	InvokeHelper(0x46, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	70					; 00000046H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 861  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Suggest@CWSpell@@QAEXXZ ENDP				; CWSpell::Suggest
_TEXT	ENDS
PUBLIC	?TestWord@CWSpell@@QAEHPBD@Z			; CWSpell::TestWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TestWord@CWSpell@@QAEHPBD@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_word$ = 8						; size = 4
?TestWord@CWSpell@@QAEHPBD@Z PROC NEAR			; CWSpell::TestWord, COMDAT
; _this$ = ecx

; 864  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 865  : 	BOOL result;
; 866  : 	static BYTE parms[] =
; 867  : 		VTS_BSTR;
; 868  : 	InvokeHelper(0x47, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
; 869  : 		word);

	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??TestWord@CWSpell@@QAEHPBD@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	11					; 0000000bH
	push	1
	push	71					; 00000047H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 870  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 871  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95044
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L95044:
	DD	1
	DD	$L95043
$L95043:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95042
$L95042:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?TestWord@CWSpell@@QAEHPBD@Z ENDP			; CWSpell::TestWord
_TEXT	ENDS
PUBLIC	?Undo@CWSpell@@QAEXXZ				; CWSpell::Undo
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Undo@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Undo@CWSpell@@QAEXXZ PROC NEAR				; CWSpell::Undo, COMDAT
; _this$ = ecx

; 874  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 875  : 	InvokeHelper(0x48, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	72					; 00000048H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 876  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Undo@CWSpell@@QAEXXZ ENDP				; CWSpell::Undo
_TEXT	ENDS
PUBLIC	?ShowUserDictionaryDialog@CWSpell@@QAEXXZ	; CWSpell::ShowUserDictionaryDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ShowUserDictionaryDialog@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ShowUserDictionaryDialog@CWSpell@@QAEXXZ PROC NEAR	; CWSpell::ShowUserDictionaryDialog, COMDAT
; _this$ = ecx

; 879  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 880  : 	InvokeHelper(0x49, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	73					; 00000049H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 881  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ShowUserDictionaryDialog@CWSpell@@QAEXXZ ENDP		; CWSpell::ShowUserDictionaryDialog
_TEXT	ENDS
PUBLIC	?ShowOptionsDialog@CWSpell@@QAEXXZ		; CWSpell::ShowOptionsDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ShowOptionsDialog@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ShowOptionsDialog@CWSpell@@QAEXXZ PROC NEAR		; CWSpell::ShowOptionsDialog, COMDAT
; _this$ = ecx

; 884  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 885  : 	InvokeHelper(0x4a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	74					; 0000004aH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 886  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ShowOptionsDialog@CWSpell@@QAEXXZ ENDP			; CWSpell::ShowOptionsDialog
_TEXT	ENDS
PUBLIC	?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ; CWSpell::GetUserDictionaryWord
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z$0
__ehfuncinfo$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
_TEXT	SEGMENT
$T95055 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_userDict$ = 12						; size = 4
_index$ = 16						; size = 4
?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z PROC NEAR ; CWSpell::GetUserDictionaryWord, COMDAT
; _this$ = ecx

; 889  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T95055[ebp], 0

; 890  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 891  : 	static BYTE parms[] =
; 892  : 		VTS_BSTR VTS_I4;
; 893  : 	InvokeHelper(0x53, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
; 894  : 		userDict, index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _userDict$[ebp]
	push	ecx
	push	OFFSET FLAT:?parms@?1??GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	push	8
	push	2
	push	83					; 00000053H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 32					; 00000020H

; 895  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T95055[ebp]
	or	ecx, 1
	mov	DWORD PTR $T95055[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 896  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95062
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L95062:
	DD	1
	DD	$L95061
$L95061:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L95059
$L95059:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUserDictionaryWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ENDP ; CWSpell::GetUserDictionaryWord
PUBLIC	?GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z	; CWSpell::GetUserDictionaryWordCount
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_userDict$ = 8						; size = 4
?GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z PROC NEAR ; CWSpell::GetUserDictionaryWordCount, COMDAT
; _this$ = ecx

; 899  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 	long result;
; 901  : 	static BYTE parms[] =
; 902  : 		VTS_BSTR;
; 903  : 	InvokeHelper(0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
; 904  : 		userDict);

	mov	eax, DWORD PTR _userDict$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	3
	push	2
	push	84					; 00000054H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 28					; 0000001cH

; 905  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 906  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95070
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L95070:
	DD	1
	DD	$L95069
$L95069:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95068
$L95068:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetUserDictionaryWordCount@CWSpell@@QAEJPBD@Z ENDP	; CWSpell::GetUserDictionaryWordCount
_TEXT	ENDS
PUBLIC	?GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z ; CWSpell::GetUserDictionaryWordAction
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
_userDict$ = 8						; size = 4
_word$ = 12						; size = 4
?GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z PROC NEAR ; CWSpell::GetUserDictionaryWordAction, COMDAT
; _this$ = ecx

; 909  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 910  : 	short result;
; 911  : 	static BYTE parms[] =
; 912  : 		VTS_BSTR VTS_BSTR;
; 913  : 	InvokeHelper(0x55, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
; 914  : 		userDict, word);

	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	mov	ecx, DWORD PTR _userDict$[ebp]
	push	ecx
	push	OFFSET FLAT:?parms@?1??GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z@4PAEA
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	push	2
	push	2
	push	85					; 00000055H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 32					; 00000020H

; 915  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 916  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95075
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L95075:
	DD	1
	DD	$L95074
$L95074:
	DD	-20					; ffffffecH
	DD	2
	DD	$L95073
$L95073:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?GetUserDictionaryWordAction@CWSpell@@QAEFPBD0@Z ENDP	; CWSpell::GetUserDictionaryWordAction
_TEXT	ENDS
PUBLIC	?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z ; CWSpell::GetUserDictionaryOtherWord
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z$0
__ehfuncinfo$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z
_TEXT	SEGMENT
$T95080 = -236						; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_userDict$ = 12						; size = 4
_word$ = 16						; size = 4
?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z PROC NEAR ; CWSpell::GetUserDictionaryOtherWord, COMDAT
; _this$ = ecx

; 919  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T95080[ebp], 0

; 920  : 	CString result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 921  : 	static BYTE parms[] =
; 922  : 		VTS_BSTR VTS_BSTR;
; 923  : 	InvokeHelper(0x56, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
; 924  : 		userDict, word);

	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	mov	ecx, DWORD PTR _userDict$[ebp]
	push	ecx
	push	OFFSET FLAT:?parms@?1??GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z@4PAEA
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	push	8
	push	2
	push	86					; 00000056H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 32					; 00000020H

; 925  : 	return result;

	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T95080[ebp]
	or	ecx, 1
	mov	DWORD PTR $T95080[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 926  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95087
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L95087:
	DD	1
	DD	$L95086
$L95086:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L95084
$L95084:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?GetUserDictionaryOtherWord@CWSpell@@QAE?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD0@Z ENDP ; CWSpell::GetUserDictionaryOtherWord
PUBLIC	?DeleteWord@CWSpell@@QAEJXZ			; CWSpell::DeleteWord
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?DeleteWord@CWSpell@@QAEJXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?DeleteWord@CWSpell@@QAEJXZ PROC NEAR			; CWSpell::DeleteWord, COMDAT
; _this$ = ecx

; 929  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 930  : 	long result;
; 931  : 	InvokeHelper(0x4b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

	push	0
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	1
	push	75					; 0000004bH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 932  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 933  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95095
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95095:
	DD	1
	DD	$L95094
$L95094:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95093
$L95093:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?DeleteWord@CWSpell@@QAEJXZ ENDP			; CWSpell::DeleteWord
_TEXT	ENDS
PUBLIC	?AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z	; CWSpell::AddToUserDictionary
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z
_TEXT	SEGMENT
_result$ = -20						; size = 2
_this$ = -8						; size = 4
_userDict$ = 8						; size = 4
_word$ = 12						; size = 4
_action$ = 16						; size = 2
_otherWord$ = 20					; size = 4
?AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z PROC NEAR	; CWSpell::AddToUserDictionary, COMDAT
; _this$ = ecx

; 936  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 937  : 	short result;
; 938  : 	static BYTE parms[] =
; 939  : 		VTS_BSTR VTS_BSTR VTS_I2 VTS_BSTR;
; 940  : 	InvokeHelper(0x4c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
; 941  : 		userDict, word, action, otherWord);

	mov	eax, DWORD PTR _otherWord$[ebp]
	push	eax
	movsx	ecx, WORD PTR _action$[ebp]
	push	ecx
	mov	edx, DWORD PTR _word$[ebp]
	push	edx
	mov	eax, DWORD PTR _userDict$[ebp]
	push	eax
	push	OFFSET FLAT:?parms@?1??AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z@4PAEA
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	push	2
	push	1
	push	76					; 0000004cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 40					; 00000028H

; 942  : 	return result;

	mov	ax, WORD PTR _result$[ebp]

; 943  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95100
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L95100:
	DD	1
	DD	$L95099
$L95099:
	DD	-20					; ffffffecH
	DD	2
	DD	$L95098
$L95098:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?AddToUserDictionary@CWSpell@@QAEFPBD0F0@Z ENDP		; CWSpell::AddToUserDictionary
_TEXT	ENDS
PUBLIC	?CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z	; CWSpell::CheckBackgroundNotify
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_ctrlHWnd$ = 8						; size = 4
_changeColor$ = 12					; size = 4
_bold$ = 16						; size = 4
_italics$ = 20						; size = 4
_underline$ = 24					; size = 4
_textColor$ = 28					; size = 4
?CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z PROC NEAR	; CWSpell::CheckBackgroundNotify, COMDAT
; _this$ = ecx

; 946  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 947  : 	long result;
; 948  : 	static BYTE parms[] =
; 949  : 		VTS_I4 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I4;
; 950  : 	InvokeHelper(0x4d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
; 951  : 		ctrlHWnd, changeColor, bold, italics, underline, textColor);

	mov	eax, DWORD PTR _textColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _underline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _italics$[ebp]
	push	edx
	mov	eax, DWORD PTR _bold$[ebp]
	push	eax
	mov	ecx, DWORD PTR _changeColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrlHWnd$[ebp]
	push	edx
	push	OFFSET FLAT:?parms@?1??CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z@4PAEA
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	1
	push	77					; 0000004dH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 48					; 00000030H

; 952  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 953  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95105
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L95105:
	DD	1
	DD	$L95104
$L95104:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95103
$L95103:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?CheckBackgroundNotify@CWSpell@@QAEJJHHHHJ@Z ENDP	; CWSpell::CheckBackgroundNotify
_TEXT	ENDS
PUBLIC	?CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z	; CWSpell::CheckBackgroundRecheck
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_ctrlHWnd$ = 8						; size = 4
_changeColor$ = 12					; size = 4
_bold$ = 16						; size = 4
_italics$ = 20						; size = 4
_underline$ = 24					; size = 4
_textColor$ = 28					; size = 4
?CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z PROC NEAR	; CWSpell::CheckBackgroundRecheck, COMDAT
; _this$ = ecx

; 956  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 957  : 	long result;
; 958  : 	static BYTE parms[] =
; 959  : 		VTS_I4 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I4;
; 960  : 	InvokeHelper(0x4e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
; 961  : 		ctrlHWnd, changeColor, bold, italics, underline, textColor);

	mov	eax, DWORD PTR _textColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _underline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _italics$[ebp]
	push	edx
	mov	eax, DWORD PTR _bold$[ebp]
	push	eax
	mov	ecx, DWORD PTR _changeColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrlHWnd$[ebp]
	push	edx
	push	OFFSET FLAT:?parms@?1??CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z@4PAEA
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	1
	push	78					; 0000004eH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 48					; 00000030H

; 962  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 963  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95110
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L95110:
	DD	1
	DD	$L95109
$L95109:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95108
$L95108:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?CheckBackgroundRecheck@CWSpell@@QAEJJHHHHJ@Z ENDP	; CWSpell::CheckBackgroundRecheck
_TEXT	ENDS
PUBLIC	?CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z	; CWSpell::CheckBackgroundMenu
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_ctrlHWnd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_options$ = 20						; size = 4
_changeColor$ = 24					; size = 4
_bold$ = 28						; size = 4
_italics$ = 32						; size = 4
_underline$ = 36					; size = 4
_textColor$ = 40					; size = 4
?CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z PROC NEAR	; CWSpell::CheckBackgroundMenu, COMDAT
; _this$ = ecx

; 966  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 967  : 	long result;
; 968  : 	static BYTE parms[] =
; 969  : 		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I4;
; 970  : 	InvokeHelper(0x4f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
; 971  : 		ctrlHWnd, x, y, options, changeColor, bold, italics, underline, textColor);

	mov	eax, DWORD PTR _textColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _underline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _italics$[ebp]
	push	edx
	mov	eax, DWORD PTR _bold$[ebp]
	push	eax
	mov	ecx, DWORD PTR _changeColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _options$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrlHWnd$[ebp]
	push	edx
	push	OFFSET FLAT:?parms@?1??CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z@4PAEA
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	3
	push	1
	push	79					; 0000004fH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 60					; 0000003cH

; 972  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 973  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95115
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
$L95115:
	DD	1
	DD	$L95114
$L95114:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95113
$L95113:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?CheckBackgroundMenu@CWSpell@@QAEJJJJJHHHHJ@Z ENDP	; CWSpell::CheckBackgroundMenu
_TEXT	ENDS
PUBLIC	?AboutBox@CWSpell@@QAEXXZ			; CWSpell::AboutBox
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AboutBox@CWSpell@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AboutBox@CWSpell@@QAEXXZ PROC NEAR			; CWSpell::AboutBox, COMDAT
; _this$ = ecx

; 976  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 977  : 	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

	push	0
	push	0
	push	0
	push	1
	push	-552					; fffffdd8H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ	; CWnd::InvokeHelper
	add	esp, 24					; 00000018H

; 978  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AboutBox@CWSpell@@QAEXXZ ENDP				; CWSpell::AboutBox
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 967  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 969  : 
; 970  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 971  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator+=
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=, COMDAT
; _this$ = ecx

; 1028 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		CThisSimpleString::operator+=( str );

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator+=

; 1030 : 
; 1031 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1032 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV?$CSimpleStringT@D$0A@@1@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator+=
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=, COMDAT
; _this$ = ecx

; 1042 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1043 : 		CThisSimpleString::operator+=( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ; ATL::CSimpleStringT<char,0>::operator+=

; 1044 : 
; 1045 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1046 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
_TEXT	ENDS
PUBLIC	?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<char,0>::GetManager
PUBLIC	?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z ; ATL::CSimpleStringT<char,0>::Concatenate
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT
$T95128 = -224						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z PROC NEAR ; ATL::operator+, COMDAT

; 2014 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T95128[ebp], 0

; 2015 : 		CStringT strResult( str1.GetManager() );

	mov	ecx, DWORD PTR _str1$[ebp]
	call	?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<char,0>::GetManager
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2016 : 
; 2017 : 		Concatenate( strResult, str1, str1.GetLength(), str2, str2.GetLength() );

	mov	ecx, DWORD PTR _str2$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _str2$[ebp]
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	mov	ecx, DWORD PTR _str1$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _str1$[ebp]
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	call	?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z ; ATL::CSimpleStringT<char,0>::Concatenate
	add	esp, 20					; 00000014H

; 2018 : 
; 2019 : 		return( strResult );

	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T95128[ebp]
	or	ecx, 1
	mov	DWORD PTR $T95128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2020 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95135
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95135:
	DD	1
	DD	$L95134
$L95134:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95132
$L95132:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ENDP ; ATL::operator+
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T95143 = -224						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_psz2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z PROC NEAR ; ATL::operator+, COMDAT

; 2023 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T95143[ebp], 0

; 2024 : 		CStringT strResult( str1.GetManager() );

	mov	ecx, DWORD PTR _str1$[ebp]
	call	?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<char,0>::GetManager
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2025 : 
; 2026 : 		Concatenate( strResult, str1, str1.GetLength(), psz2, StringLength( psz2 ) );

	mov	eax, DWORD PTR _psz2$[ebp]
	push	eax
	call	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _psz2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str1$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _str1$[ebp]
	call	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::operator char const *
	push	eax
	lea	edx, DWORD PTR _strResult$[ebp]
	push	edx
	call	?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z ; ATL::CSimpleStringT<char,0>::Concatenate
	add	esp, 20					; 00000014H

; 2027 : 
; 2028 : 		return( strResult );

	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	ecx, DWORD PTR $T95143[ebp]
	or	ecx, 1
	mov	DWORD PTR $T95143[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95150
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95150:
	DD	1
	DD	$L95149
$L95149:
	DD	-20					; ffffffecH
	DD	4
	DD	$L95147
$L95147:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ENDP ; ATL::operator+
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	??_C@_0CH@KENCKLIF@?$CIiChar?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiChar?5?$DM?$DN?5GetLen@ ; `string'
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0CH@KENCKLIF@?$CIiChar?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiChar?5?$DM?$DN?5GetLen@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0CH@KENCKLIF@?$CIiChar?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiChar?5?$DM?$DN?5GetLen@ DB '('
	DB	'iChar >= 0) && (iChar <= GetLength())', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iChar$ = 8						; size = 4
??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator[], COMDAT
; _this$ = ecx

; 368  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 369  : 		ATLASSERT( (iChar >= 0) && (iChar <= GetLength()) );  // Indexing the '\0' is OK

	cmp	DWORD PTR _iChar$[ebp], 0
	jl	SHORT $L95156
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	cmp	DWORD PTR _iChar$[ebp], eax
	jle	SHORT $L95157
$L95156:
	push	OFFSET FLAT:??_C@_0CH@KENCKLIF@?$CIiChar?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiChar?5?$DM?$DN?5GetLen@
	push	0
	push	369					; 00000171H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95157
	int	3
$L95157:

; 370  : 		
; 371  : 		if( (iChar < 0) || (iChar > GetLength()) )

	cmp	DWORD PTR _iChar$[ebp], 0
	jl	SHORT $L94091
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	cmp	DWORD PTR _iChar$[ebp], eax
	jle	SHORT $L94090
$L94091:

; 372  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L94090:

; 373  : 			
; 374  : 		return( m_pszData[iChar] );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _iChar$[ebp]
	mov	al, BYTE PTR [ecx+edx]
$L95155:

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z ENDP		; ATL::CSimpleStringT<char,0>::operator[]
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T95160 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T95160[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L24989

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L24989:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L95159:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 164  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVA
	add	esp, 28					; 0000001cH

; 123  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 800  : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pStringMgr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 801  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$94103 = -44					; size = 4
_pOldData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 273  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 275  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 276  : 		if( pSrcData != pOldData)

	mov	eax, DWORD PTR _pSrcData$[ebp]
	cmp	eax, DWORD PTR _pOldData$[ebp]
	je	SHORT $L94099

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L94101
	mov	eax, DWORD PTR _pSrcData$[ebp]
	mov	ecx, DWORD PTR _pOldData$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $L94100
$L94101:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 281  : 			}
; 282  : 			else

	jmp	SHORT $L94099
$L94100:

; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$94103[ebp], eax

; 285  : 				pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 286  : 				Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$94103[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L94099:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator+=, COMDAT
; _this$ = ecx

; 322  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 		Append( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ; ATL::CSimpleStringT<char,0>::Append

; 324  : 
; 325  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 326  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator+=
_TEXT	ENDS
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator+=, COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 337  : 		Append( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::Append

; 338  : 
; 339  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 340  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator+=
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetManager, COMDAT
; _this$ = ecx

; 504  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 505  : 		return( GetData()->pStringMgr->Clone() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 506  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetManager
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z
_TEXT	SEGMENT
_pszBuffer$ = -20					; size = 4
_nNewLength$ = -8					; size = 4
_strResult$ = 8						; size = 4
_psz1$ = 12						; size = 4
_nLength1$ = 16						; size = 4
_psz2$ = 20						; size = 4
_nLength2$ = 24						; size = 4
?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Concatenate, COMDAT

; 696  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 697  : 		int nNewLength = nLength1+nLength2;

	mov	eax, DWORD PTR _nLength1$[ebp]
	add	eax, DWORD PTR _nLength2$[ebp]
	mov	DWORD PTR _nNewLength$[ebp], eax

; 698  : 		PXSTR pszBuffer = strResult.GetBuffer( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strResult$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 699  : 		CopyChars( pszBuffer, psz1, nLength1 );

	mov	eax, DWORD PTR _nLength1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 700  : 		CopyChars( pszBuffer+nLength1, psz2, nLength2 );

	mov	eax, DWORD PTR _nLength2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	add	edx, DWORD PTR _nLength1$[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 701  : 		strResult.ReleaseBufferSetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strResult$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength

; 702  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Concatenate@?$CSimpleStringT@D$0A@@ATL@@KAXAAV12@PBDH1H@Z ENDP ; ATL::CSimpleStringT<char,0>::Concatenate
_TEXT	ENDS
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx

; 383  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		Append( pszSrc, StringLength( pszSrc ) );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append

; 385  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx

; 412  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 413  : 		Append( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append

; 414  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXABV12@@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszBuffer$ = -56					; size = 4
_nNewLength$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_nOffset$ = -20						; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 388  : 		// See comment in SetString() about why we do this
; 389  : 		UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nOffset$[ebp], ecx

; 390  : 
; 391  : 		UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	mov	DWORD PTR _nOldLength$[ebp], eax

; 392  : 		int nNewLength = nOldLength+nLength;

	mov	eax, DWORD PTR _nOldLength$[ebp]
	add	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$[ebp], eax

; 393  : 		PXSTR pszBuffer = GetBuffer( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 394  : 		if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$[ebp]
	cmp	eax, DWORD PTR _nOldLength$[ebp]
	ja	SHORT $L94126

; 395  : 		{
; 396  : 			pszSrc = pszBuffer+nOffset;

	mov	eax, DWORD PTR _pszBuffer$[ebp]
	add	eax, DWORD PTR _nOffset$[ebp]
	mov	DWORD PTR _pszSrc$[ebp], eax
$L94126:

; 397  : 			// No need to call CopyCharsOverlapped, since the destination is
; 398  : 			// beyond the end of the original buffer
; 399  : 		}
; 400  : 		CopyChars( pszBuffer+nOldLength, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	add	edx, DWORD PTR _nOldLength$[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 401  : 		ReleaseBufferSetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength

; 402  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L95192
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95192
	int	3
$L95192:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L25707

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L25707:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 797  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>

; 815  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 378  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 380  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 500  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	eax, DWORD PTR [eax+4]

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 982  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ; ATL::CSimpleStringT<char,0>::operator=

; 984  : 
; 985  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 986  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L95208
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95208
	int	3
$L95208:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_pNewData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 217  : 	CSimpleStringT( const CSimpleStringT& strSrc )

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$[ebp], eax

; 221  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach

; 222  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L95217
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95217
	int	3
$L95217:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
_TEXT	ENDS
EXTRN	_strlen:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 677  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 		if( psz == NULL )

	cmp	DWORD PTR _psz$[ebp], 0
	jne	SHORT $L92819

; 679  : 		{
; 680  : 			return( 0 );

	xor	eax, eax
	jmp	SHORT $L92818
$L92819:

; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

	mov	eax, DWORD PTR _psz$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
$L92818:

; 683  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92828

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L92828:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L95226
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95226
	int	3
$L95226:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L95227
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95227
	int	3
$L95227:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92836
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92835
$L92836:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92835:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	BYTE PTR [ecx+edx], 0
$L95225:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		SetString( pszSrc );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92884 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92880

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92880:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92881

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92878
$L92881:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92878

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92884[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92884[ebp], 1024	; 00000400H
	jle	SHORT $L92885

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92884[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92886
$L92885:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92886:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92887

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92884[ebp], eax
$L92887:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92884[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L92878:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pNewStringMgr$ = -20					; size = 4
_pNewData$ = -8						; size = 4
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 802  : 		CStringData* pNewData = NULL;

	mov	DWORD PTR _pNewData$[ebp], 0

; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewStringMgr$[ebp], eax

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L92891
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L92891

; 806  : 		{
; 807  : 			pNewData = pData;

	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pNewData$[ebp], eax

; 808  : 			pNewData->AddRef();

	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?AddRef@CStringData@ATL@@QAEXXZ		; ATL::CStringData::AddRef

; 809  : 		}
; 810  : 		else

	jmp	SHORT $L92892
$L92891:

; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pNewStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 813  : 			if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92894

; 814  : 			{
; 815  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92894:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92892:

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
$L95241:

; 822  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@		; `string'
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT
??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@ DB 'nRefs > 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		ATLASSERT(nRefs > 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jg	SHORT $L95244
	push	OFFSET FLAT:??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
	push	0
	push	71					; 00000047H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95244
	int	3
$L95244:

; 72   : 		_InterlockedIncrement(&nRefs);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 581  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L95250:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92916

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92916:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L95253
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L95254
$L95253:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L95254:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L95252:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L95257
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L95257
	int	3
$L95257:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92926

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L92926:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L95256:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszBuffer$92935 = -44					; size = 4
_nOffset$92934 = -32					; size = 4
_nOldLength$92933 = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 		if( nLength == 0 )

	cmp	DWORD PTR _nLength$[ebp], 0
	jne	SHORT $L92929

; 585  : 		{
; 586  : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty

; 587  : 		}
; 588  : 		else

	jmp	SHORT $L95259
$L92929:

; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

	cmp	DWORD PTR _pszSrc$[ebp], 0
	jne	SHORT $L92931

; 597  : 				AtlThrow(E_INVALIDARG);			

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92931:

; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetLength
	mov	DWORD PTR _nOldLength$92933[ebp], eax

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ; ATL::CSimpleStringT<char,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nOffset$92934[ebp], ecx

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92935[ebp], eax

; 605  : 			if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$92934[ebp]
	cmp	eax, DWORD PTR _nOldLength$92933[ebp]
	ja	SHORT $L92936

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$92935[ebp]
	add	ecx, DWORD PTR _nOffset$92934[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
	add	esp, 12					; 0000000cH

; 608  : 			}
; 609  : 			else

	jmp	SHORT $L92937
$L92936:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92935[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92937:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
$L95259:

; 614  : 		}
; 615  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92811 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92808

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92805
$L92808:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92809

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92805
$L92809:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92811[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92811[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
$L92805:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 509  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 510  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 511  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
EXTRN	_memmove:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 656  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 658  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
END
