; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TBT32.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BO@NJHNBMAF@Christopher?5J?4?5Noyes?5Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09PEPAOIHL@TFILE?4LST?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@PHNDKGDI@string?4Tab?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08FBODMPMN@TEXT?4SYM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OMHANAAE@REPORT?4SYM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OFHDMKIP@TEXTTYPE?4LST?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ??0CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CAsFile@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dest@CAsFile@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAsFileAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAsFileAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbolAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbolAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRSymbolAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CRSymbolAry@@QAEHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CStrTransform@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CStrTransform@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CATextTypeAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextTypeAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBT32App@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTBT32App@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBT32App@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?InitInstance@CTBT32App@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAboutDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAboutDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAboutDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAppAbout@CTBT32App@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExitInstance@CTBT32App@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAsFileAry@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStrTransform@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSymbolAry@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRSymbolAry@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCATextTypeAry@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRSymbolAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CAboutDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CAboutDlg@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAboutDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTBT32App@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_messageEntries@CTBT32App@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CTBT32App@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?pFileList@@3PAVCAsFileAry@@A			; pFileList
PUBLIC	?pRegSymbols@@3PAVCSymbolAry@@A			; pRegSymbols
PUBLIC	?pRepSymbols@@3PAVCRSymbolAry@@A		; pRepSymbols
PUBLIC	?pTransformers@@3PAVCStrTransform@@A		; pTransformers
PUBLIC	?pATextTypes@@3PAVCATextTypeAry@@A		; pATextTypes
PUBLIC	?_messageEntries@CAboutDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CAboutDlg::_messageEntries
PUBLIC	?messageMap@CAboutDlg@@1UAFX_MSGMAP@@B		; CAboutDlg::messageMap
PUBLIC	?OnAppAbout@CTBT32App@@QAEXXZ			; CTBT32App::OnAppAbout
PUBLIC	?_messageEntries@CTBT32App@@0QBUAFX_MSGMAP_ENTRY@@B ; CTBT32App::_messageEntries
PUBLIC	?messageMap@CTBT32App@@1UAFX_MSGMAP@@B		; CTBT32App::messageMap
EXTRN	?messageMap@CDialog@@1UAFX_MSGMAP@@B:QWORD	; CDialog::messageMap
EXTRN	?messageMap@CWinApp@@1UAFX_MSGMAP@@B:QWORD	; CWinApp::messageMap
_BSS	SEGMENT
?pFileList@@3PAVCAsFileAry@@A DD 01H DUP (?)		; pFileList
?pRegSymbols@@3PAVCSymbolAry@@A DD 01H DUP (?)		; pRegSymbols
?pRepSymbols@@3PAVCRSymbolAry@@A DD 01H DUP (?)		; pRepSymbols
?pTransformers@@3PAVCStrTransform@@A DD 01H DUP (?)	; pTransformers
?pATextTypes@@3PAVCATextTypeAry@@A DD 01H DUP (?)	; pATextTypes
_BSS	ENDS
_DATA	SEGMENT
_THIS_FILE DB	'c:\astrow32dev\tbt32\tbt32.cpp', 00H
_DATA	ENDS
;	COMDAT ?_messageEntries@CTBT32App@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CTBT32App@@0QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; CTBT32App::_messageEntries
	DD	00H
	DD	0e140H
	DD	0e140H
	DD	035H
	DD	FLAT:?OnAppAbout@CTBT32App@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CTBT32App@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CTBT32App@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CWinApp@@1UAFX_MSGMAP@@B ; CTBT32App::messageMap
	DD	FLAT:?_messageEntries@CTBT32App@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@CAboutDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CAboutDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 00H ; CAboutDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CAboutDlg@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CAboutDlg@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CDialog@@1UAFX_MSGMAP@@B ; CAboutDlg::messageMap
	DD	FLAT:?_messageEntries@CAboutDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	??1CAsFile@@QAE@XZ				; CAsFile::~CAsFile
PUBLIC	??_ECAsFile@@QAEPAXI@Z				; CAsFile::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCcsu /ZI
rtc$TMZ	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECAsFile@@QAEPAXI@Z PROC NEAR			; CAsFile::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93194
	push	OFFSET FLAT:??1CAsFile@@QAE@XZ		; CAsFile::~CAsFile
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	156					; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93195
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93195:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93193
$L93194:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAsFile@@QAE@XZ			; CAsFile::~CAsFile
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93197
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93197:
	mov	eax, DWORD PTR _this$[ebp]
$L93193:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECAsFile@@QAEPAXI@Z ENDP				; CAsFile::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CAsFile@@QAE@XZ PROC NEAR				; CAsFile::~CAsFile, COMDAT
; _this$ = ecx

; 16   :     ~CAsFile() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAsFile@@QAE@XZ ENDP					; CAsFile::~CAsFile
_TEXT	ENDS
PUBLIC	??1CSymbol@@QAE@XZ				; CSymbol::~CSymbol
PUBLIC	??_ECSymbol@@QAEPAXI@Z				; CSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECSymbol@@QAEPAXI@Z PROC NEAR			; CSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93324
	push	OFFSET FLAT:??1CSymbol@@QAE@XZ		; CSymbol::~CSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93325
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93325:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93323
$L93324:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93327
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93327:
	mov	eax, DWORD PTR _this$[ebp]
$L93323:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECSymbol@@QAEPAXI@Z ENDP				; CSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSymbol@@6B@				; CSymbol::`vftable'
EXTRN	?Read@CSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CSymbol::Read
;	COMDAT ??_7CSymbol@@6B@
; File c:\astrow32dev\tbt32\symbol.hpp
CONST	SEGMENT
??_7CSymbol@@6B@ DD FLAT:?Read@CSymbol@@UAEHPAU_iobuf@@@Z ; CSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSymbol@@QAE@XZ PROC NEAR				; CSymbol::~CSymbol, COMDAT
; _this$ = ecx

; 14   : 	~CSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CSymbol@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSymbol@@QAE@XZ ENDP					; CSymbol::~CSymbol
_TEXT	ENDS
PUBLIC	??1CRSymbol@@QAE@XZ				; CRSymbol::~CRSymbol
PUBLIC	??_ECRSymbol@@QAEPAXI@Z				; CRSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECRSymbol@@QAEPAXI@Z PROC NEAR			; CRSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93375
	push	OFFSET FLAT:??1CRSymbol@@QAE@XZ		; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93376
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93376:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93374
$L93375:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRSymbol@@QAE@XZ			; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93378:
	mov	eax, DWORD PTR _this$[ebp]
$L93374:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECRSymbol@@QAEPAXI@Z ENDP				; CRSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CRSymbol@@6B@				; CRSymbol::`vftable'
EXTRN	?Read@CRSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CRSymbol::Read
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT
??_7CRSymbol@@6B@ DD FLAT:?Read@CRSymbol@@UAEHPAU_iobuf@@@Z ; CRSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRSymbol@@QAE@XZ PROC NEAR				; CRSymbol::~CRSymbol, COMDAT
; _this$ = ecx

; 28   : 	~CRSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRSymbol@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRSymbol@@QAE@XZ ENDP				; CRSymbol::~CRSymbol
_TEXT	ENDS
PUBLIC	??1CATextType@@QAE@XZ				; CATextType::~CATextType
PUBLIC	??_ECATextType@@QAEPAXI@Z			; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECATextType@@QAEPAXI@Z PROC NEAR			; CATextType::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93523
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93524
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93524:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93522
$L93523:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93526
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93526:
	mov	eax, DWORD PTR _this$[ebp]
$L93522:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECATextType@@QAEPAXI@Z ENDP				; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CATextType@@QAE@XZ PROC NEAR				; CATextType::~CATextType, COMDAT
; _this$ = ecx

; 16   :     ~CATextType() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextType@@QAE@XZ ENDP				; CATextType::~CATextType
_TEXT	ENDS
PUBLIC	?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ	; CTBT32App::GetMessageMap
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\tbt32.cpp
;	COMDAT ?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CTBT32App::GetMessageMap, COMDAT
; _this$ = ecx

; 38   : BEGIN_MESSAGE_MAP(CTBT32App, CWinApp)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CTBT32App@@1UAFX_MSGMAP@@B ; CTBT32App::messageMap
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CTBT32App::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CTBT32App@@QAE@XZ				; CTBT32App::CTBT32App
PUBLIC	?InitInstance@CTBT32App@@UAEHXZ			; CTBT32App::InitInstance
PUBLIC	?ExitInstance@CTBT32App@@UAEHXZ			; CTBT32App::ExitInstance
PUBLIC	??_7CTBT32App@@6B@				; CTBT32App::`vftable'
PUBLIC	??_GCTBT32App@@UAEPAXI@Z			; CTBT32App::`scalar deleting destructor'
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:NEAR		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:NEAR		; CWinThread::PumpMessage
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::IsIdleMessage
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:NEAR ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:NEAR	; CWinThread::GetMainWnd
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?Delete@CWinThread@@UAEXXZ:NEAR			; CWinThread::Delete
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWinApp::GetRuntimeClass
EXTRN	??0CWinApp@@QAE@PBD@Z:NEAR			; CWinApp::CWinApp
EXTRN	?InitLibId@CWinApp@@UAEXXZ:NEAR			; CWinApp::InitLibId
EXTRN	?Register@CWinApp@@UAEHXZ:NEAR			; CWinApp::Register
EXTRN	?Unregister@CWinApp@@UAEHXZ:NEAR		; CWinApp::Unregister
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:NEAR ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:NEAR	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:NEAR		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:NEAR		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:NEAR		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:NEAR		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:NEAR		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::WinHelpA
EXTRN	?HtmlHelpA@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::HtmlHelpA
EXTRN	?WinHelpInternal@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::WinHelpInternal
EXTRN	??_ECTBT32App@@UAEPAXI@Z:NEAR			; CTBT32App::`vector deleting destructor'
EXTRN	?Run@CWinApp@@UAEHXZ:NEAR			; CWinApp::Run
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:NEAR			; CWinApp::OnIdle
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:NEAR ; CWinApp::ProcessWndProcException
EXTRN	?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ:NEAR ; CWinApp::LoadAppLangResourceDLL
EXTRN	?AssertValid@CWinApp@@UBEXXZ:NEAR		; CWinApp::AssertValid
EXTRN	?Dump@CWinApp@@UBEXAAVCDumpContext@@@Z:NEAR	; CWinApp::Dump
EXTRN	?LoadSysPolicies@CWinApp@@UAEHXZ:NEAR		; CWinApp::LoadSysPolicies
;	COMDAT ??_7CTBT32App@@6B@
CONST	SEGMENT
??_7CTBT32App@@6B@ DD FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ ; CTBT32App::`vftable'
	DD	FLAT:??_ECTBT32App@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWinApp@@UBEXXZ
	DD	FLAT:?Dump@CWinApp@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTBT32App@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CTBT32App@@UAEHXZ
	DD	FLAT:?Run@CWinApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CWinApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CTBT32App@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?InitLibId@CWinApp@@UAEXXZ
	DD	FLAT:?Register@CWinApp@@UAEHXZ
	DD	FLAT:?Unregister@CWinApp@@UAEHXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWinApp@@UAEXKI@Z
	DD	FLAT:?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ
	DD	FLAT:?LoadSysPolicies@CWinApp@@UAEHXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CTBT32App@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CTBT32App@@QAE@XZ PROC NEAR				; CTBT32App::CTBT32App, COMDAT
; _this$ = ecx

; 50   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWinApp@@QAE@PBD@Z			; CWinApp::CWinApp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CTBT32App@@6B@

; 51   : 	// TODO: add construction code here,
; 52   : 	// Place all significant initialization in InitInstance
; 53   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CTBT32App@@QAE@XZ ENDP				; CTBT32App::CTBT32App
_TEXT	ENDS
PUBLIC	??1CTBT32App@@UAE@XZ				; CTBT32App::~CTBT32App
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCTBT32App@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCTBT32App@@UAEPAXI@Z PROC NEAR			; CTBT32App::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTBT32App@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93545
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93545:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCTBT32App@@UAEPAXI@Z ENDP				; CTBT32App::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWinApp@@UAE@XZ:NEAR				; CWinApp::~CWinApp
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CTBT32App@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTBT32App@@UAE@XZ PROC NEAR				; CTBT32App::~CTBT32App, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWinApp@@UAE@XZ			; CWinApp::~CWinApp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTBT32App@@UAE@XZ ENDP				; CTBT32App::~CTBT32App
_TEXT	ENDS
PUBLIC	??0CSymbolAry@@QAE@H@Z				; CSymbolAry::CSymbolAry
PUBLIC	??0CRSymbolAry@@QAE@H@Z				; CRSymbolAry::CRSymbolAry
PUBLIC	?Load@CRSymbolAry@@QAEHPAD@Z			; CRSymbolAry::Load
PUBLIC	??0CStrTransform@@QAE@H@Z			; CStrTransform::CStrTransform
PUBLIC	??0CATextTypeAry@@QAE@H@Z			; CATextTypeAry::CATextTypeAry
PUBLIC	??_C@_0BO@NJHNBMAF@Christopher?5J?4?5Noyes?5Software?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA ; `CTBT32App::InitInstance'::`2'::__LINE__Var
PUBLIC	??_C@_09PEPAOIHL@TFILE?4LST?$AA@		; `string'
PUBLIC	??_C@_0L@PHNDKGDI@string?4Tab?$AA@		; `string'
PUBLIC	??_C@_08FBODMPMN@TEXT?4SYM?$AA@			; `string'
PUBLIC	??_C@_0L@OMHANAAE@REPORT?4SYM?$AA@		; `string'
PUBLIC	??_C@_0N@OFHDMKIP@TEXTTYPE?4LST?$AA@		; `string'
PUBLIC	??0CAsFileAry@@QAE@H@Z				; CAsFileAry::CAsFileAry
EXTRN	?Load@CSymbolAry@@QAEHPAD@Z:NEAR		; CSymbolAry::Load
EXTRN	??2CObject@@SGPAXIPBDH@Z:NEAR			; CObject::operator new
EXTRN	??3CObject@@SGXPAXPBDH@Z:NEAR			; CObject::operator delete
EXTRN	?Load@CStrTransform@@QAEHPAD@Z:NEAR		; CStrTransform::Load
EXTRN	?Load@CATextTypeAry@@QAEHPAD@Z:NEAR		; CATextTypeAry::Load
EXTRN	?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z:NEAR ; AfxEnableControlContainer
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?SetRegistryKey@CWinApp@@IAEXPBD@Z:NEAR		; CWinApp::SetRegistryKey
EXTRN	?Enable3dControlsStatic@CWinApp@@IAEHXZ:NEAR	; CWinApp::Enable3dControlsStatic
EXTRN	??0CMainFrame@@QAE@XZ:NEAR			; CMainFrame::CMainFrame
EXTRN	?UpdateWindow@CWnd@@QAEXXZ:NEAR			; CWnd::UpdateWindow
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?AfxInitRichEdit@@YGHXZ:NEAR			; AfxInitRichEdit
EXTRN	?Load@CAsFileAry@@QAEHPAD@Z:NEAR		; CAsFileAry::Load
EXTRN	??2@YAPAXIPBDH@Z:NEAR				; operator new
EXTRN	??3@YAXPAXPBDH@Z:NEAR				; operator delete
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitInstance@CTBT32App@@UAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$5
__ehfuncinfo$?InitInstance@CTBT32App@@UAEHXZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$?InitInstance@CTBT32App@@UAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BO@NJHNBMAF@Christopher?5J?4?5Noyes?5Software?$AA@
CONST	SEGMENT
??_C@_0BO@NJHNBMAF@Christopher?5J?4?5Noyes?5Software?$AA@ DB 'Christopher'
	DB	' J. Noyes Software', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA DD 040H ; `CTBT32App::InitInstance'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09PEPAOIHL@TFILE?4LST?$AA@
CONST	SEGMENT
??_C@_09PEPAOIHL@TFILE?4LST?$AA@ DB 'TFILE.LST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PHNDKGDI@string?4Tab?$AA@
CONST	SEGMENT
??_C@_0L@PHNDKGDI@string?4Tab?$AA@ DB 'string.Tab', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBODMPMN@TEXT?4SYM?$AA@
CONST	SEGMENT
??_C@_08FBODMPMN@TEXT?4SYM?$AA@ DB 'TEXT.SYM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OMHANAAE@REPORT?4SYM?$AA@
CONST	SEGMENT
??_C@_0L@OMHANAAE@REPORT?4SYM?$AA@ DB 'REPORT.SYM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFHDMKIP@TEXTTYPE?4LST?$AA@
CONST	SEGMENT
??_C@_0N@OFHDMKIP@TEXTTYPE?4LST?$AA@ DB 'TEXTTYPE.LST', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?InitInstance@CTBT32App@@UAEHXZ
_TEXT	SEGMENT
tv202 = -376						; size = 4
tv186 = -376						; size = 4
tv170 = -376						; size = 4
tv154 = -376						; size = 4
tv138 = -376						; size = 4
tv81 = -376						; size = 4
$T93786 = -368						; size = 4
$T93787 = -356						; size = 4
$T93790 = -344						; size = 4
$T93791 = -332						; size = 4
$T93794 = -320						; size = 4
$T93795 = -308						; size = 4
$T93798 = -296						; size = 4
$T93799 = -284						; size = 4
$T93802 = -272						; size = 4
$T93803 = -260						; size = 4
$T93806 = -248						; size = 4
$T93807 = -236						; size = 4
_pFrame$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InitInstance@CTBT32App@@UAEHXZ PROC NEAR		; CTBT32App::InitInstance, COMDAT
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitInstance@CTBT32App@@UAEHXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 	AfxEnableControlContainer();

	push	0
	call	?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z ; AfxEnableControlContainer
	add	esp, 4

; 66   : 
; 67   : 	// Standard initialization
; 68   : 	// If you are not using these features and wish to reduce the size
; 69   : 	//  of your final executable, you should remove from the following
; 70   : 	//  the specific initialization routines you do not need.
; 71   : 
; 72   : #ifdef _AFXDLL
; 73   : 	Enable3dControls();			// Call this when using MFC in a shared DLL
; 74   : #else
; 75   : 	Enable3dControlsStatic();	// Call this when linking to MFC statically

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Enable3dControlsStatic@CWinApp@@IAEHXZ	; CWinApp::Enable3dControlsStatic

; 76   : #endif
; 77   :    AfxInitRichEdit();

	call	?AfxInitRichEdit@@YGHXZ			; AfxInitRichEdit

; 78   : 	// Change the registry key under which our settings are stored.
; 79   : 	// TODO: You should modify this string to be something appropriate
; 80   : 	// such as the name of your company or organization.
; 81   : 	SetRegistryKey(_T("Christopher J. Noyes Software"));

	push	OFFSET FLAT:??_C@_0BO@NJHNBMAF@Christopher?5J?4?5Noyes?5Software?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRegistryKey@CWinApp@@IAEXPBD@Z	; CWinApp::SetRegistryKey

; 82   : 
; 83   : 	// To create the main window, this code creates a new frame window
; 84   : 	// object and then sets it as the application's main window object.
; 85   : 
; 86   : 	CMainFrame* pFrame = new CMainFrame;

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	436					; 000001b4H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T93787[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T93787[ebp], 0
	je	SHORT $L93788
	mov	ecx, DWORD PTR $T93787[ebp]
	call	??0CMainFrame@@QAE@XZ			; CMainFrame::CMainFrame
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L93789
$L93788:
	mov	DWORD PTR tv81[ebp], 0
$L93789:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T93786[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93786[ebp]
	mov	DWORD PTR _pFrame$[ebp], edx

; 87   : 	m_pMainWnd = pFrame;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pFrame$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 88   : 
; 89   : 	// create and load the frame with its resources
; 90   : 
; 91   : 	pFrame->LoadFrame(IDR_MAINFRAME,
; 92   : 		WS_OVERLAPPEDWINDOW | FWS_ADDTOTITLE, NULL,
; 93   : 		NULL);

	mov	esi, esp
	push	0
	push	0
	push	13598720				; 00cf8000H
	push	128					; 00000080H
	mov	eax, DWORD PTR _pFrame$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pFrame$[ebp]
	call	DWORD PTR [edx+316]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 94   :    pFrame->ShowWindow(SW_SHOW);

	push	5
	mov	ecx, DWORD PTR _pFrame$[ebp]
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow

; 95   :    pFrame->UpdateWindow();

	mov	ecx, DWORD PTR _pFrame$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow

; 96   :    pFileList = new CAsFileAry();

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 32					; 00000020H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	16					; 00000010H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T93791[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T93791[ebp], 0
	je	SHORT $L93792
	push	170					; 000000aaH
	mov	ecx, DWORD PTR $T93791[ebp]
	call	??0CAsFileAry@@QAE@H@Z			; CAsFileAry::CAsFileAry
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $L93793
$L93792:
	mov	DWORD PTR tv138[ebp], 0
$L93793:
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T93790[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93790[ebp]
	mov	DWORD PTR ?pFileList@@3PAVCAsFileAry@@A, edx ; pFileList

; 97   :    pFileList->Load();

	push	OFFSET FLAT:??_C@_09PEPAOIHL@TFILE?4LST?$AA@
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?Load@CAsFileAry@@QAEHPAD@Z		; CAsFileAry::Load

; 98   :    pTransformers = new CStrTransform();

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	48					; 00000030H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T93795[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T93795[ebp], 0
	je	SHORT $L93796
	push	62					; 0000003eH
	mov	ecx, DWORD PTR $T93795[ebp]
	call	??0CStrTransform@@QAE@H@Z		; CStrTransform::CStrTransform
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $L93797
$L93796:
	mov	DWORD PTR tv154[ebp], 0
$L93797:
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T93794[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93794[ebp]
	mov	DWORD PTR ?pTransformers@@3PAVCStrTransform@@A, edx ; pTransformers

; 99   :    pTransformers->Load();

	push	OFFSET FLAT:??_C@_0L@PHNDKGDI@string?4Tab?$AA@
	mov	ecx, DWORD PTR ?pTransformers@@3PAVCStrTransform@@A ; pTransformers
	call	?Load@CStrTransform@@QAEHPAD@Z		; CStrTransform::Load

; 100  :    //AfxMessageBox("After Trans");
; 101  :    pRegSymbols=new CSymbolAry();

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 37					; 00000025H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	20					; 00000014H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T93799[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T93799[ebp], 0
	je	SHORT $L93800
	push	500					; 000001f4H
	mov	ecx, DWORD PTR $T93799[ebp]
	call	??0CSymbolAry@@QAE@H@Z			; CSymbolAry::CSymbolAry
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $L93801
$L93800:
	mov	DWORD PTR tv170[ebp], 0
$L93801:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T93798[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93798[ebp]
	mov	DWORD PTR ?pRegSymbols@@3PAVCSymbolAry@@A, edx ; pRegSymbols

; 102  :    pRegSymbols->Load();

	push	OFFSET FLAT:??_C@_08FBODMPMN@TEXT?4SYM?$AA@
	mov	ecx, DWORD PTR ?pRegSymbols@@3PAVCSymbolAry@@A ; pRegSymbols
	call	?Load@CSymbolAry@@QAEHPAD@Z		; CSymbolAry::Load

; 103  :    pRepSymbols=new CRSymbolAry();

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 39					; 00000027H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	20					; 00000014H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T93803[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T93803[ebp], 0
	je	SHORT $L93804
	push	200					; 000000c8H
	mov	ecx, DWORD PTR $T93803[ebp]
	call	??0CRSymbolAry@@QAE@H@Z			; CRSymbolAry::CRSymbolAry
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $L93805
$L93804:
	mov	DWORD PTR tv186[ebp], 0
$L93805:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T93802[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93802[ebp]
	mov	DWORD PTR ?pRepSymbols@@3PAVCRSymbolAry@@A, edx ; pRepSymbols

; 104  :    pRepSymbols->Load();

	push	OFFSET FLAT:??_C@_0L@OMHANAAE@REPORT?4SYM?$AA@
	mov	ecx, DWORD PTR ?pRepSymbols@@3PAVCRSymbolAry@@A ; pRepSymbols
	call	?Load@CRSymbolAry@@QAEHPAD@Z		; CRSymbolAry::Load

; 105  :    pATextTypes = new CATextTypeAry;

	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 41					; 00000029H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	16					; 00000010H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T93807[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T93807[ebp], 0
	je	SHORT $L93808
	push	220					; 000000dcH
	mov	ecx, DWORD PTR $T93807[ebp]
	call	??0CATextTypeAry@@QAE@H@Z		; CATextTypeAry::CATextTypeAry
	mov	DWORD PTR tv202[ebp], eax
	jmp	SHORT $L93809
$L93808:
	mov	DWORD PTR tv202[ebp], 0
$L93809:
	mov	ecx, DWORD PTR tv202[ebp]
	mov	DWORD PTR $T93806[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T93806[ebp]
	mov	DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A, edx ; pATextTypes

; 106  :    pATextTypes->Load();

	push	OFFSET FLAT:??_C@_0N@OFHDMKIP@TEXTTYPE?4LST?$AA@
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?Load@CATextTypeAry@@QAEHPAD@Z		; CATextTypeAry::Load

; 107  :    //AfxMessageBox("lists loaded");
; 108  : 
; 109  : 	// The one and only window has been initialized, so show and update it.
; 110  :    
; 111  : 
; 112  : 	return TRUE;

	mov	eax, 1

; 113  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$0:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 22					; 00000016H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93787[ebp]
	push	ecx
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$1:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 32					; 00000020H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93791[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$2:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93795[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 37					; 00000025H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93799[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$4:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 39					; 00000027H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93803[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__unwindfunclet$?InitInstance@CTBT32App@@UAEHXZ$5:
	mov	eax, DWORD PTR ?__LINE__Var@?1??InitInstance@CTBT32App@@UAEHXZ@4JA
	add	eax, 41					; 00000029H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T93807[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?InitInstance@CTBT32App@@UAEHXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?InitInstance@CTBT32App@@UAEHXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?InitInstance@CTBT32App@@UAEHXZ ENDP			; CTBT32App::InitInstance
PUBLIC	??0CAsFile@@QAE@XZ				; CAsFile::CAsFile
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:NEAR			; `eh vector constructor iterator'
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\fileary.hpp
xdata$x	SEGMENT
__unwindtable$??0CAsFileAry@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAsFileAry@@QAE@H@Z$0
__ehfuncinfo$??0CAsFileAry@@QAE@H@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CAsFileAry@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0CAsFileAry@@QAE@H@Z
_TEXT	SEGMENT
tv81 = -256						; size = 4
$T93828 = -248						; size = 4
$T93829 = -236						; size = 4
$T93830 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start_size$ = 8					; size = 4
??0CAsFileAry@@QAE@H@Z PROC NEAR			; CAsFileAry::CAsFileAry, COMDAT
; _this$ = ecx

; 31   :     CAsFileAry(int start_size=170) { _nElements = 0; _nAlloc = start_size; _iEle = 0; _array=new CAsFile[start_size]; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CAsFileAry@@QAE@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start_size$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _start_size$[ebp]
	mov	DWORD PTR $T93828[ebp], eax
	mov	ecx, DWORD PTR $T93828[ebp]
	imul	ecx, 156				; 0000009cH
	add	ecx, 4
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T93830[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T93830[ebp], 0
	je	SHORT $L93831
	mov	edx, DWORD PTR $T93830[ebp]
	mov	eax, DWORD PTR $T93828[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET FLAT:??1CAsFile@@QAE@XZ		; CAsFile::~CAsFile
	push	OFFSET FLAT:??0CAsFile@@QAE@XZ		; CAsFile::CAsFile
	mov	ecx, DWORD PTR $T93828[ebp]
	push	ecx
	push	156					; 0000009cH
	mov	edx, DWORD PTR $T93830[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T93830[ebp]
	add	eax, 4
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L93832
$L93831:
	mov	DWORD PTR tv81[ebp], 0
$L93832:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T93829[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T93829[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAsFileAry@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T93830[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0CAsFileAry@@QAE@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CAsFileAry@@QAE@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CAsFileAry@@QAE@H@Z ENDP				; CAsFileAry::CAsFileAry
EXTRN	_memset:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0CAsFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CAsFile@@QAE@XZ PROC NEAR				; CAsFile::CAsFile, COMDAT
; _this$ = ecx

; 15   : 		CAsFile() { memset(_descrip,0,75); memset(_name,0,25); memset(_symbols,0,9); memset(_dest,0,25);}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	75					; 0000004bH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	9
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 113				; 00000071H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAsFile@@QAE@XZ ENDP					; CAsFile::CAsFile
_TEXT	ENDS
PUBLIC	??0CSymbol@@QAE@XZ				; CSymbol::CSymbol
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\symbol.hpp
xdata$x	SEGMENT
__unwindtable$??0CSymbolAry@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSymbolAry@@QAE@H@Z$0
__ehfuncinfo$??0CSymbolAry@@QAE@H@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CSymbolAry@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0CSymbolAry@@QAE@H@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
$T93844 = -248						; size = 4
$T93845 = -236						; size = 4
$T93846 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
??0CSymbolAry@@QAE@H@Z PROC NEAR			; CSymbolAry::CSymbolAry, COMDAT
; _this$ = ecx

; 40   : 	CSymbolAry(int size=500)  { _nElements = 0; _nAlloc = size; _iEle = 0; _array = new CSymbol[size]; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CSymbolAry@@QAE@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR $T93844[ebp], eax
	mov	ecx, DWORD PTR $T93844[ebp]
	imul	ecx, 164				; 000000a4H
	add	ecx, 4
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T93846[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T93846[ebp], 0
	je	SHORT $L93847
	mov	edx, DWORD PTR $T93846[ebp]
	mov	eax, DWORD PTR $T93844[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET FLAT:??1CSymbol@@QAE@XZ		; CSymbol::~CSymbol
	push	OFFSET FLAT:??0CSymbol@@QAE@XZ		; CSymbol::CSymbol
	mov	ecx, DWORD PTR $T93844[ebp]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR $T93846[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T93846[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $L93848
$L93847:
	mov	DWORD PTR tv82[ebp], 0
$L93848:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T93845[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T93845[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSymbolAry@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T93846[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0CSymbolAry@@QAE@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CSymbolAry@@QAE@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CSymbolAry@@QAE@H@Z ENDP				; CSymbolAry::CSymbolAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0CSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CSymbol@@QAE@XZ PROC NEAR				; CSymbol::CSymbol, COMDAT
; _this$ = ecx

; 13   : 	CSymbol() {_position=0; _limit=1; _referenced=0; memset(_name,0,40); memset(_descrip,0,75); memset(_symtype,0,25); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CSymbol@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
	push	40					; 00000028H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	75					; 0000004bH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CSymbol@@QAE@XZ ENDP					; CSymbol::CSymbol
_TEXT	ENDS
PUBLIC	??0CRSymbol@@QAE@XZ				; CRSymbol::CRSymbol
PUBLIC	??1CSymbolAry@@QAE@XZ				; CSymbolAry::~CSymbolAry
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRSymbolAry@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRSymbolAry@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CRSymbolAry@@QAE@H@Z$1
__ehfuncinfo$??0CRSymbolAry@@QAE@H@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0CRSymbolAry@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0CRSymbolAry@@QAE@H@Z
_TEXT	SEGMENT
tv86 = -256						; size = 4
$T93860 = -248						; size = 4
$T93861 = -236						; size = 4
$T93862 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
??0CRSymbolAry@@QAE@H@Z PROC NEAR			; CRSymbolAry::CRSymbolAry, COMDAT
; _this$ = ecx

; 52   : 	CRSymbolAry(int size=200)  { _nElements = 0; _nAlloc = size; _iEle = 0; _array = new CRSymbol[size]; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRSymbolAry@@QAE@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	500					; 000001f4H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSymbolAry@@QAE@H@Z			; CSymbolAry::CSymbolAry
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR $T93860[ebp], eax
	mov	ecx, DWORD PTR $T93860[ebp]
	imul	ecx, 164				; 000000a4H
	add	ecx, 4
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T93862[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T93862[ebp], 0
	je	SHORT $L93863
	mov	edx, DWORD PTR $T93862[ebp]
	mov	eax, DWORD PTR $T93860[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET FLAT:??1CRSymbol@@QAE@XZ		; CRSymbol::~CRSymbol
	push	OFFSET FLAT:??0CRSymbol@@QAE@XZ		; CRSymbol::CRSymbol
	mov	ecx, DWORD PTR $T93860[ebp]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR $T93862[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T93862[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $L93864
$L93863:
	mov	DWORD PTR tv86[ebp], 0
$L93864:
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T93861[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T93861[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRSymbolAry@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CSymbolAry@@QAE@XZ			; CSymbolAry::~CSymbolAry
__unwindfunclet$??0CRSymbolAry@@QAE@H@Z$1:
	mov	eax, DWORD PTR $T93862[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0CRSymbolAry@@QAE@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CRSymbolAry@@QAE@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CRSymbolAry@@QAE@H@Z ENDP				; CRSymbolAry::CRSymbolAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0CRSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CRSymbol@@QAE@XZ PROC NEAR				; CRSymbol::CRSymbol, COMDAT
; _this$ = ecx

; 27   : 	CRSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSymbol@@QAE@XZ			; CSymbol::CSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRSymbol@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRSymbol@@QAE@XZ ENDP				; CRSymbol::CRSymbol
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1CSymbolAry@@QAE@XZ
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T93878 = -224						; size = 4
$T93879 = -212						; size = 4
_this$ = -8						; size = 4
??1CSymbolAry@@QAE@XZ PROC NEAR				; CSymbolAry::~CSymbolAry, COMDAT
; _this$ = ecx

; 41   :     ~CSymbolAry() { delete[] _array; _array = NULL; }

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T93879[ebp], ecx
	mov	edx, DWORD PTR $T93879[ebp]
	mov	DWORD PTR $T93878[ebp], edx
	cmp	DWORD PTR $T93878[ebp], 0
	je	SHORT $L93880
	push	3
	mov	ecx, DWORD PTR $T93878[ebp]
	call	??_ECSymbol@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L93881
$L93880:
	mov	DWORD PTR tv69[ebp], 0
$L93881:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSymbolAry@@QAE@XZ ENDP				; CSymbolAry::~CSymbolAry
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Load@CRSymbolAry@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?Load@CRSymbolAry@@QAEHPAD@Z PROC NEAR			; CRSymbolAry::Load, COMDAT
; _this$ = ecx

; 56   :     int Load( char *name="REPORT.SYM" ) { return CSymbolAry::Load(name); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Load@CSymbolAry@@QAEHPAD@Z		; CSymbolAry::Load
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Load@CRSymbolAry@@QAEHPAD@Z ENDP			; CRSymbolAry::Load
_TEXT	ENDS
EXTRN	??0CStringArray@@QAE@XZ:NEAR			; CStringArray::CStringArray
EXTRN	?SetSize@CStringArray@@QAEXHH@Z:NEAR		; CStringArray::SetSize
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\strtransform.h
xdata$x	SEGMENT
__unwindtable$??0CStrTransform@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CStrTransform@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CStrTransform@@QAE@H@Z$1
__ehfuncinfo$??0CStrTransform@@QAE@H@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0CStrTransform@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0CStrTransform@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_sz$ = 8						; size = 4
??0CStrTransform@@QAE@H@Z PROC NEAR			; CStrTransform::CStrTransform, COMDAT
; _this$ = ecx

; 19   :    CStrTransform(int sz=62) { size=sz; Symbols.SetSize(size); Replacements.SetSize(size); } 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CStrTransform@@QAE@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sz$[ebp]
	mov	DWORD PTR [eax+40], ecx
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CStrTransform@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__unwindfunclet$??0CStrTransform@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__ehhandler$??0CStrTransform@@QAE@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CStrTransform@@QAE@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CStrTransform@@QAE@H@Z ENDP				; CStrTransform::CStrTransform
PUBLIC	??0CATextType@@QAE@XZ				; CATextType::CATextType
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\texttypeary.hpp
xdata$x	SEGMENT
__unwindtable$??0CATextTypeAry@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CATextTypeAry@@QAE@H@Z$0
__ehfuncinfo$??0CATextTypeAry@@QAE@H@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0CATextTypeAry@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0CATextTypeAry@@QAE@H@Z
_TEXT	SEGMENT
tv81 = -256						; size = 4
$T93896 = -248						; size = 4
$T93897 = -236						; size = 4
$T93898 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start_size$ = 8					; size = 4
??0CATextTypeAry@@QAE@H@Z PROC NEAR			; CATextTypeAry::CATextTypeAry, COMDAT
; _this$ = ecx

; 31   :     CATextTypeAry(int start_size=220) { _nElements = 0; _nAlloc = start_size; _iEle = 0; _array=new CATextType[start_size]; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CATextTypeAry@@QAE@H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start_size$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _start_size$[ebp]
	mov	DWORD PTR $T93896[ebp], eax
	mov	ecx, DWORD PTR $T93896[ebp]
	imul	ecx, 160				; 000000a0H
	add	ecx, 4
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T93898[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T93898[ebp], 0
	je	SHORT $L93899
	mov	edx, DWORD PTR $T93898[ebp]
	mov	eax, DWORD PTR $T93896[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	push	OFFSET FLAT:??0CATextType@@QAE@XZ	; CATextType::CATextType
	mov	ecx, DWORD PTR $T93896[ebp]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR $T93898[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T93898[ebp]
	add	eax, 4
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L93900
$L93899:
	mov	DWORD PTR tv81[ebp], 0
$L93900:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T93897[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T93897[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CATextTypeAry@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T93898[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0CATextTypeAry@@QAE@H@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CATextTypeAry@@QAE@H@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0CATextTypeAry@@QAE@H@Z ENDP				; CATextTypeAry::CATextTypeAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CATextType@@QAE@XZ PROC NEAR				; CATextType::CATextType, COMDAT
; _this$ = ecx

; 15   : 	CATextType() { memset(_descrip,0,75); memset(_symtypes,0,50); memset(_dest,0,25);}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	75					; 0000004bH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	50					; 00000032H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 129				; 00000081H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CATextType@@QAE@XZ ENDP				; CATextType::CATextType
_TEXT	ENDS
PUBLIC	??0CAboutDlg@@QAE@XZ				; CAboutDlg::CAboutDlg
PUBLIC	?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z ; CAboutDlg::DoDataExchange
PUBLIC	?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ	; CAboutDlg::GetMessageMap
PUBLIC	??_7CAboutDlg@@6B@				; CAboutDlg::`vftable'
PUBLIC	??_GCAboutDlg@@UAEPAXI@Z			; CAboutDlg::`scalar deleting destructor'
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	??_ECAboutDlg@@UAEPAXI@Z:NEAR			; CAboutDlg::`vector deleting destructor'
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:NEAR	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:NEAR		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:NEAR		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:NEAR	; CDialog::OnSetFont
EXTRN	?OnOK@CDialog@@MAEXXZ:NEAR			; CDialog::OnOK
EXTRN	?OnCancel@CDialog@@MAEXXZ:NEAR			; CDialog::OnCancel
EXTRN	?AssertValid@CDialog@@UBEXXZ:NEAR		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:NEAR	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:NEAR ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:NEAR		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CDialog::SetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:NEAR		; CDialog::PreInitDialog
;	COMDAT ??_7CAboutDlg@@6B@
; File c:\astrow32dev\tbt32\tbt32.cpp
CONST	SEGMENT
??_7CAboutDlg@@6B@ DD FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ ; CAboutDlg::`vftable'
	DD	FLAT:??_ECAboutDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CAboutDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CAboutDlg@@QAE@XZ PROC NEAR				; CAboutDlg::CAboutDlg, COMDAT
; _this$ = ecx

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	100					; 00000064H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDialog@@QAE@IPAVCWnd@@@Z		; CDialog::CDialog
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CAboutDlg@@6B@

; 151  : 	//{{AFX_DATA_INIT(CAboutDlg)
; 152  : 	//}}AFX_DATA_INIT
; 153  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAboutDlg@@QAE@XZ ENDP				; CAboutDlg::CAboutDlg
_TEXT	ENDS
PUBLIC	??1CAboutDlg@@UAE@XZ				; CAboutDlg::~CAboutDlg
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCAboutDlg@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCAboutDlg@@UAEPAXI@Z PROC NEAR			; CAboutDlg::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAboutDlg@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93633
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L93633:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCAboutDlg@@UAEPAXI@Z ENDP				; CAboutDlg::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CAboutDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CAboutDlg@@UAE@XZ PROC NEAR				; CAboutDlg::~CAboutDlg, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAboutDlg@@UAE@XZ ENDP				; CAboutDlg::~CAboutDlg
_TEXT	ENDS
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CAboutDlg::DoDataExchange, COMDAT
; _this$ = ecx

; 156  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 	CDialog::DoDataExchange(pDX);

	mov	eax, DWORD PTR _pDX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 158  : 	//{{AFX_DATA_MAP(CAboutDlg)
; 159  : 	//}}AFX_DATA_MAP
; 160  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DoDataExchange@CAboutDlg@@MAEXPAVCDataExchange@@@Z ENDP ; CAboutDlg::DoDataExchange
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CAboutDlg::GetMessageMap, COMDAT
; _this$ = ecx

; 162  : BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CAboutDlg@@1UAFX_MSGMAP@@B ; CAboutDlg::messageMap
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CAboutDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CAboutDlg::GetMessageMap
_TEXT	ENDS
EXTRN	@_RTC_CheckStackVars@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnAppAbout@CTBT32App@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnAppAbout@CTBT32App@@QAEXXZ$0
__ehfuncinfo$?OnAppAbout@CTBT32App@@QAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnAppAbout@CTBT32App@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnAppAbout@CTBT32App@@QAEXXZ
_TEXT	SEGMENT
_aboutDlg$ = -140					; size = 112
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnAppAbout@CTBT32App@@QAEXXZ PROC NEAR			; CTBT32App::OnAppAbout, COMDAT
; _this$ = ecx

; 170  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnAppAbout@CTBT32App@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 	CAboutDlg aboutDlg;

	lea	ecx, DWORD PTR _aboutDlg$[ebp]
	call	??0CAboutDlg@@QAE@XZ			; CAboutDlg::CAboutDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 172  : 	aboutDlg.DoModal();

	lea	ecx, DWORD PTR _aboutDlg$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 173  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _aboutDlg$[ebp]
	call	??1CAboutDlg@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93930
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L93930:
	DD	1
	DD	$L93929
$L93929:
	DD	-140					; ffffff74H
	DD	112					; 00000070H
	DD	$L93927
$L93927:
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnAppAbout@CTBT32App@@QAEXXZ$0:
	lea	ecx, DWORD PTR _aboutDlg$[ebp]
	jmp	??1CAboutDlg@@UAE@XZ
__ehhandler$?OnAppAbout@CTBT32App@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnAppAbout@CTBT32App@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnAppAbout@CTBT32App@@QAEXXZ ENDP			; CTBT32App::OnAppAbout
PUBLIC	??_GCSymbolAry@@QAEPAXI@Z			; CSymbolAry::`scalar deleting destructor'
PUBLIC	??_GCRSymbolAry@@QAEPAXI@Z			; CRSymbolAry::`scalar deleting destructor'
PUBLIC	??_GCStrTransform@@QAEPAXI@Z			; CStrTransform::`scalar deleting destructor'
PUBLIC	??_GCATextTypeAry@@QAEPAXI@Z			; CATextTypeAry::`scalar deleting destructor'
PUBLIC	??_GCAsFileAry@@QAEPAXI@Z			; CAsFileAry::`scalar deleting destructor'
EXTRN	?ExitInstance@CWinApp@@UAEHXZ:NEAR		; CWinApp::ExitInstance
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ExitInstance@CTBT32App@@UAEHXZ
_TEXT	SEGMENT
tv88 = -328						; size = 4
tv83 = -328						; size = 4
tv78 = -328						; size = 4
tv73 = -328						; size = 4
tv68 = -328						; size = 4
$T93937 = -320						; size = 4
$T93938 = -308						; size = 4
$T93941 = -296						; size = 4
$T93942 = -284						; size = 4
$T93945 = -272						; size = 4
$T93946 = -260						; size = 4
$T93949 = -248						; size = 4
$T93950 = -236						; size = 4
$T93953 = -224						; size = 4
$T93954 = -212						; size = 4
_this$ = -8						; size = 4
?ExitInstance@CTBT32App@@UAEHXZ PROC NEAR		; CTBT32App::ExitInstance, COMDAT
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 	// TODO: Add your specialized code here and/or call the base class
; 182  :    delete pFileList;

	mov	eax, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	mov	DWORD PTR $T93938[ebp], eax
	mov	ecx, DWORD PTR $T93938[ebp]
	mov	DWORD PTR $T93937[ebp], ecx
	cmp	DWORD PTR $T93937[ebp], 0
	je	SHORT $L93939
	push	1
	mov	ecx, DWORD PTR $T93937[ebp]
	call	??_GCAsFileAry@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $L93940
$L93939:
	mov	DWORD PTR tv68[ebp], 0
$L93940:

; 183  :    delete pTransformers;

	mov	eax, DWORD PTR ?pTransformers@@3PAVCStrTransform@@A ; pTransformers
	mov	DWORD PTR $T93942[ebp], eax
	mov	ecx, DWORD PTR $T93942[ebp]
	mov	DWORD PTR $T93941[ebp], ecx
	cmp	DWORD PTR $T93941[ebp], 0
	je	SHORT $L93943
	push	1
	mov	ecx, DWORD PTR $T93941[ebp]
	call	??_GCStrTransform@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $L93944
$L93943:
	mov	DWORD PTR tv73[ebp], 0
$L93944:

; 184  :    delete pRegSymbols;

	mov	eax, DWORD PTR ?pRegSymbols@@3PAVCSymbolAry@@A ; pRegSymbols
	mov	DWORD PTR $T93946[ebp], eax
	mov	ecx, DWORD PTR $T93946[ebp]
	mov	DWORD PTR $T93945[ebp], ecx
	cmp	DWORD PTR $T93945[ebp], 0
	je	SHORT $L93947
	push	1
	mov	ecx, DWORD PTR $T93945[ebp]
	call	??_GCSymbolAry@@QAEPAXI@Z
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $L93948
$L93947:
	mov	DWORD PTR tv78[ebp], 0
$L93948:

; 185  :    delete pRepSymbols;

	mov	eax, DWORD PTR ?pRepSymbols@@3PAVCRSymbolAry@@A ; pRepSymbols
	mov	DWORD PTR $T93950[ebp], eax
	mov	ecx, DWORD PTR $T93950[ebp]
	mov	DWORD PTR $T93949[ebp], ecx
	cmp	DWORD PTR $T93949[ebp], 0
	je	SHORT $L93951
	push	1
	mov	ecx, DWORD PTR $T93949[ebp]
	call	??_GCRSymbolAry@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $L93952
$L93951:
	mov	DWORD PTR tv83[ebp], 0
$L93952:

; 186  :    delete pATextTypes;

	mov	eax, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	mov	DWORD PTR $T93954[ebp], eax
	mov	ecx, DWORD PTR $T93954[ebp]
	mov	DWORD PTR $T93953[ebp], ecx
	cmp	DWORD PTR $T93953[ebp], 0
	je	SHORT $L93955
	push	1
	mov	ecx, DWORD PTR $T93953[ebp]
	call	??_GCATextTypeAry@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $L93956
$L93955:
	mov	DWORD PTR tv88[ebp], 0
$L93956:

; 187  : #ifdef _UNICODE
; 188  :    if (pExportedRept != NULL )
; 189  : 	   delete pExportedRept;
; 190  :    if (pExportedReg != NULL )
; 191  : 	   delete pExportedReg;
; 192  :    if ( pExportedAsp != NULL )
; 193  : 	   delete pExportedAsp;
; 194  :    if ( pExportedHlp != NULL )
; 195  : 	   delete pExportedHlp;
; 196  : #endif 
; 197  :    
; 198  :    return CWinApp::ExitInstance();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExitInstance@CWinApp@@UAEHXZ		; CWinApp::ExitInstance

; 199  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ExitInstance@CTBT32App@@UAEHXZ ENDP			; CTBT32App::ExitInstance
_TEXT	ENDS
PUBLIC	??1CAsFileAry@@QAE@XZ				; CAsFileAry::~CAsFileAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCAsFileAry@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCAsFileAry@@QAEPAXI@Z PROC NEAR			; CAsFileAry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAsFileAry@@QAE@XZ			; CAsFileAry::~CAsFileAry
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93668
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93668:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCAsFileAry@@QAEPAXI@Z ENDP				; CAsFileAry::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
_TEXT	ENDS
;	COMDAT ??1CAsFileAry@@QAE@XZ
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T93961 = -224						; size = 4
$T93962 = -212						; size = 4
_this$ = -8						; size = 4
??1CAsFileAry@@QAE@XZ PROC NEAR				; CAsFileAry::~CAsFileAry, COMDAT
; _this$ = ecx

; 32   :     ~CAsFileAry() { delete [] _array; _array = NULL; }

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T93962[ebp], ecx
	mov	edx, DWORD PTR $T93962[ebp]
	mov	DWORD PTR $T93961[ebp], edx
	cmp	DWORD PTR $T93961[ebp], 0
	je	SHORT $L93963
	push	3
	mov	ecx, DWORD PTR $T93961[ebp]
	call	??_ECAsFile@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L93964
$L93963:
	mov	DWORD PTR tv69[ebp], 0
$L93964:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAsFileAry@@QAE@XZ ENDP				; CAsFileAry::~CAsFileAry
_TEXT	ENDS
PUBLIC	??1CStrTransform@@QAE@XZ			; CStrTransform::~CStrTransform
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCStrTransform@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCStrTransform@@QAEPAXI@Z PROC NEAR			; CStrTransform::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CStrTransform@@QAE@XZ		; CStrTransform::~CStrTransform
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93671
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93671:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCStrTransform@@QAEPAXI@Z ENDP			; CStrTransform::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?RemoveAll@CStringArray@@QAEXXZ:NEAR		; CStringArray::RemoveAll
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\strtransform.h
xdata$x	SEGMENT
__unwindtable$??1CStrTransform@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CStrTransform@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CStrTransform@@QAE@XZ$1
__ehfuncinfo$??1CStrTransform@@QAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1CStrTransform@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CStrTransform@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CStrTransform@@QAE@XZ PROC NEAR			; CStrTransform::~CStrTransform, COMDAT
; _this$ = ecx

; 23   :     ~CStrTransform() { Symbols.RemoveAll(); Replacements.RemoveAll(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CStrTransform@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@CStringArray@@QAEXXZ		; CStringArray::RemoveAll
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?RemoveAll@CStringArray@@QAEXXZ		; CStringArray::RemoveAll
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CStrTransform@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__unwindfunclet$??1CStrTransform@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__ehhandler$??1CStrTransform@@QAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CStrTransform@@QAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CStrTransform@@QAE@XZ ENDP				; CStrTransform::~CStrTransform
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCSymbolAry@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCSymbolAry@@QAEPAXI@Z PROC NEAR			; CSymbolAry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbolAry@@QAE@XZ			; CSymbolAry::~CSymbolAry
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93674
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93674:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCSymbolAry@@QAEPAXI@Z ENDP				; CSymbolAry::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CRSymbolAry@@QAE@XZ				; CRSymbolAry::~CRSymbolAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCRSymbolAry@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCRSymbolAry@@QAEPAXI@Z PROC NEAR			; CRSymbolAry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRSymbolAry@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93677
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93677:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRSymbolAry@@QAEPAXI@Z ENDP				; CRSymbolAry::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CATextTypeAry@@QAE@XZ			; CATextTypeAry::~CATextTypeAry
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCATextTypeAry@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCATextTypeAry@@QAEPAXI@Z PROC NEAR			; CATextTypeAry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextTypeAry@@QAE@XZ		; CATextTypeAry::~CATextTypeAry
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93680
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93680:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCATextTypeAry@@QAEPAXI@Z ENDP			; CATextTypeAry::`scalar deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextTypeAry@@QAE@XZ
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T93985 = -224						; size = 4
$T93986 = -212						; size = 4
_this$ = -8						; size = 4
??1CATextTypeAry@@QAE@XZ PROC NEAR			; CATextTypeAry::~CATextTypeAry, COMDAT
; _this$ = ecx

; 32   :     ~CATextTypeAry() { delete [] _array; _array = NULL; }

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T93986[ebp], ecx
	mov	edx, DWORD PTR $T93986[ebp]
	mov	DWORD PTR $T93985[ebp], edx
	cmp	DWORD PTR $T93985[ebp], 0
	je	SHORT $L93987
	push	3
	mov	ecx, DWORD PTR $T93985[ebp]
	call	??_ECATextType@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L93988
$L93987:
	mov	DWORD PTR tv69[ebp], 0
$L93988:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextTypeAry@@QAE@XZ ENDP				; CATextTypeAry::~CATextTypeAry
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1CRSymbolAry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRSymbolAry@@QAE@XZ PROC NEAR			; CRSymbolAry::~CRSymbolAry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbolAry@@QAE@XZ			; CSymbolAry::~CSymbolAry
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRSymbolAry@@QAE@XZ ENDP				; CRSymbolAry::~CRSymbolAry
_TEXT	ENDS
EXTRN	_atexit:NEAR
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\tbt32.cpp
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 58   : CTBT32App theApp;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET FLAT:?theApp@@3VCTBT32App@@A
	call	??0CTBT32App@@QAE@XZ			; CTBT32App::CTBT32App
	push	OFFSET FLAT:_$E2
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_$E1	ENDP
; Function compile flags: /Odt /RTCcsu /ZI
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET FLAT:?theApp@@3VCTBT32App@@A
	call	??1CTBT32App@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_$E2	ENDP
text$yd	ENDS
PUBLIC	?theApp@@3VCTBT32App@@A				; theApp
_BSS	SEGMENT
?theApp@@3VCTBT32App@@A DB 0a0H DUP (?)			; theApp
_BSS	ENDS
END
