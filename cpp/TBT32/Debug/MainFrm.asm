; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\MainFrm.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0L@GOKPKJAL@CMainFrame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DM@CMPGIJJA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAi?$AAe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DK@OHFKBHJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAa@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CAsFile@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dest@CAsFile@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toTextType@CAsFileAry@@QAEPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSymbolAry@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSymbolAry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTextBlock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTextBlock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECTextBlock@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCtrl@RTFFuncs@@AAEPAVCRichEditCtrl@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1RTFFuncs@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRTFFuncs@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportHelp@@QAE@PAVCProgress@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportHelp@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportHelp@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDHelpTxt@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportRegText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportRegText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDregText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportAspText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportAspText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDAspectText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ImportReportText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GImportReportText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CWSpell@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTextType@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSymTypes@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CMainFrame@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSelectTextItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAspTextEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportahelpfile@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CProgress@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportaspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileSelector@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnImportImportreporttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRegulartxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegTextEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnHelptxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOptionsSetup@CMainFrame@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSetup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnArraytext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAddlanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetLanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CMainFrame@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clsid@?1??GetClsid@CTabctrlctrl1@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CWSpell@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportReportText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportAspText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportRegText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ImportHelp@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7RTFFuncs@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSymbol@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0L@GOKPKJAL@CMainFrame?$AA@		; `string'
PUBLIC	?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B	; CMainFrame::classCMainFrame
PUBLIC	?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z ; CMainFrame::OnCreate
PUBLIC	?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z		; CMainFrame::OnSetFocus
PUBLIC	?OnAspecttext@CMainFrame@@IAEXXZ		; CMainFrame::OnAspecttext
PUBLIC	?OnImportImportahelpfile@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportahelpfile
PUBLIC	?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportahelpfile
PUBLIC	?OnImportImportaspecttext@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportaspecttext
PUBLIC	?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportaspecttext
PUBLIC	?OnImportImportplanethousetext@CMainFrame@@IAEXXZ ; CMainFrame::OnImportImportplanethousetext
PUBLIC	?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportplanethousetext
PUBLIC	?OnImportImportreporttext@CMainFrame@@IAEXXZ	; CMainFrame::OnImportImportreporttext
PUBLIC	?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateImportImportreporttext
PUBLIC	?OnRegulartxt@CMainFrame@@IAEXXZ		; CMainFrame::OnRegulartxt
PUBLIC	?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateRegulartxt
PUBLIC	?OnHelptxt@CMainFrame@@IAEXXZ			; CMainFrame::OnHelptxt
PUBLIC	?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z	; CMainFrame::OnUpdateHelptxt
PUBLIC	?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ ; CMainFrame::OnEdittextsourcesReporttextsources
PUBLIC	?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateEdittextsourcesReporttextsources
PUBLIC	?OnOptionsSetup@CMainFrame@@IAEXXZ		; CMainFrame::OnOptionsSetup
PUBLIC	?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateOptionsSetup
PUBLIC	?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B ; CMainFrame::_messageEntries
PUBLIC	?messageMap@CMainFrame@@1UAFX_MSGMAP@@B		; CMainFrame::messageMap
PUBLIC	?OnArraytext@CMainFrame@@QAEXXZ			; CMainFrame::OnArraytext
PUBLIC	?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateArraytext
PUBLIC	?OnAddlanguage@CMainFrame@@QAEXXZ		; CMainFrame::OnAddlanguage
PUBLIC	?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateAddlanguage
PUBLIC	?OnSetLanguage@CMainFrame@@QAEXXZ		; CMainFrame::OnSetLanguage
PUBLIC	?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateSetLanguage
EXTRN	?classCFrameWnd@CFrameWnd@@2UCRuntimeClass@@B:BYTE ; CFrameWnd::classCFrameWnd
EXTRN	?messageMap@CFrameWnd@@1UAFX_MSGMAP@@B:QWORD	; CFrameWnd::messageMap
_DATA	SEGMENT
_THIS_FILE DB	'c:\astrow32dev\tbt32\mainfrm.cpp', 00H
_DATA	ENDS
;	COMDAT ??_C@_0L@GOKPKJAL@CMainFrame?$AA@
CONST	SEGMENT
??_C@_0L@GOKPKJAL@CMainFrame?$AA@ DB 'CMainFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B DD FLAT:??_C@_0L@GOKPKJAL@CMainFrame?$AA@ ; CMainFrame::classCMainFrame
	DD	01b4H
	DD	0ffffH
	DD	00H
	DD	FLAT:?classCFrameWnd@CFrameWnd@@2UCRuntimeClass@@B
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CMainFrame::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z
	DD	07H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	FLAT:?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
	DD	0111H
	DD	00H
	DD	08005H
	DD	08005H
	DD	035H
	DD	FLAT:?OnAspecttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08008H
	DD	08008H
	DD	035H
	DD	FLAT:?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08008H
	DD	08008H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08007H
	DD	08007H
	DD	035H
	DD	FLAT:?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08007H
	DD	08007H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08006H
	DD	08006H
	DD	035H
	DD	FLAT:?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08006H
	DD	08006H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08009H
	DD	08009H
	DD	035H
	DD	FLAT:?OnImportImportreporttext@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08009H
	DD	08009H
	DD	03dH
	DD	FLAT:?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08003H
	DD	08003H
	DD	035H
	DD	FLAT:?OnRegulartxt@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08003H
	DD	08003H
	DD	03dH
	DD	FLAT:?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800eH
	DD	0800eH
	DD	035H
	DD	FLAT:?OnHelptxt@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800eH
	DD	0800eH
	DD	03dH
	DD	FLAT:?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800fH
	DD	0800fH
	DD	035H
	DD	FLAT:?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800fH
	DD	0800fH
	DD	03dH
	DD	FLAT:?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08011H
	DD	08011H
	DD	035H
	DD	FLAT:?OnOptionsSetup@CMainFrame@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08011H
	DD	08011H
	DD	03dH
	DD	FLAT:?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08019H
	DD	08019H
	DD	035H
	DD	FLAT:?OnArraytext@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08019H
	DD	08019H
	DD	03dH
	DD	FLAT:?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801cH
	DD	0801cH
	DD	035H
	DD	FLAT:?OnAddlanguage@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801cH
	DD	0801cH
	DD	03dH
	DD	FLAT:?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0801bH
	DD	0801bH
	DD	035H
	DD	FLAT:?OnSetLanguage@CMainFrame@@QAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0801bH
	DD	0801bH
	DD	03dH
	DD	FLAT:?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CMainFrame@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CMainFrame@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CFrameWnd@@1UAFX_MSGMAP@@B ; CMainFrame::messageMap
	DD	FLAT:?_messageEntries@CMainFrame@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
_DATA	SEGMENT
	ORG $+3
_indicators DD	00H
	DD	0e701H
	DD	0e702H
	DD	0e703H
_DATA	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	??1CAsFile@@QAE@XZ				; CAsFile::~CAsFile
PUBLIC	??_ECAsFile@@QAEPAXI@Z				; CAsFile::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCcsu /ZI
rtc$TMZ	ENDS
;	COMDAT ??_ECAsFile@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECAsFile@@QAEPAXI@Z PROC NEAR			; CAsFile::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93119
	push	OFFSET FLAT:??1CAsFile@@QAE@XZ		; CAsFile::~CAsFile
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	156					; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93120
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93120:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93118
$L93119:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAsFile@@QAE@XZ			; CAsFile::~CAsFile
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93122
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93122:
	mov	eax, DWORD PTR _this$[ebp]
$L93118:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECAsFile@@QAEPAXI@Z ENDP				; CAsFile::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
_TEXT	ENDS
;	COMDAT ??1CAsFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CAsFile@@QAE@XZ PROC NEAR				; CAsFile::~CAsFile, COMDAT
; _this$ = ecx

; 16   :     ~CAsFile() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAsFile@@QAE@XZ ENDP					; CAsFile::~CAsFile
_TEXT	ENDS
PUBLIC	??1CSymbol@@QAE@XZ				; CSymbol::~CSymbol
PUBLIC	??_ECSymbol@@QAEPAXI@Z				; CSymbol::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECSymbol@@QAEPAXI@Z PROC NEAR			; CSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93249
	push	OFFSET FLAT:??1CSymbol@@QAE@XZ		; CSymbol::~CSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93250
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93250:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93248
$L93249:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93252
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93252:
	mov	eax, DWORD PTR _this$[ebp]
$L93248:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECSymbol@@QAEPAXI@Z ENDP				; CSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSymbol@@6B@				; CSymbol::`vftable'
EXTRN	?Read@CSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CSymbol::Read
;	COMDAT ??_7CSymbol@@6B@
; File c:\astrow32dev\tbt32\symbol.hpp
CONST	SEGMENT
??_7CSymbol@@6B@ DD FLAT:?Read@CSymbol@@UAEHPAU_iobuf@@@Z ; CSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSymbol@@QAE@XZ PROC NEAR				; CSymbol::~CSymbol, COMDAT
; _this$ = ecx

; 14   : 	~CSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CSymbol@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSymbol@@QAE@XZ ENDP					; CSymbol::~CSymbol
_TEXT	ENDS
PUBLIC	??_ECRSymbol@@QAEPAXI@Z				; CRSymbol::`vector deleting destructor'
PUBLIC	??1CRSymbol@@QAE@XZ				; CRSymbol::~CRSymbol
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECRSymbol@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECRSymbol@@QAEPAXI@Z PROC NEAR			; CRSymbol::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93300
	push	OFFSET FLAT:??1CRSymbol@@QAE@XZ		; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	164					; 000000a4H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93301
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93301:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93299
$L93300:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRSymbol@@QAE@XZ			; CRSymbol::~CRSymbol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93303
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93303:
	mov	eax, DWORD PTR _this$[ebp]
$L93299:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECRSymbol@@QAEPAXI@Z ENDP				; CRSymbol::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CRSymbol@@6B@				; CRSymbol::`vftable'
EXTRN	?Read@CRSymbol@@UAEHPAU_iobuf@@@Z:NEAR		; CRSymbol::Read
;	COMDAT ??_7CRSymbol@@6B@
CONST	SEGMENT
??_7CRSymbol@@6B@ DD FLAT:?Read@CRSymbol@@UAEHPAU_iobuf@@@Z ; CRSymbol::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??1CRSymbol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRSymbol@@QAE@XZ PROC NEAR				; CRSymbol::~CRSymbol, COMDAT
; _this$ = ecx

; 28   : 	~CRSymbol() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CRSymbol@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSymbol@@QAE@XZ			; CSymbol::~CSymbol
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRSymbol@@QAE@XZ ENDP				; CRSymbol::~CRSymbol
_TEXT	ENDS
PUBLIC	??1CTextBlock@@QAE@XZ				; CTextBlock::~CTextBlock
PUBLIC	??_ECTextBlock@@QAEPAXI@Z			; CTextBlock::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECTextBlock@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECTextBlock@@QAEPAXI@Z PROC NEAR			; CTextBlock::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93459
	push	OFFSET FLAT:??1CTextBlock@@QAE@XZ	; CTextBlock::~CTextBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	144					; 00000090H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93460
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93460:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93458
$L93459:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTextBlock@@QAE@XZ			; CTextBlock::~CTextBlock
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93462
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93462:
	mov	eax, DWORD PTR _this$[ebp]
$L93458:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECTextBlock@@QAEPAXI@Z ENDP				; CTextBlock::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\textbloc.hpp
;	COMDAT ??1CTextBlock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTextBlock@@QAE@XZ PROC NEAR				; CTextBlock::~CTextBlock, COMDAT
; _this$ = ecx

; 9    :    ~CTextBlock() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTextBlock@@QAE@XZ ENDP				; CTextBlock::~CTextBlock
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetVersionExW@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -296				; size = 4
_ver$ = -284						; size = 276
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 276		; 00000114H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L24087
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L24087

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L24088
$L24087:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24088:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	eax, DWORD PTR _pfnGetThreadACP$[ebp]
	push	eax
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95464
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95464:
	DD	1
	DD	$L95463
$L95463:
	DD	-284					; fffffee4H
	DD	276					; 00000114H
	DD	$L95460
$L95460:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24075 = -52					; size = 4
_szACP$ = -40						; size = 7
_lcidThread$ = -24					; size = 4
_nACP$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L24074

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	eax, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$24075[ebp], eax
$L24077:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L24074

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	eax, DWORD PTR _nACP$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], eax

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$24075[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$24075[ebp], ecx

; 117  : 		}

	jmp	SHORT $L24077
$L24074:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L24079

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L24079:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95475
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95475:
	DD	1
	DD	$L95474
$L95474:
	DD	-40					; ffffffd8H
	DD	7
	DD	$L95472
$L95472:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??1CATextType@@QAE@XZ				; CATextType::~CATextType
PUBLIC	??_ECATextType@@QAEPAXI@Z			; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECATextType@@QAEPAXI@Z PROC NEAR			; CATextType::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93608
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93609
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93609:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93607
$L93608:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93611
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93611:
	mov	eax, DWORD PTR _this$[ebp]
$L93607:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECATextType@@QAEPAXI@Z ENDP				; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CATextType@@QAE@XZ PROC NEAR				; CATextType::~CATextType, COMDAT
; _this$ = ecx

; 16   :     ~CATextType() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextType@@QAE@XZ ENDP				; CATextType::~CATextType
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ; CMainFrame::GetRuntimeClass
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CMainFrame::GetRuntimeClass, COMDAT
; _this$ = ecx

; 43   : IMPLEMENT_DYNAMIC(CMainFrame, CFrameWnd)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?classCMainFrame@CMainFrame@@2UCRuntimeClass@@B ; CMainFrame::classCMainFrame
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ENDP ; CMainFrame::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ	; CMainFrame::GetMessageMap
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainFrame::GetMessageMap, COMDAT
; _this$ = ecx

; 45   : BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CMainFrame@@1UAFX_MSGMAP@@B ; CMainFrame::messageMap
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMainFrame::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CMainFrame@@QAE@XZ				; CMainFrame::CMainFrame
PUBLIC	?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z ; CMainFrame::PreCreateWindow
PUBLIC	?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ; CMainFrame::OnCmdMsg
PUBLIC	?AssertValid@CMainFrame@@UBEXXZ			; CMainFrame::AssertValid
PUBLIC	?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z	; CMainFrame::Dump
PUBLIC	??_7CMainFrame@@6B@				; CMainFrame::`vftable'
PUBLIC	??_GCMainFrame@@UAEPAXI@Z			; CMainFrame::`scalar deleting destructor'
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpW@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpW
EXTRN	?HtmlHelpW@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpW
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CChildView@@QAE@XZ:NEAR			; CChildView::CChildView
EXTRN	??0CFrameWnd@@QAE@XZ:NEAR			; CFrameWnd::CFrameWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CFrameWnd@@UAEHPBG0KABUtagRECT@@PAVCWnd@@0KPAUCCreateContext@@@Z:NEAR ; CFrameWnd::Create
EXTRN	?LoadFrame@CFrameWnd@@UAEHIKPAVCWnd@@PAUCCreateContext@@@Z:NEAR ; CFrameWnd::LoadFrame
EXTRN	?GetActiveDocument@CFrameWnd@@UAEPAVCDocument@@XZ:NEAR ; CFrameWnd::GetActiveDocument
EXTRN	?Create@CWnd@@UAEHPBG0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?GetActiveFrame@CFrameWnd@@UAEPAV1@XZ:NEAR	; CFrameWnd::GetActiveFrame
EXTRN	?GetMessageString@CFrameWnd@@UBEXIAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:NEAR ; CFrameWnd::GetMessageString
EXTRN	?RecalcLayout@CFrameWnd@@UAEXH@Z:NEAR		; CFrameWnd::RecalcLayout
EXTRN	?ActivateFrame@CFrameWnd@@UAEXH@Z:NEAR		; CFrameWnd::ActivateFrame
EXTRN	?CreateEx@CWnd@@UAEHKPBG0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	??0CStatusBar@@QAE@XZ:NEAR			; CStatusBar::CStatusBar
EXTRN	?CreateEx@CWnd@@UAEHKPBG0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?BeginModalState@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::BeginModalState
EXTRN	?EndModalState@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::EndModalState
EXTRN	?OnSetPreviewMode@CFrameWnd@@UAEXHPAUCPrintPreviewState@@@Z:NEAR ; CFrameWnd::OnSetPreviewMode
EXTRN	?GetMessageBar@CFrameWnd@@UAEPAVCWnd@@XZ:NEAR	; CFrameWnd::GetMessageBar
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?NegotiateBorderSpace@CFrameWnd@@UAEHIPAUtagRECT@@@Z:NEAR ; CFrameWnd::NegotiateBorderSpace
EXTRN	??_ECMainFrame@@UAEPAXI@Z:NEAR			; CMainFrame::`vector deleting destructor'
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?OnCreateClient@CFrameWnd@@MAEHPAUtagCREATESTRUCTW@@PAUCCreateContext@@@Z:NEAR ; CFrameWnd::OnCreateClient
EXTRN	??1CFrameWnd@@UAE@XZ:NEAR			; CFrameWnd::~CFrameWnd
EXTRN	??1CStatusBar@@UAE@XZ:NEAR			; CStatusBar::~CStatusBar
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcW@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcW
EXTRN	?IsFrameWnd@CFrameWnd@@UBEHXZ:NEAR		; CFrameWnd::IsFrameWnd
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?OnUpdateFrameTitle@CFrameWnd@@UAEXH@Z:NEAR	; CFrameWnd::OnUpdateFrameTitle
EXTRN	?OnUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z:NEAR ; CFrameWnd::OnUpdateFrameMenu
EXTRN	?GetDefaultAccelerator@CFrameWnd@@UAEPAUHACCEL__@@XZ:NEAR ; CFrameWnd::GetDefaultAccelerator
EXTRN	?PreTranslateMessage@CFrameWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CFrameWnd::PreTranslateMessage
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?DelayUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z:NEAR ; CFrameWnd::DelayUpdateFrameMenu
EXTRN	?ExitHelpMode@CFrameWnd@@UAEXXZ:NEAR		; CFrameWnd::ExitHelpMode
EXTRN	?OnCommand@CFrameWnd@@MAEHIJ@Z:NEAR		; CFrameWnd::OnCommand
EXTRN	?PostNcDestroy@CFrameWnd@@MAEXXZ:NEAR		; CFrameWnd::PostNcDestroy
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMainFrame@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMainFrame@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMainFrame@@QAE@XZ$1
__ehfuncinfo$??0CMainFrame@@QAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0CMainFrame@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT
??_7CMainFrame@@6B@ DD FLAT:?GetRuntimeClass@CMainFrame@@UBEPAUCRuntimeClass@@XZ ; CMainFrame::`vftable'
	DD	FLAT:??_ECMainFrame@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CMainFrame@@UBEXXZ
	DD	FLAT:?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMainFrame@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBG0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBG0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBG0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CFrameWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CFrameWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CFrameWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CFrameWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcW@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CFrameWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CFrameWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CFrameWnd@@UAEHPBG0KABUtagRECT@@PAVCWnd@@0KPAUCCreateContext@@@Z
	DD	FLAT:?LoadFrame@CFrameWnd@@UAEHIKPAVCWnd@@PAUCCreateContext@@@Z
	DD	FLAT:?GetActiveDocument@CFrameWnd@@UAEPAVCDocument@@XZ
	DD	FLAT:?GetActiveFrame@CFrameWnd@@UAEPAV1@XZ
	DD	FLAT:?GetMessageString@CFrameWnd@@UBEXIAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	DD	FLAT:?RecalcLayout@CFrameWnd@@UAEXH@Z
	DD	FLAT:?ActivateFrame@CFrameWnd@@UAEXH@Z
	DD	FLAT:?OnSetPreviewMode@CFrameWnd@@UAEXHPAUCPrintPreviewState@@@Z
	DD	FLAT:?GetMessageBar@CFrameWnd@@UAEPAVCWnd@@XZ
	DD	FLAT:?NegotiateBorderSpace@CFrameWnd@@UAEHIPAUtagRECT@@@Z
	DD	FLAT:?OnCreateClient@CFrameWnd@@MAEHPAUtagCREATESTRUCTW@@PAUCCreateContext@@@Z
	DD	FLAT:?OnUpdateFrameTitle@CFrameWnd@@UAEXH@Z
	DD	FLAT:?OnUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z
	DD	FLAT:?GetDefaultAccelerator@CFrameWnd@@UAEPAUHACCEL__@@XZ
	DD	FLAT:?DelayUpdateFrameMenu@CFrameWnd@@UAEXPAUHMENU__@@@Z
	DD	FLAT:?ExitHelpMode@CFrameWnd@@UAEXXZ
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CMainFrame@@QAE@XZ PROC NEAR				; CMainFrame::CMainFrame, COMDAT
; _this$ = ecx

; 88   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMainFrame@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFrameWnd@@QAE@XZ			; CFrameWnd::CFrameWnd
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0CStatusBar@@QAE@XZ			; CStatusBar::CStatusBar
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??0CChildView@@QAE@XZ			; CChildView::CChildView

; 89   : 	// TODO: add member initialization code here
; 90   : 	
; 91   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMainFrame@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
__unwindfunclet$??0CMainFrame@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
__ehhandler$??0CMainFrame@@QAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0CMainFrame@@QAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??0CMainFrame@@QAE@XZ ENDP				; CMainFrame::CMainFrame
PUBLIC	??1CMainFrame@@UAE@XZ				; CMainFrame::~CMainFrame
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCMainFrame@@UAEPAXI@Z PROC NEAR			; CMainFrame::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMainFrame@@UAE@XZ			; CMainFrame::~CMainFrame
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L94952
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L94952:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCMainFrame@@UAEPAXI@Z ENDP				; CMainFrame::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CChildView@@UAE@XZ:NEAR			; CChildView::~CChildView
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMainFrame@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMainFrame@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CMainFrame@@UAE@XZ$1
__ehfuncinfo$??1CMainFrame@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1CMainFrame@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CMainFrame@@UAE@XZ PROC NEAR				; CMainFrame::~CMainFrame, COMDAT
; _this$ = ecx

; 94   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMainFrame@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 95   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??1CChildView@@UAE@XZ			; CChildView::~CChildView
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMainFrame@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFrameWnd@@UAE@XZ			; CFrameWnd::~CFrameWnd
__unwindfunclet$??1CMainFrame@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1CStatusBar@@UAE@XZ			; CStatusBar::~CStatusBar
__ehhandler$??1CMainFrame@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CMainFrame@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CMainFrame@@UAE@XZ ENDP				; CMainFrame::~CMainFrame
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ		; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA ; `CMainFrame::OnCreate'::`2'::__LINE__Var
PUBLIC	??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@ ; `string'
PUBLIC	??_C@_1DM@CMPGIJJA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAi?$AAe@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1DK@OHFKBHJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAa@ ; `string'
EXTRN	?SetIndicators@CStatusBar@@QAEHPBIH@Z:NEAR	; CStatusBar::SetIndicators
EXTRN	??0CRect@@QAE@HHHH@Z:NEAR			; CRect::CRect
EXTRN	?OnCreate@CFrameWnd@@IAEHPAUtagCREATESTRUCTW@@@Z:NEAR ; CFrameWnd::OnCreate
;	COMDAT ??_C@_1DM@CMPGIJJA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAi?$AAe@
CONST	SEGMENT
??_C@_1DM@CMPGIJJA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAi?$AAe@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 'e', 00H
	DB	'w', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA DD 062H ; `CMainFrame::OnCreate'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
CONST	SEGMENT
??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@ DB 'c:\astrow32'
	DB	'dev\tbt32\mainfrm.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@OHFKBHJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAa@
CONST	SEGMENT
??_C@_1DK@OHFKBHJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAa@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ' ', 00H, 'b', 00H, 'a', 00H, 'r'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z
_TEXT	SEGMENT
$T95516 = -256						; size = 16
$T95517 = -232						; size = 8
$T95518 = -216						; size = 8
_this$ = -8						; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z PROC NEAR ; CMainFrame::OnCreate, COMDAT
; _this$ = ecx

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 	if (CFrameWnd::OnCreate(lpCreateStruct) == -1)

	mov	eax, DWORD PTR _lpCreateStruct$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCreate@CFrameWnd@@IAEHPAUtagCREATESTRUCTW@@@Z ; CFrameWnd::OnCreate
	cmp	eax, -1
	jne	SHORT $L94960

; 100  : 		return -1;

	or	eax, -1
	jmp	$L94959
$L94960:

; 101  : 	// create a view to occupy the client area of the frame
; 102  : 	if (!m_wndView.Create(NULL, NULL, AFX_WS_DEFAULT_VIEW,
; 103  : 		CRect(0, 0, 0, 0), this, AFX_IDW_PANE_FIRST, NULL))

	mov	esi, esp
	push	0
	push	59648					; 0000e900H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR $T95516[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect
	push	eax
	push	1350565888				; 50800000H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+356]
	call	DWORD PTR [eax+92]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L94962

; 104  : 	{
; 105  : 		TRACE0("Failed to create view window\n");

	push	OFFSET FLAT:??_C@_1DM@CMPGIJJA@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAi?$AAe@
	push	OFFSET FLAT:??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET FLAT:??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
	lea	ecx, DWORD PTR $T95517[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ	; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 12					; 0000000cH

; 106  : 		return -1;

	or	eax, -1
	jmp	SHORT $L94959
$L94962:

; 107  : 	}
; 108  : 
; 109  : 	if (!m_wndStatusBar.Create(this) ||
; 110  : 		!m_wndStatusBar.SetIndicators(indicators,
; 111  : 		  sizeof(indicators)/sizeof(UINT)))

	mov	esi, esp
	push	59393					; 0000e801H
	push	1342210560				; 50008200H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	call	DWORD PTR [eax+364]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L94970
	push	4
	push	OFFSET FLAT:_indicators
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?SetIndicators@CStatusBar@@QAEHPBIH@Z	; CStatusBar::SetIndicators
	test	eax, eax
	jne	SHORT $L94969
$L94970:

; 112  : 	{
; 113  : 		TRACE0("Failed to create status bar\n");

	push	OFFSET FLAT:??_C@_1DK@OHFKBHJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAa@
	push	OFFSET FLAT:??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z@4JA
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET FLAT:??_C@_0CB@MDIBNEMN@c?3?2astrow32dev?2tbt32?2mainfrm?4cpp@
	lea	ecx, DWORD PTR $T95518[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ	; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 12					; 0000000cH

; 114  : 		return -1;      // fail to create

	or	eax, -1
	jmp	SHORT $L94959
$L94969:

; 115  : 	}
; 116  : 
; 117  : 	return 0;

	xor	eax, eax
$L94959:

; 118  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnCreate@CMainFrame@@IAEHPAUtagCREATESTRUCTW@@@Z ENDP	; CMainFrame::OnCreate
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
EXTRN	?PreCreateWindow@CFrameWnd@@MAEHAAUtagCREATESTRUCTW@@@Z:NEAR ; CFrameWnd::PreCreateWindow
EXTRN	?AfxRegisterWndClass@@YGPBGIPAUHICON__@@PAUHBRUSH__@@0@Z:NEAR ; AfxRegisterWndClass
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cs$ = 8						; size = 4
?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z PROC NEAR ; CMainFrame::PreCreateWindow, COMDAT
; _this$ = ecx

; 121  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 	if( !CFrameWnd::PreCreateWindow(cs) )

	mov	eax, DWORD PTR _cs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreCreateWindow@CFrameWnd@@MAEHAAUtagCREATESTRUCTW@@@Z ; CFrameWnd::PreCreateWindow
	test	eax, eax
	jne	SHORT $L94977

; 123  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $L94976
$L94977:

; 124  : 	// TODO: Modify the Window class or styles here by modifying
; 125  : 	//  the CREATESTRUCT cs
; 126  : 
; 127  : 	cs.dwExStyle &= ~WS_EX_CLIENTEDGE;

	mov	eax, DWORD PTR _cs$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	and	ecx, -513				; fffffdffH
	mov	edx, DWORD PTR _cs$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 128  : 	cs.lpszClass = AfxRegisterWndClass(0);

	push	0
	push	0
	push	0
	push	0
	call	?AfxRegisterWndClass@@YGPBGIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
	mov	ecx, DWORD PTR _cs$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 129  : 	return TRUE;

	mov	eax, 1
$L94976:

; 130  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PreCreateWindow@CMainFrame@@UAEHAAUtagCREATESTRUCTW@@@Z ENDP ; CMainFrame::PreCreateWindow
_TEXT	ENDS
EXTRN	?AssertValid@CFrameWnd@@UBEXXZ:NEAR		; CFrameWnd::AssertValid
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?AssertValid@CMainFrame@@UBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AssertValid@CMainFrame@@UBEXXZ PROC NEAR		; CMainFrame::AssertValid, COMDAT
; _this$ = ecx

; 137  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 	CFrameWnd::AssertValid();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssertValid@CFrameWnd@@UBEXXZ		; CFrameWnd::AssertValid

; 139  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AssertValid@CMainFrame@@UBEXXZ ENDP			; CMainFrame::AssertValid
_TEXT	ENDS
EXTRN	?Dump@CFrameWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CFrameWnd::Dump
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dc$ = 8						; size = 4
?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CMainFrame::Dump, COMDAT
; _this$ = ecx

; 142  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 	CFrameWnd::Dump(dc);

	mov	eax, DWORD PTR _dc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Dump@CFrameWnd@@UBEXAAVCDumpContext@@@Z ; CFrameWnd::Dump

; 144  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Dump@CMainFrame@@UBEXAAVCDumpContext@@@Z ENDP		; CMainFrame::Dump
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
EXTRN	?atlTraceGeneral@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceGeneral
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_pszFmt$ = 12						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 179  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 180  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 181  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, atlTraceGeneral, 0, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceGeneral@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceGeneral
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 182  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 183  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXPBGZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVU:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z PROC NEAR	; ATL::CTrace::TraceV, COMDAT

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 127  : 		AtlTraceVU(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVU
	add	esp, 28					; 0000001cH

; 128  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pOldWnd$ = 8						; size = 4
?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z PROC NEAR	; CMainFrame::OnSetFocus, COMDAT
; _this$ = ecx

; 151  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 152  : 	// forward focus to the view window
; 153  : 	m_wndView.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnSetFocus@CMainFrame@@IAEXPAVCWnd@@@Z ENDP		; CMainFrame::OnSetFocus
_TEXT	ENDS
EXTRN	?OnCmdMsg@CFrameWnd@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CFrameWnd::OnCmdMsg
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
_nCode$ = 12						; size = 4
_pExtra$ = 16						; size = 4
_pHandlerInfo$ = 20					; size = 4
?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z PROC NEAR ; CMainFrame::OnCmdMsg, COMDAT
; _this$ = ecx

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 	// let the view have first crack at the command
; 159  : 	if (m_wndView.OnCmdMsg(nID, nCode, pExtra, pHandlerInfo))

	mov	esi, esp
	mov	eax, DWORD PTR _pHandlerInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExtra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+356]
	call	DWORD PTR [eax+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L94996

; 160  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $L94995
$L94996:

; 161  : 
; 162  : 	// otherwise, do default handling
; 163  : 	return CFrameWnd::OnCmdMsg(nID, nCode, pExtra, pHandlerInfo);

	mov	eax, DWORD PTR _pHandlerInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExtra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCmdMsg@CFrameWnd@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ; CFrameWnd::OnCmdMsg
$L94995:

; 164  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnCmdMsg@CMainFrame@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z ENDP ; CMainFrame::OnCmdMsg
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	??1CAspTextEdit@@UAE@XZ				; CAspTextEdit::~CAspTextEdit
PUBLIC	??1CSelectTextItem@@UAE@XZ			; CSelectTextItem::~CSelectTextItem
PUBLIC	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
PUBLIC	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	??0CAspTextEdit@@QAE@PAVCWnd@@@Z:NEAR		; CAspTextEdit::CAspTextEdit
EXTRN	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:NEAR ; CATextTypeAry::toTextType
EXTRN	?pATextTypes@@3PAVCATextTypeAry@@A:DWORD	; pATextTypes
EXTRN	??0CSelectTextItem@@QAE@PAVCWnd@@@Z:NEAR	; CSelectTextItem::CSelectTextItem
EXTRN	_strcpy:NEAR
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\mainfrm.cpp
xdata$x	SEGMENT
__unwindtable$?OnAspecttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnAspecttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnAspecttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnAspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_asp$ = -624						; size = 416
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnAspecttext@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnAspecttext, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnAspecttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 808				; 00000328H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-820]
	mov	ecx, 202				; 000000caH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 	// TODO: Add your command handler code here
; 170  : 	char buf1[20];
; 171  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 172  : 	it.m_type=3;

	mov	DWORD PTR _it$[ebp+120], 3

; 173  : 	it.m_ary=0;

	mov	DWORD PTR _it$[ebp+124], 0

; 174  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95002

; 175  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L94999
$L95002:

; 176  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 177  :     strcpy( buf1, pATextTypes->toTextType( str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 178  : 	CAspTextEdit asp(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _asp$[ebp]
	call	??0CAspTextEdit@@QAE@PAVCWnd@@@Z	; CAspTextEdit::CAspTextEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 179  : 	asp.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _asp$[ebp+220]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 180  : 	asp.DoModal();

	lea	ecx, DWORD PTR _asp$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 181  : 	
; 182  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _asp$[ebp]
	call	??1CAspTextEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L94999:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95552
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 820				; 00000334H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95552:
	DD	4
	DD	$L95551
$L95551:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L95545
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L95546
	DD	-200					; ffffff38H
	DD	4
	DD	$L95547
	DD	-624					; fffffd90H
	DD	416					; 000001a0H
	DD	$L95548
$L95548:
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	0
$L95547:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95546:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L95545:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnAspecttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _asp$[ebp]
	jmp	??1CAspTextEdit@@UAE@XZ
__ehhandler$?OnAspecttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnAspecttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnAspecttext@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnAspecttext
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CSelectTextItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSelectTextItem@@UAE@XZ PROC NEAR			; CSelectTextItem::~CSelectTextItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSelectTextItem@@UAE@XZ ENDP				; CSelectTextItem::~CSelectTextItem
_TEXT	ENDS
PUBLIC	??1CWSpell@@UAE@XZ				; CWSpell::~CWSpell
PUBLIC	??1CDAspectText@@UAE@XZ				; CDAspectText::~CDAspectText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CAspTextEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CAspTextEdit@@UAE@XZ$6
__ehfuncinfo$??1CAspTextEdit@@UAE@XZ DD 019930520H
	DD	07H
	DD	FLAT:__unwindtable$??1CAspTextEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CAspTextEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CAspTextEdit@@UAE@XZ PROC NEAR			; CAspTextEdit::~CAspTextEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAspTextEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??1CDAspectText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CAspTextEdit@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$??1CAspTextEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CAspTextEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CAspTextEdit@@UAE@XZ ENDP				; CAspTextEdit::~CAspTextEdit
EXTRN	??1CDaoRecordset@@UAE@XZ:NEAR			; CDaoRecordset::~CDaoRecordset
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDAspectText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDAspectText@@UAE@XZ PROC NEAR			; CDAspectText::~CDAspectText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDAspectText@@UAE@XZ ENDP				; CDAspectText::~CDAspectText
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CWSpell@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CWSpell@@UAE@XZ PROC NEAR				; CWSpell::~CWSpell, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWSpell@@UAE@XZ ENDP					; CWSpell::~CWSpell
_TEXT	ENDS
PUBLIC	?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ; CMainFrame::OnUpdateAspecttext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateAspecttext, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	// TODO: Add your command update UI handler code here
; 187  : 		pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 188  : 
; 189  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateAspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateAspecttext
_TEXT	ENDS
PUBLIC	??1CProgress@@UAE@XZ				; CProgress::~CProgress
PUBLIC	??0ImportHelp@@QAE@PAVCProgress@@@Z		; ImportHelp::ImportHelp
PUBLIC	?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportahelpfile'::`2'::__LINE__Var
EXTRN	??2@YAPAXIPBDH@Z:NEAR				; operator new
EXTRN	??3@YAXPAXPBDH@Z:NEAR				; operator delete
EXTRN	??0CProgress@@QAE@PAVCWnd@@@Z:NEAR		; CProgress::CProgress
EXTRN	?Process@ImportHelp@@QAEXXZ:NEAR		; ImportHelp::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportahelpfile@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$1
__ehfuncinfo$?OnImportImportahelpfile@CMainFrame@@IAEXXZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA DD 0c0H ; `CMainFrame::OnImportImportahelpfile'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportahelpfile@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv89 = -484						; size = 4
tv82 = -484						; size = 4
$T95592 = -476						; size = 4
$T95593 = -464						; size = 4
$T95596 = -452						; size = 4
$T95597 = -440						; size = 4
_imp$ = -236						; size = 4
_prog$ = -224						; size = 196
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnImportImportahelpfile@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportahelpfile, COMDAT
; _this$ = ecx

; 192  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 193  : 	// TODO: Add your command handler code here
; 194  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : 	ImportHelp *imp = new ImportHelp(&prog);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
	add	eax, 3
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	180					; 000000b4H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T95593[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T95593[ebp], 0
	je	SHORT $L95594
	lea	ecx, DWORD PTR _prog$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95593[ebp]
	call	??0ImportHelp@@QAE@PAVCProgress@@@Z	; ImportHelp::ImportHelp
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $L95595
$L95594:
	mov	DWORD PTR tv82[ebp], 0
$L95595:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T95592[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T95592[ebp]
	mov	DWORD PTR _imp$[ebp], eax

; 196  : 	imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportHelp@@QAEXXZ		; ImportHelp::Process

; 197  : 	delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T95597[ebp], eax
	mov	ecx, DWORD PTR $T95597[ebp]
	mov	DWORD PTR $T95596[ebp], ecx
	cmp	DWORD PTR $T95596[ebp], 0
	je	SHORT $L95598
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95596[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95596[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $L95599
$L95598:
	mov	DWORD PTR tv89[ebp], 0
$L95599:

; 198  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95607
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95607:
	DD	1
	DD	$L95606
$L95606:
	DD	-224					; ffffff20H
	DD	196					; 000000c4H
	DD	$L95604
$L95604:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportahelpfile@CMainFrame@@IAEXXZ$1:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportahelpfile@CMainFrame@@IAEXXZ@4JA
	add	eax, 3
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95593[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportahelpfile@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportahelpfile@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportahelpfile@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportahelpfile
PUBLIC	??_7ImportHelp@@6B@				; ImportHelp::`vftable'
PUBLIC	??_GImportHelp@@UAEPAXI@Z			; ImportHelp::`scalar deleting destructor'
PUBLIC	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
EXTRN	??0CDHelpTxt@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDHelpTxt::CDHelpTxt
EXTRN	??_EImportHelp@@UAEPAXI@Z:NEAR			; ImportHelp::`vector deleting destructor'
;	COMDAT ??_7ImportHelp@@6B@
; File c:\astrow32dev\tbt32\importhelp.h
CONST	SEGMENT
??_7ImportHelp@@6B@ DD FLAT:??_EImportHelp@@UAEPAXI@Z	; ImportHelp::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportHelp@@QAE@PAVCProgress@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0ImportHelp@@QAE@PAVCProgress@@@Z PROC NEAR		; ImportHelp::ImportHelp, COMDAT
; _this$ = ecx

; 22   :    ImportHelp(CProgress *p) {m_pProg=p;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportHelp@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CDHelpTxt@@QAE@PAVCDaoDatabase@@@Z	; CDHelpTxt::CDHelpTxt
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+176], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ImportHelp@@QAE@PAVCProgress@@@Z ENDP		; ImportHelp::ImportHelp
_TEXT	ENDS
PUBLIC	??1ImportHelp@@UAE@XZ				; ImportHelp::~ImportHelp
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportHelp@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportHelp@@UAEPAXI@Z PROC NEAR			; ImportHelp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportHelp@@UAE@XZ			; ImportHelp::~ImportHelp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93877
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93877:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportHelp@@UAEPAXI@Z ENDP				; ImportHelp::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CDHelpTxt@@UAE@XZ				; CDHelpTxt::~CDHelpTxt
EXTRN	?IsOpen@CDaoRecordset@@QBEHXZ:NEAR		; CDaoRecordset::IsOpen
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportHelp@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportHelp@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportHelp@@UAE@XZ$1
__ehfuncinfo$??1ImportHelp@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportHelp@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportHelp@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportHelp@@UAE@XZ PROC NEAR				; ImportHelp::~ImportHelp, COMDAT
; _this$ = ecx

; 23   :    virtual ~ImportHelp() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportHelp@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportHelp@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L93872
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93872:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CDHelpTxt@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportHelp@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CDHelpTxt@@UAE@XZ
__unwindfunclet$??1ImportHelp@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$??1ImportHelp@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportHelp@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportHelp@@UAE@XZ ENDP				; ImportHelp::~ImportHelp
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDHelpTxt@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDHelpTxt@@UAE@XZ PROC NEAR				; CDHelpTxt::~CDHelpTxt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDHelpTxt@@UAE@XZ ENDP				; CDHelpTxt::~CDHelpTxt
_TEXT	ENDS
EXTRN	??1CProgressCtrl@@UAE@XZ:NEAR			; CProgressCtrl::~CProgressCtrl
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CProgress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CProgress@@UAE@XZ$0
__ehfuncinfo$??1CProgress@@UAE@XZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??1CProgress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CProgress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CProgress@@UAE@XZ PROC NEAR				; CProgress::~CProgress, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CProgress@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1CProgressCtrl@@UAE@XZ		; CProgressCtrl::~CProgressCtrl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CProgress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__ehhandler$??1CProgress@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CProgress@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CProgress@@UAE@XZ ENDP				; CProgress::~CProgress
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportahelpfile, COMDAT
; _this$ = ecx

; 201  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 	// TODO: Add your command update UI handler code here
; 203  : 		pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 204  : 
; 205  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportahelpfile@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportahelpfile
_TEXT	ENDS
PUBLIC	??1CFileSelector@@UAE@XZ			; CFileSelector::~CFileSelector
PUBLIC	??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; ImportAspText::ImportAspText
PUBLIC	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<unsigned short,0>::GetLength
PUBLIC	?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportaspecttext'::`2'::__LINE__Var
PUBLIC	?toTextType@CAsFileAry@@QAEPADPBD@Z		; CAsFileAry::toTextType
EXTRN	??0CFileSelector@@QAE@PAVCWnd@@@Z:NEAR		; CFileSelector::CFileSelector
EXTRN	?Process@ImportAspText@@QAEXXZ:NEAR		; ImportAspText::Process
EXTRN	_memset:NEAR
EXTRN	?GetSize@CStringArray@@QBEHXZ:NEAR		; CStringArray::GetSize
EXTRN	??ACStringArray@@QAEAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z:NEAR ; CStringArray::operator[]
EXTRN	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:NEAR ; CAsFileAry::toFileName
EXTRN	?pFileList@@3PAVCAsFileAry@@A:DWORD		; pFileList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportaspecttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportaspecttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA DD 0d0H ; `CMainFrame::OnImportImportaspecttext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportaspecttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv161 = -736						; size = 4
tv154 = -736						; size = 4
$T95649 = -728						; size = 4
$T95650 = -716						; size = 4
$T95653 = -704						; size = 4
$T95654 = -692						; size = 4
_imp$95049 = -488					; size = 4
_str$95047 = -476					; size = 4
_i$95043 = -464						; size = 4
_prog$ = -452						; size = 196
_sel$ = -248						; size = 144
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportaspecttext@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportaspecttext, COMDAT
; _this$ = ecx

; 208  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 724				; 000002d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-736]
	mov	ecx, 181				; 000000b5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 	// TODO: Add your command handler code here
; 210  : 	char buf1[25], buf2[25];
; 211  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 212  : 	sel.m_type=3;

	mov	DWORD PTR _sel$[ebp+116], 3

; 213  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95041

; 214  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95037
$L95041:

; 215  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 216  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95043[ebp], 0
	jmp	SHORT $L95044
$L95045:
	mov	eax, DWORD PTR _i$95043[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95043[ebp], eax
$L95044:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95043[ebp], eax
	jge	$L95046

; 217  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95043[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95047[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 218  : 		if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95047[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	test	eax, eax
	jne	SHORT $L95048

; 219  : 			continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95047[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	jmp	SHORT $L95045
$L95048:

; 220  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 221  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 222  : 		strcpy(buf1, pFileList->toFileName( str) );

	lea	eax, DWORD PTR _str$95047[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 223  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 224  : 		ImportAspText *imp = new ImportAspText(buf1,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	204					; 000000ccH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T95650[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T95650[ebp], 0
	je	SHORT $L95651
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95650[ebp]
	call	??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; ImportAspText::ImportAspText
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $L95652
$L95651:
	mov	DWORD PTR tv154[ebp], 0
$L95652:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T95649[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T95649[ebp]
	mov	DWORD PTR _imp$95049[ebp], eax

; 225  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95049[ebp]
	call	?Process@ImportAspText@@QAEXXZ		; ImportAspText::Process

; 226  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95049[ebp]
	mov	DWORD PTR $T95654[ebp], eax
	mov	ecx, DWORD PTR $T95654[ebp]
	mov	DWORD PTR $T95653[ebp], ecx
	cmp	DWORD PTR $T95653[ebp], 0
	je	SHORT $L95655
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95653[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95653[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $L95656
$L95655:
	mov	DWORD PTR tv161[ebp], 0
$L95656:

; 227  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95047[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	jmp	$L95045
$L95046:

; 228  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95037:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95671
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 736				; 000002e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95671:
	DD	5
	DD	$L95670
$L95670:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L95663
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L95664
	DD	-248					; ffffff08H
	DD	144					; 00000090H
	DD	$L95665
	DD	-452					; fffffe3cH
	DD	196					; 000000c4H
	DD	$L95666
	DD	-476					; fffffe24H
	DD	4
	DD	$L95667
$L95667:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95666:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L95665:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L95664:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L95663:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$95047[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnImportImportaspecttext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportaspecttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95650[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportaspecttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportaspecttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportaspecttext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportaspecttext
PUBLIC	?dest@CAsFile@@QAEPADXZ				; CAsFile::dest
EXTRN	?Find@CAsFileAry@@QAEPAVCAsFile@@PBDH@Z:NEAR	; CAsFileAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\fileary.hpp
;	COMDAT ?toTextType@CAsFileAry@@QAEPADPBD@Z
_TEXT	SEGMENT
_pf$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?toTextType@CAsFileAry@@QAEPADPBD@Z PROC NEAR		; CAsFileAry::toTextType, COMDAT
; _this$ = ecx

; 40   :     char *toTextType( const char *name ) { CAsFile *pf=Find(name); if ( pf==NULL) return NULL; else return( pf->dest() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CAsFileAry@@QAEPAVCAsFile@@PBDH@Z	; CAsFileAry::Find
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	jne	SHORT $L93109
	xor	eax, eax
	jmp	SHORT $L93107
$L93109:
	mov	ecx, DWORD PTR _pf$[ebp]
	call	?dest@CAsFile@@QAEPADXZ			; CAsFile::dest
$L93107:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toTextType@CAsFileAry@@QAEPADPBD@Z ENDP		; CAsFileAry::toTextType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?dest@CAsFile@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dest@CAsFile@@QAEPADXZ PROC NEAR			; CAsFile::dest, COMDAT
; _this$ = ecx

; 21   :     char *dest() { return _dest; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 113				; 00000071H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dest@CAsFile@@QAEPADXZ ENDP				; CAsFile::dest
_TEXT	ENDS
PUBLIC	??_7ImportAspText@@6B@				; ImportAspText::`vftable'
PUBLIC	??_GImportAspText@@UAEPAXI@Z			; ImportAspText::`scalar deleting destructor'
PUBLIC	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
EXTRN	??0CDAspectText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDAspectText::CDAspectText
EXTRN	??_EImportAspText@@UAEPAXI@Z:NEAR		; ImportAspText::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\importasptext.h
xdata$x	SEGMENT
__unwindtable$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7ImportAspText@@6B@
CONST	SEGMENT
??_7ImportAspText@@6B@ DD FLAT:??_EImportAspText@@UAEPAXI@Z ; ImportAspText::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fname$ = 8						; size = 4
_item$ = 12						; size = 4
_p$ = 16						; size = 4
_dir$ = 20						; size = 4
??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z PROC NEAR ; ImportAspText::ImportAspText, COMDAT
; _this$ = ecx

; 22   : 	ImportAspText(char *fname, char *item, CProgress *p, CString &dir) { filename=fname; textitem=item; m_pProg=p; m_dir = dir; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportAspText@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CDAspectText@@QAE@PAVCDaoDatabase@@@Z ; CDAspectText::CDAspectText
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fname$[ebp]
	mov	DWORD PTR [eax+196], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+200], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+192], ecx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDAspectText@@UAE@XZ
__ehhandler$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0ImportAspText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ENDP ; ImportAspText::ImportAspText
PUBLIC	??1ImportAspText@@UAE@XZ			; ImportAspText::~ImportAspText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportAspText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportAspText@@UAEPAXI@Z PROC NEAR			; ImportAspText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportAspText@@UAE@XZ		; ImportAspText::~ImportAspText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93945
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93945:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportAspText@@UAEPAXI@Z ENDP			; ImportAspText::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportAspText@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportAspText@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportAspText@@UAE@XZ$1
__ehfuncinfo$??1ImportAspText@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportAspText@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportAspText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportAspText@@UAE@XZ PROC NEAR			; ImportAspText::~ImportAspText, COMDAT
; _this$ = ecx

; 23   : 	virtual ~ImportAspText() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportAspText@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportAspText@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L93940
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93940:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CDAspectText@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportAspText@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1ImportAspText@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDAspectText@@UAE@XZ
__ehhandler$??1ImportAspText@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportAspText@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportAspText@@UAE@XZ ENDP				; ImportAspText::~ImportAspText
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CFileSelector@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFileSelector@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFileSelector@@UAE@XZ$1
__ehfuncinfo$??1CFileSelector@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1CFileSelector@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CFileSelector@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CFileSelector@@UAE@XZ PROC NEAR			; CFileSelector::~CFileSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFileSelector@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFileSelector@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CFileSelector@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$??1CFileSelector@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CFileSelector@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CFileSelector@@UAE@XZ ENDP				; CFileSelector::~CFileSelector
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
;	COMDAT ?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportaspecttext, COMDAT
; _this$ = ecx

; 231  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 	// TODO: Add your command update UI handler code here
; 233  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 234  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportaspecttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportaspecttext
_TEXT	ENDS
PUBLIC	??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; ImportRegText::ImportRegText
PUBLIC	?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportplanethousetext'::`2'::__LINE__Var
EXTRN	?Process@ImportRegText@@QAEXXZ:NEAR		; ImportRegText::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA DD 0edH ; `CMainFrame::OnImportImportplanethousetext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv161 = -736						; size = 4
tv154 = -736						; size = 4
$T95718 = -728						; size = 4
$T95719 = -716						; size = 4
$T95722 = -704						; size = 4
$T95723 = -692						; size = 4
_imp$95079 = -488					; size = 4
_str$95077 = -476					; size = 4
_i$95073 = -464						; size = 4
_prog$ = -452						; size = 196
_sel$ = -248						; size = 144
_buf2$ = -96						; size = 25
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportplanethousetext@CMainFrame@@IAEXXZ PROC NEAR ; CMainFrame::OnImportImportplanethousetext, COMDAT
; _this$ = ecx

; 237  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 724				; 000002d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-736]
	mov	ecx, 181				; 000000b5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 238  : 	// TODO: Add your command handler code here
; 239  : 	char buf1[25], buf2[25];
; 240  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 241  : 	sel.m_type=2;

	mov	DWORD PTR _sel$[ebp+116], 2

; 242  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95071

; 243  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95067
$L95071:

; 244  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 245  : 	for ( int i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$95073[ebp], 0
	jmp	SHORT $L95074
$L95075:
	mov	eax, DWORD PTR _i$95073[ebp]
	add	eax, 1
	mov	DWORD PTR _i$95073[ebp], eax
$L95074:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$95073[ebp], eax
	jge	$L95076

; 246  : 	    CString str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$95073[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$95077[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 247  : 	    if ( str.GetLength()==0)

	lea	ecx, DWORD PTR _str$95077[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	test	eax, eax
	jne	SHORT $L95078

; 248  : 		   continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95077[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	jmp	SHORT $L95075
$L95078:

; 249  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 250  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 251  : 	    strcpy(buf1, pFileList->toFileName(str) );

	lea	eax, DWORD PTR _str$95077[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 252  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 253  : 		ImportRegText *imp = new ImportRegText(buf1,buf2, &prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	196					; 000000c4H
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T95719[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T95719[ebp], 0
	je	SHORT $L95720
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95719[ebp]
	call	??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; ImportRegText::ImportRegText
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $L95721
$L95720:
	mov	DWORD PTR tv154[ebp], 0
$L95721:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T95718[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T95718[ebp]
	mov	DWORD PTR _imp$95079[ebp], eax

; 254  : 	    imp->Process();

	mov	ecx, DWORD PTR _imp$95079[ebp]
	call	?Process@ImportRegText@@QAEXXZ		; ImportRegText::Process

; 255  : 	    delete imp;

	mov	eax, DWORD PTR _imp$95079[ebp]
	mov	DWORD PTR $T95723[ebp], eax
	mov	ecx, DWORD PTR $T95723[ebp]
	mov	DWORD PTR $T95722[ebp], ecx
	cmp	DWORD PTR $T95722[ebp], 0
	je	SHORT $L95724
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95722[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95722[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $L95725
$L95724:
	mov	DWORD PTR tv161[ebp], 0
$L95725:

; 256  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$95077[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	jmp	$L95075
$L95076:

; 257  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95067:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95740
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 736				; 000002e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95740:
	DD	5
	DD	$L95739
$L95739:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L95732
	DD	-96					; ffffffa0H
	DD	25					; 00000019H
	DD	$L95733
	DD	-248					; ffffff08H
	DD	144					; 00000090H
	DD	$L95734
	DD	-452					; fffffe3cH
	DD	196					; 000000c4H
	DD	$L95735
	DD	-476					; fffffe24H
	DD	4
	DD	$L95736
$L95736:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95735:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L95734:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L95733:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L95732:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$95077[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportplanethousetext@CMainFrame@@IAEXXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95719[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportplanethousetext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportplanethousetext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportplanethousetext
PUBLIC	??1CDregText@@UAE@XZ				; CDregText::~CDregText
PUBLIC	??_7ImportRegText@@6B@				; ImportRegText::`vftable'
PUBLIC	??_GImportRegText@@UAEPAXI@Z			; ImportRegText::`scalar deleting destructor'
EXTRN	??0CDregText@@QAE@PAVCDaoDatabase@@@Z:NEAR	; CDregText::CDregText
EXTRN	??_EImportRegText@@UAEPAXI@Z:NEAR		; ImportRegText::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\importregtext.h
xdata$x	SEGMENT
__unwindtable$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7ImportRegText@@6B@
CONST	SEGMENT
??_7ImportRegText@@6B@ DD FLAT:??_EImportRegText@@UAEPAXI@Z ; ImportRegText::`vftable'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fname$ = 8						; size = 4
_item$ = 12						; size = 4
_p$ = 16						; size = 4
_dir$ = 20						; size = 4
??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z PROC NEAR ; ImportRegText::ImportRegText, COMDAT
; _this$ = ecx

; 20   : 	ImportRegText(char *fname, char *item, CProgress *p, CString &dir) { filename=fname; textitem=item; m_pProg=p; m_dir = dir; }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportRegText@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CDregText@@QAE@PAVCDaoDatabase@@@Z	; CDregText::CDregText
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fname$[ebp]
	mov	DWORD PTR [eax+184], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+188], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+192], ecx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDregText@@UAE@XZ
__ehhandler$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0ImportRegText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ENDP ; ImportRegText::ImportRegText
PUBLIC	??1ImportRegText@@UAE@XZ			; ImportRegText::~ImportRegText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??_GImportRegText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImportRegText@@UAEPAXI@Z PROC NEAR			; ImportRegText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ImportRegText@@UAE@XZ		; ImportRegText::~ImportRegText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93911
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93911:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImportRegText@@UAEPAXI@Z ENDP			; ImportRegText::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImportRegText@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ImportRegText@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ImportRegText@@UAE@XZ$1
__ehfuncinfo$??1ImportRegText@@UAE@XZ DD 019930520H
	DD	02H
	DD	FLAT:__unwindtable$??1ImportRegText@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1ImportRegText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ImportRegText@@UAE@XZ PROC NEAR			; ImportRegText::~ImportRegText, COMDAT
; _this$ = ecx

; 21   : 	virtual ~ImportRegText() { if ( set.IsOpen() ) set.Close(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ImportRegText@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7ImportRegText@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsOpen@CDaoRecordset@@QBEHXZ		; CDaoRecordset::IsOpen
	test	eax, eax
	je	SHORT $L93906
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	esi, esp
	call	DWORD PTR [edx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93906:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CDregText@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ImportRegText@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1ImportRegText@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDregText@@UAE@XZ
__ehhandler$??1ImportRegText@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1ImportRegText@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1ImportRegText@@UAE@XZ ENDP				; ImportRegText::~ImportRegText
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDregText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDregText@@UAE@XZ PROC NEAR				; CDregText::~CDregText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDregText@@UAE@XZ ENDP				; CDregText::~CDregText
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportplanethousetext, COMDAT
; _this$ = ecx

; 260  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 	// TODO: Add your command update UI handler code here
; 262  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 263  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportplanethousetext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportplanethousetext
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnImportImportreporttext'::`2'::__LINE__Var
EXTRN	??0ImportReportText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z:NEAR ; ImportReportText::ImportReportText
EXTRN	?Process@ImportReportText@@QAEXXZ:NEAR		; ImportReportText::Process
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnImportImportreporttext@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$3
__ehfuncinfo$?OnImportImportreporttext@CMainFrame@@IAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA DD 010aH ; `CMainFrame::OnImportImportreporttext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnImportImportreporttext@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv162 = -760						; size = 4
tv155 = -760						; size = 4
$T95779 = -752						; size = 4
$T95780 = -740						; size = 4
$T95783 = -728						; size = 4
$T95784 = -716						; size = 4
_i$ = -512						; size = 4
_str$ = -500						; size = 4
_imp$ = -488						; size = 4
_prog$ = -476						; size = 196
_sel$ = -272						; size = 144
_buf2$ = -120						; size = 50
_buf1$ = -60						; size = 25
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnImportImportreporttext@CMainFrame@@IAEXXZ PROC NEAR	; CMainFrame::OnImportImportreporttext, COMDAT
; _this$ = ecx

; 266  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 748				; 000002ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-760]
	mov	ecx, 187				; 000000bbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 267  : 	// TODO: Add your command handler code here
; 268  : 	char buf1[25], buf2[50];
; 269  : 	CFileSelector sel(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??0CFileSelector@@QAE@PAVCWnd@@@Z	; CFileSelector::CFileSelector
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 270  : 	sel.m_type=1;

	mov	DWORD PTR _sel$[ebp+116], 1

; 271  : 	if ( sel.DoModal() != IDOK )

	lea	ecx, DWORD PTR _sel$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95099

; 272  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
	jmp	$L95095
$L95099:

; 273  : 	CProgress prog(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??0CProgress@@QAE@PAVCWnd@@@Z		; CProgress::CProgress
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 274  : 	ImportReportText *imp;
; 275  : 	CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 276  : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 277  : 	for ( i = 0; i < sel.m_FileAry.GetSize(); i++ ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L95104
$L95105:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L95104:
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$[ebp], eax
	jge	$L95106

; 278  : 	    str = sel.m_FileAry[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sel$[ebp+120]
	call	??ACStringArray@@QAEAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 279  : 	    if (str.GetLength()==0)

	lea	ecx, DWORD PTR _str$[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	test	eax, eax
	jne	SHORT $L95107

; 280  : 		   continue;

	jmp	SHORT $L95105
$L95107:

; 281  : 		memset(buf1,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 282  : 		memset(buf2,0,25);

	push	25					; 00000019H
	push	0
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 283  : 	    strcpy(buf1, pFileList->toFileName((CString &)str) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toFileName@CAsFileAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CAsFileAry::toFileName
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 284  :         strcpy(buf2, pFileList->toTextType(buf1) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pFileList@@3PAVCAsFileAry@@A ; pFileList
	call	?toTextType@CAsFileAry@@QAEPADPBD@Z	; CAsFileAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf2$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 285  : 		imp = new ImportReportText(buf1,buf2,&prog, sel.m_import_dir);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	284					; 0000011cH
	call	??2@YAPAXIPBDH@Z			; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T95780[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T95780[ebp], 0
	je	SHORT $L95781
	lea	ecx, DWORD PTR _sel$[ebp+140]
	push	ecx
	lea	edx, DWORD PTR _prog$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95780[ebp]
	call	??0ImportReportText@@QAE@PAD0PAVCProgress@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; ImportReportText::ImportReportText
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $L95782
$L95781:
	mov	DWORD PTR tv155[ebp], 0
$L95782:
	mov	edx, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T95779[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T95779[ebp]
	mov	DWORD PTR _imp$[ebp], eax

; 286  : 		imp->Process();

	mov	ecx, DWORD PTR _imp$[ebp]
	call	?Process@ImportReportText@@QAEXXZ	; ImportReportText::Process

; 287  : 	    delete imp;

	mov	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR $T95784[ebp], eax
	mov	ecx, DWORD PTR $T95784[ebp]
	mov	DWORD PTR $T95783[ebp], ecx
	cmp	DWORD PTR $T95783[ebp], 0
	je	SHORT $L95785
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95783[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95783[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $L95786
$L95785:
	mov	DWORD PTR tv162[ebp], 0
$L95786:

; 288  : 		}

	jmp	$L95105
$L95106:

; 289  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prog$[ebp]
	call	??1CProgress@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sel$[ebp]
	call	??1CFileSelector@@UAE@XZ
$L95095:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95801
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 760				; 000002f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95801:
	DD	5
	DD	$L95800
$L95800:
	DD	-60					; ffffffc4H
	DD	25					; 00000019H
	DD	$L95793
	DD	-120					; ffffff88H
	DD	50					; 00000032H
	DD	$L95794
	DD	-272					; fffffef0H
	DD	144					; 00000090H
	DD	$L95795
	DD	-476					; fffffe24H
	DD	196					; 000000c4H
	DD	$L95796
	DD	-500					; fffffe0cH
	DD	4
	DD	$L95797
$L95797:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95796:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
$L95795:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$L95794:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$L95793:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _sel$[ebp]
	jmp	??1CFileSelector@@UAE@XZ
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _prog$[ebp]
	jmp	??1CProgress@@UAE@XZ
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnImportImportreporttext@CMainFrame@@IAEXXZ$3:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnImportImportreporttext@CMainFrame@@IAEXXZ@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95780[ebp]
	push	ecx
	call	??3@YAXPAXPBDH@Z			; operator delete
	add	esp, 12					; 0000000cH
	ret	0
__ehhandler$?OnImportImportreporttext@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnImportImportreporttext@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnImportImportreporttext@CMainFrame@@IAEXXZ ENDP	; CMainFrame::OnImportImportreporttext
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateImportImportreporttext, COMDAT
; _this$ = ecx

; 292  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	// TODO: Add your command update UI handler code here
; 294  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 295  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateImportImportreporttext@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateImportImportreporttext
_TEXT	ENDS
PUBLIC	??1CRegTextEdit@@UAE@XZ				; CRegTextEdit::~CRegTextEdit
EXTRN	??0CRegTextEdit@@QAE@PAVCWnd@@@Z:NEAR		; CRegTextEdit::CRegTextEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRegulartxt@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnRegulartxt@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnRegulartxt@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnRegulartxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_reg$ = -608						; size = 400
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnRegulartxt@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnRegulartxt, COMDAT
; _this$ = ecx

; 298  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnRegulartxt@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 792				; 00000318H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-804]
	mov	ecx, 198				; 000000c6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 299  : 	// TODO: Add your command handler code here
; 300  : 	char buf1[20];
; 301  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 302  : 	it.m_type=2;

	mov	DWORD PTR _it$[ebp+120], 2

; 303  : 	it.m_ary=0;

	mov	DWORD PTR _it$[ebp+124], 0

; 304  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95127

; 305  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95124
$L95127:

; 306  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 307  :     strcpy( buf1, pATextTypes->toTextType(str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 308  : 	CRegTextEdit reg(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reg$[ebp]
	call	??0CRegTextEdit@@QAE@PAVCWnd@@@Z	; CRegTextEdit::CRegTextEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 309  : 	reg.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reg$[ebp+204]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 310  : 	reg.DoModal();

	lea	ecx, DWORD PTR _reg$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 311  : 
; 312  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _reg$[ebp]
	call	??1CRegTextEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95124:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95822
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 804				; 00000324H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95822:
	DD	4
	DD	$L95821
$L95821:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L95815
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L95816
	DD	-200					; ffffff38H
	DD	4
	DD	$L95817
	DD	-608					; fffffda0H
	DD	400					; 00000190H
	DD	$L95818
$L95818:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	0
$L95817:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95816:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L95815:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnRegulartxt@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _reg$[ebp]
	jmp	??1CRegTextEdit@@UAE@XZ
__ehhandler$?OnRegulartxt@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnRegulartxt@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnRegulartxt@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnRegulartxt
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CRegTextEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CRegTextEdit@@UAE@XZ$6
__ehfuncinfo$??1CRegTextEdit@@UAE@XZ DD 019930520H
	DD	07H
	DD	FLAT:__unwindtable$??1CRegTextEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CRegTextEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CRegTextEdit@@UAE@XZ PROC NEAR			; CRegTextEdit::~CRegTextEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CRegTextEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1CDregText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CRegTextEdit@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$??1CRegTextEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CRegTextEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CRegTextEdit@@UAE@XZ ENDP				; CRegTextEdit::~CRegTextEdit
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateRegulartxt, COMDAT
; _this$ = ecx

; 315  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 	// TODO: Add your command update UI handler code here
; 317  :   pCmdUI->Enable();	

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 318  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateRegulartxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateRegulartxt
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA ; `CMainFrame::OnHelptxt'::`2'::__LINE__Var
EXTRN	??0CHelpEdit@@QAE@PAVCWnd@@@Z:NEAR		; CHelpEdit::CHelpEdit
EXTRN	??2CObject@@SGPAXIPBDH@Z:NEAR			; CObject::operator new
EXTRN	??3CObject@@SGXPAXPBDH@Z:NEAR			; CObject::operator delete
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnHelptxt@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnHelptxt@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnHelptxt@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA DD 0142H ; `CMainFrame::OnHelptxt'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?OnHelptxt@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
tv162 = -396						; size = 4
tv149 = -396						; size = 4
tv128 = -396						; size = 4
tv81 = -396						; size = 4
$T95847 = -388						; size = 4
$T95848 = -376						; size = 4
$T95851 = -364						; size = 4
$T95852 = -352						; size = 4
$T95855 = -340						; size = 4
$T95856 = -328						; size = 4
$T95859 = -316						; size = 4
$T95860 = -304						; size = 4
_hlp$95156 = -100					; size = 4
_it$95145 = -88						; size = 4
_str$ = -76						; size = 4
_buf1$ = -64						; size = 20
_ret$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnHelptxt@CMainFrame@@IAEXXZ PROC NEAR			; CMainFrame::OnHelptxt, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnHelptxt@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	// TODO: Add your command handler code here
; 324  : 	int ret;
; 325  : 	char buf1[20];
; 326  :     CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$L95142:

; 327  : 	do {
; 328  :       CSelectTextItem *it = new CSelectTextItem(this);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 6
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	128					; 00000080H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T95848[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T95848[ebp], 0
	je	SHORT $L95849
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95848[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L95850
$L95849:
	mov	DWORD PTR tv81[ebp], 0
$L95850:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T95847[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T95847[ebp]
	mov	DWORD PTR _it$95145[ebp], eax

; 329  : 	  it->m_type=0;

	mov	eax, DWORD PTR _it$95145[ebp]
	mov	DWORD PTR [eax+120], 0

; 330  : 	  it->m_ary=0;

	mov	eax, DWORD PTR _it$95145[ebp]
	mov	DWORD PTR [eax+124], 0

; 331  : 	  ret = it->DoModal();

	mov	eax, DWORD PTR _it$95145[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _it$95145[ebp]
	call	DWORD PTR [edx+328]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 332  : 	  str = it->m_strItem;

	mov	eax, DWORD PTR _it$95145[ebp]
	add	eax, 116				; 00000074H
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 333  : 	  delete it;      

	mov	eax, DWORD PTR _it$95145[ebp]
	mov	DWORD PTR $T95852[ebp], eax
	mov	ecx, DWORD PTR $T95852[ebp]
	mov	DWORD PTR $T95851[ebp], ecx
	cmp	DWORD PTR $T95851[ebp], 0
	je	SHORT $L95853
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95851[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95851[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $L95854
$L95853:
	mov	DWORD PTR tv128[ebp], 0
$L95854:

; 334  : 	  if ( ret == IDOK ) {

	cmp	DWORD PTR _ret$[ebp], 1
	jne	$L95143

; 335  : 		 strcpy( buf1, pATextTypes->toTextType( str ));

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 336  : 		 CHelpEdit *hlp = new CHelpEdit(this);

	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	push	456					; 000001c8H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T95856[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T95856[ebp], 0
	je	SHORT $L95857
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T95856[ebp]
	call	??0CHelpEdit@@QAE@PAVCWnd@@@Z		; CHelpEdit::CHelpEdit
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $L95858
$L95857:
	mov	DWORD PTR tv149[ebp], 0
$L95858:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T95855[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T95855[ebp]
	mov	DWORD PTR _hlp$95156[ebp], eax

; 337  : 		 hlp->m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hlp$95156[ebp]
	add	ecx, 368				; 00000170H
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 338  : 		 ret = hlp->DoModal();

	mov	eax, DWORD PTR _hlp$95156[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _hlp$95156[ebp]
	call	DWORD PTR [edx+328]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 339  : 		 delete hlp;

	mov	eax, DWORD PTR _hlp$95156[ebp]
	mov	DWORD PTR $T95860[ebp], eax
	mov	ecx, DWORD PTR $T95860[ebp]
	mov	DWORD PTR $T95859[ebp], ecx
	cmp	DWORD PTR $T95859[ebp], 0
	je	SHORT $L95861
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T95859[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T95859[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $L95143
$L95861:
	mov	DWORD PTR tv162[ebp], 0
$L95143:

; 340  : 		}
; 341  : 	} while ( ret == IDOK );

	cmp	DWORD PTR _ret$[ebp], 1
	je	$L95142

; 342  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95873
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95873:
	DD	2
	DD	$L95872
$L95872:
	DD	-64					; ffffffc0H
	DD	20					; 00000014H
	DD	$L95868
	DD	-76					; ffffffb4H
	DD	4
	DD	$L95869
$L95869:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95868:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$1:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 6
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95848[ebp]
	push	ecx
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__unwindfunclet$?OnHelptxt@CMainFrame@@IAEXXZ$2:
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnHelptxt@CMainFrame@@IAEXXZ@4JA
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET FLAT:_THIS_FILE
	mov	ecx, DWORD PTR $T95856[ebp]
	push	ecx
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__ehhandler$?OnHelptxt@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnHelptxt@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnHelptxt@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnHelptxt
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateHelptxt, COMDAT
; _this$ = ecx

; 345  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 346  : 	// TODO: Add your command update UI handler code here
; 347  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 348  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateHelptxt@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateHelptxt
_TEXT	ENDS
PUBLIC	??1CReportEdit@@UAE@XZ				; CReportEdit::~CReportEdit
EXTRN	??0CReportEdit@@QAE@PAVCWnd@@@Z:NEAR		; CReportEdit::CReportEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$2
__ehfuncinfo$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ DD 019930520H
	DD	03H
	DD	FLAT:__unwindtable$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_rep$ = -680						; size = 472
_str$ = -200						; size = 4
_it$ = -188						; size = 128
_buf1$ = -52						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ PROC NEAR ; CMainFrame::OnEdittextsourcesReporttextsources, COMDAT
; _this$ = ecx

; 351  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 864				; 00000360H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-876]
	mov	ecx, 216				; 000000d8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 352  : 	// TODO: Add your command handler code here
; 353  : 	char buf1[20];
; 354  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 355  : 	it.m_type=1;

	mov	DWORD PTR _it$[ebp+120], 1

; 356  : 	it.m_ary= 0;

	mov	DWORD PTR _it$[ebp+124], 0

; 357  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95174

; 358  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95171
$L95174:

; 359  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 360  :     strcpy( buf1, pATextTypes->toTextType(str ) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 361  : 	CReportEdit rep(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rep$[ebp]
	call	??0CReportEdit@@QAE@PAVCWnd@@@Z		; CReportEdit::CReportEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 362  : 	rep.m_TextType = buf1;

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rep$[ebp+380]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=

; 363  : 	rep.DoModal();

	lea	ecx, DWORD PTR _rep$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 364  : 
; 365  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rep$[ebp]
	call	??1CReportEdit@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95171:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95894
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 876				; 0000036cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95894:
	DD	4
	DD	$L95893
$L95893:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$L95887
	DD	-188					; ffffff44H
	DD	128					; 00000080H
	DD	$L95888
	DD	-200					; ffffff38H
	DD	4
	DD	$L95889
	DD	-680					; fffffd58H
	DD	472					; 000001d8H
	DD	$L95890
$L95890:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
$L95889:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95888:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L95887:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ$2:
	lea	ecx, DWORD PTR _rep$[ebp]
	jmp	??1CReportEdit@@UAE@XZ
__ehhandler$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnEdittextsourcesReporttextsources@CMainFrame@@IAEXXZ ENDP ; CMainFrame::OnEdittextsourcesReporttextsources
PUBLIC	??1CTabctrlctrl1@@UAE@XZ			; CTabctrlctrl1::~CTabctrlctrl1
PUBLIC	??1CDReportText@@UAE@XZ				; CDReportText::~CDReportText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReportEdit@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CReportEdit@@UAE@XZ$5
__ehfuncinfo$??1CReportEdit@@UAE@XZ DD 019930520H
	DD	06H
	DD	FLAT:__unwindtable$??1CReportEdit@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??1CReportEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CReportEdit@@UAE@XZ PROC NEAR			; CReportEdit::~CReportEdit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReportEdit@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1CTabctrlctrl1@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??1CDReportText@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CWSpell@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReportEdit@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CReportEdit@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CWSpell@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CDReportText@@UAE@XZ
__unwindfunclet$??1CReportEdit@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$??1CReportEdit@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$??1CReportEdit@@UAE@XZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??1CReportEdit@@UAE@XZ
	jmp	___CxxFrameHandler
text$x	ENDS
??1CReportEdit@@UAE@XZ ENDP				; CReportEdit::~CReportEdit
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CDReportText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CDReportText@@UAE@XZ PROC NEAR			; CDReportText::~CDReportText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDaoRecordset@@UAE@XZ		; CDaoRecordset::~CDaoRecordset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDReportText@@UAE@XZ ENDP				; CDReportText::~CDReportText
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1CTabctrlctrl1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CTabctrlctrl1@@UAE@XZ PROC NEAR			; CTabctrlctrl1::~CTabctrlctrl1, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTabctrlctrl1@@UAE@XZ ENDP				; CTabctrlctrl1::~CTabctrlctrl1
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateEdittextsourcesReporttextsources, COMDAT
; _this$ = ecx

; 368  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 369  : 	// TODO: Add your command update UI handler code here
; 370  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 371  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEdittextsourcesReporttextsources@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateEdittextsourcesReporttextsources
_TEXT	ENDS
PUBLIC	??1CSetup@@UAE@XZ				; CSetup::~CSetup
EXTRN	??0CSetup@@QAE@PAVCWnd@@@Z:NEAR			; CSetup::CSetup
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnOptionsSetup@CMainFrame@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnOptionsSetup@CMainFrame@@IAEXXZ$0
__ehfuncinfo$?OnOptionsSetup@CMainFrame@@IAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnOptionsSetup@CMainFrame@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnOptionsSetup@CMainFrame@@IAEXXZ
_TEXT	SEGMENT
_st$ = -152						; size = 124
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnOptionsSetup@CMainFrame@@IAEXXZ PROC NEAR		; CMainFrame::OnOptionsSetup, COMDAT
; _this$ = ecx

; 374  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnOptionsSetup@CMainFrame@@IAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 375  : 	// TODO: Add your command handler code here
; 376  : 	CSetup st;

	push	0
	lea	ecx, DWORD PTR _st$[ebp]
	call	??0CSetup@@QAE@PAVCWnd@@@Z		; CSetup::CSetup
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 377  :    st.DoModal();

	lea	ecx, DWORD PTR _st$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 378  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _st$[ebp]
	call	??1CSetup@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95933
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95933:
	DD	1
	DD	$L95932
$L95932:
	DD	-152					; ffffff68H
	DD	124					; 0000007cH
	DD	$L95930
$L95930:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnOptionsSetup@CMainFrame@@IAEXXZ$0:
	lea	ecx, DWORD PTR _st$[ebp]
	jmp	??1CSetup@@UAE@XZ
__ehhandler$?OnOptionsSetup@CMainFrame@@IAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnOptionsSetup@CMainFrame@@IAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnOptionsSetup@CMainFrame@@IAEXXZ ENDP			; CMainFrame::OnOptionsSetup
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1CSetup@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSetup@@UAE@XZ PROC NEAR				; CSetup::~CSetup, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSetup@@UAE@XZ ENDP					; CSetup::~CSetup
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateOptionsSetup, COMDAT
; _this$ = ecx

; 381  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 382  : 	// TODO: Add your command update UI handler code here
; 383  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 384  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateOptionsSetup@CMainFrame@@IAEXPAVCCmdUI@@@Z ENDP ; CMainFrame::OnUpdateOptionsSetup
_TEXT	ENDS
PUBLIC	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
PUBLIC	?SetTextType@CArrayEdit@@QAEXPAD@Z		; CArrayEdit::SetTextType
PUBLIC	?SetSymTypes@CArrayEdit@@QAEXPAD@Z		; CArrayEdit::SetSymTypes
PUBLIC	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
EXTRN	??0CArrayEdit@@QAE@PAVCWnd@@@Z:NEAR		; CArrayEdit::CArrayEdit
EXTRN	??1CArrayEdit@@UAE@XZ:NEAR			; CArrayEdit::~CArrayEdit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnArraytext@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$3
__ehfuncinfo$?OnArraytext@CMainFrame@@QAEXXZ DD 019930520H
	DD	04H
	DD	FLAT:__unwindtable$?OnArraytext@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnArraytext@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
tv137 = -596						; size = 4
tv81 = -592						; size = 4
$T95948 = -584						; size = 4
_ed$ = -380						; size = 140
_str$ = -232						; size = 4
_it$ = -220						; size = 128
_buf1$ = -84						; size = 50
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnArraytext@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnArraytext, COMDAT
; _this$ = ecx

; 387  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnArraytext@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-596]
	mov	ecx, 146				; 00000092H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 388  : 	// TODO: Add your command handler code here
; 389  : 	char buf1[50];
; 390  : 	CSelectTextItem it(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??0CSelectTextItem@@QAE@PAVCWnd@@@Z	; CSelectTextItem::CSelectTextItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 391  : 	it.m_type=1;

	mov	DWORD PTR _it$[ebp+120], 1

; 392  : 	it.m_ary = 1;

	mov	DWORD PTR _it$[ebp+124], 1

; 393  : 	if ( it.DoModal() != IDOK )

	lea	ecx, DWORD PTR _it$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	je	SHORT $L95200

; 394  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
	jmp	$L95197
$L95200:

; 395  : 	CString str = it.m_strItem;

	lea	eax, DWORD PTR _it$[ebp+116]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 396  :     strcpy( buf1, pATextTypes->toTextType( str ) );

	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
	push	eax
	lea	ecx, DWORD PTR _buf1$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 397  :     CArrayEdit ed(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	??0CArrayEdit@@QAE@PAVCWnd@@@Z		; CArrayEdit::CArrayEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 398  : 	ed.SetTextType(buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	?SetTextType@CArrayEdit@@QAEXPAD@Z	; CArrayEdit::SetTextType

; 399  : 	strcpy( buf1, pATextTypes->toSymType( CString(buf1), 1 ) );

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T95948[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv137[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	1
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	ecx, DWORD PTR ?pATextTypes@@3PAVCATextTypeAry@@A ; pATextTypes
	call	?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ; CATextTypeAry::toSymType
	push	eax
	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T95948[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 400  : 	ed.SetSymTypes(buf1);

	lea	eax, DWORD PTR _buf1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ed$[ebp]
	call	?SetSymTypes@CArrayEdit@@QAEXPAD@Z	; CArrayEdit::SetSymTypes

; 401  :     ed.DoModal();

	lea	ecx, DWORD PTR _ed$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 402  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _ed$[ebp]
	call	??1CArrayEdit@@UAE@XZ			; CArrayEdit::~CArrayEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1CSelectTextItem@@UAE@XZ
$L95197:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95962
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 596				; 00000254H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95962:
	DD	4
	DD	$L95961
$L95961:
	DD	-84					; ffffffacH
	DD	50					; 00000032H
	DD	$L95955
	DD	-220					; ffffff24H
	DD	128					; 00000080H
	DD	$L95956
	DD	-232					; ffffff18H
	DD	4
	DD	$L95957
	DD	-380					; fffffe84H
	DD	140					; 0000008cH
	DD	$L95958
$L95958:
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$L95957:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L95956:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$L95955:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1CSelectTextItem@@UAE@XZ
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$2:
	lea	ecx, DWORD PTR _ed$[ebp]
	jmp	??1CArrayEdit@@UAE@XZ			; CArrayEdit::~CArrayEdit
__unwindfunclet$?OnArraytext@CMainFrame@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T95948[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?OnArraytext@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnArraytext@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnArraytext@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnArraytext
PUBLIC	?symtypes@CATextType@@QAEPADXZ			; CATextType::symtypes
EXTRN	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z:NEAR ; CATextTypeAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
;	COMDAT ?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_pf$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_tp$ = 12						; size = 4
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z PROC NEAR ; CATextTypeAry::toSymType, COMDAT
; _this$ = ecx

; 40   :     char *toSymType( CString &name, int tp ) { CATextType *pf=Find(name, tp); if ( pf==NULL) return NULL; else return( pf->symtypes() ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _tp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z ; CATextTypeAry::Find
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	jne	SHORT $L93598
	xor	eax, eax
	jmp	SHORT $L93596
$L93598:
	mov	ecx, DWORD PTR _pf$[ebp]
	call	?symtypes@CATextType@@QAEPADXZ		; CATextType::symtypes
$L93596:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toSymType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@H@Z ENDP ; CATextTypeAry::toSymType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?symtypes@CATextType@@QAEPADXZ PROC NEAR		; CATextType::symtypes, COMDAT
; _this$ = ecx

; 20   :     char *symtypes() { return _symtypes; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?symtypes@CATextType@@QAEPADXZ ENDP			; CATextType::symtypes
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\arrayedit.h
_TEXT	ENDS
;	COMDAT ?SetTextType@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?SetTextType@CArrayEdit@@QAEXPAD@Z PROC NEAR		; CArrayEdit::SetTextType, COMDAT
; _this$ = ecx

; 27   : 	void SetTextType( char *p) {m_texttype = p;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTextType@CArrayEdit@@QAEXPAD@Z ENDP			; CArrayEdit::SetTextType
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?SetSymTypes@CArrayEdit@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?SetSymTypes@CArrayEdit@@QAEXPAD@Z PROC NEAR		; CArrayEdit::SetSymTypes, COMDAT
; _this$ = ecx

; 28   : 	void SetSymTypes( char *p) {m_symtypes=p;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSymTypes@CArrayEdit@@QAEXPAD@Z ENDP			; CArrayEdit::SetSymTypes
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateArraytext, COMDAT
; _this$ = ecx

; 405  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 406  : 	// TODO: Add your command update UI handler code here
; 407  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 408  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateArraytext@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateArraytext
_TEXT	ENDS
EXTRN	??0CNewLanguage@@QAE@PAVCWnd@@@Z:NEAR		; CNewLanguage::CNewLanguage
EXTRN	??1CNewLanguage@@UAE@XZ:NEAR			; CNewLanguage::~CNewLanguage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnAddlanguage@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnAddlanguage@CMainFrame@@QAEXXZ$0
__ehfuncinfo$?OnAddlanguage@CMainFrame@@QAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnAddlanguage@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnAddlanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
_lang$ = -148						; size = 120
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnAddlanguage@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnAddlanguage, COMDAT
; _this$ = ecx

; 411  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnAddlanguage@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 	// TODO: Add your command handler code here
; 413  : #ifdef _UNICODE
; 414  : 	CNewLanguage lang(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lang$[ebp]
	call	??0CNewLanguage@@QAE@PAVCWnd@@@Z	; CNewLanguage::CNewLanguage
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 415  : 	lang.DoModal();

	lea	ecx, DWORD PTR _lang$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 416  : #endif
; 417  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lang$[ebp]
	call	??1CNewLanguage@@UAE@XZ			; CNewLanguage::~CNewLanguage
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95984
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95984:
	DD	1
	DD	$L95983
$L95983:
	DD	-148					; ffffff6cH
	DD	120					; 00000078H
	DD	$L95981
$L95981:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnAddlanguage@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _lang$[ebp]
	jmp	??1CNewLanguage@@UAE@XZ			; CNewLanguage::~CNewLanguage
__ehhandler$?OnAddlanguage@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnAddlanguage@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnAddlanguage@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnAddlanguage
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateAddlanguage, COMDAT
; _this$ = ecx

; 420  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 421  : 	// TODO: Add your command update UI handler code here
; 422  : #ifndef _UNICODE
; 423  : 	pCmdUI->Enable(0);
; 424  : #else
; 425  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 426  : #endif
; 427  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateAddlanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateAddlanguage
_TEXT	ENDS
EXTRN	??0CSetLanguage@@QAE@PAVCWnd@@@Z:NEAR		; CSetLanguage::CSetLanguage
EXTRN	??1CSetLanguage@@UAE@XZ:NEAR			; CSetLanguage::~CSetLanguage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetLanguage@CMainFrame@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetLanguage@CMainFrame@@QAEXXZ$0
__ehfuncinfo$?OnSetLanguage@CMainFrame@@QAEXXZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetLanguage@CMainFrame@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?OnSetLanguage@CMainFrame@@QAEXXZ
_TEXT	SEGMENT
_setlang$ = -224					; size = 196
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?OnSetLanguage@CMainFrame@@QAEXXZ PROC NEAR		; CMainFrame::OnSetLanguage, COMDAT
; _this$ = ecx

; 430  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSetLanguage@CMainFrame@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 431  : 	// TODO: Add your command handler code here
; 432  : #ifdef _UNICODE
; 433  : 	CSetLanguage setlang(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _setlang$[ebp]
	call	??0CSetLanguage@@QAE@PAVCWnd@@@Z	; CSetLanguage::CSetLanguage
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 434  : 	setlang.DoModal();

	lea	ecx, DWORD PTR _setlang$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal

; 435  : #endif
; 436  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setlang$[ebp]
	call	??1CSetLanguage@@UAE@XZ			; CSetLanguage::~CSetLanguage
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L95998
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L95998:
	DD	1
	DD	$L95997
$L95997:
	DD	-224					; ffffff20H
	DD	196					; 000000c4H
	DD	$L95995
$L95995:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetLanguage@CMainFrame@@QAEXXZ$0:
	lea	ecx, DWORD PTR _setlang$[ebp]
	jmp	??1CSetLanguage@@UAE@XZ			; CSetLanguage::~CSetLanguage
__ehhandler$?OnSetLanguage@CMainFrame@@QAEXXZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?OnSetLanguage@CMainFrame@@QAEXXZ
	jmp	___CxxFrameHandler
text$x	ENDS
?OnSetLanguage@CMainFrame@@QAEXXZ ENDP			; CMainFrame::OnSetLanguage
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z PROC NEAR ; CMainFrame::OnUpdateSetLanguage, COMDAT
; _this$ = ecx

; 439  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 440  : 	// TODO: Add your command update UI handler code here
; 441  : #ifndef _UNICODE
; 442  : 	pCmdUI->Enable(0);
; 443  : #else
; 444  : 	pCmdUI->Enable();

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 445  : #endif
; 446  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateSetLanguage@CMainFrame@@QAEXPAVCCmdUI@@@Z ENDP	; CMainFrame::OnUpdateSetLanguage
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<unsigned short,0>::operator=
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=, COMDAT
; _this$ = ecx

; 967  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<unsigned short,0>::operator=

; 969  : 
; 970  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 971  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::GetString
PUBLIC	?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetString
PUBLIC	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
PUBLIC	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
PUBLIC	?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<unsigned short,0>::CloneData
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$95234 = -44					; size = 4
_pOldData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::operator=, COMDAT
; _this$ = ecx

; 273  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 275  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 276  : 		if( pSrcData != pOldData)

	mov	eax, DWORD PTR _pSrcData$[ebp]
	cmp	eax, DWORD PTR _pOldData$[ebp]
	je	SHORT $L95230

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L95232
	mov	eax, DWORD PTR _pSrcData$[ebp]
	mov	ecx, DWORD PTR _pOldData$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $L95231
$L95232:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ ; ATL::CSimpleStringT<unsigned short,0>::GetString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetString

; 281  : 			}
; 282  : 			else

	jmp	SHORT $L95230
$L95231:

; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<unsigned short,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$95234[ebp], eax

; 285  : 				pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 286  : 				Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$95234[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L95230:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CSimpleStringT@G$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::operator=
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L96013
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96013
	int	3
$L96013:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L26116

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L26116:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
PUBLIC	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 796  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>

; 797  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 814  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>

; 815  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
PUBLIC	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 850  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 		if( !CheckImplicitLoad( pszSrc ) )

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L92626

; 852  : 		{
; 853  : 			*this = pszSrc;

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
$L92626:

; 854  : 		}
; 855  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::GetLength, COMDAT
; _this$ = ecx

; 500  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	eax, DWORD PTR [eax+4]

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetLength
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<unsigned short,0>::Empty
PUBLIC	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
tv67 = -232						; size = 4
_pszBuffer$92707 = -32					; size = 4
_nDestLength$ = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=, COMDAT
; _this$ = ecx

; 989  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 990  : 		// nDestLength is in XCHARs
; 991  : 		int nDestLength = (pszSrc != NULL) ? StringTraits::GetBaseTypeLength( pszSrc ) : 0;

	cmp	DWORD PTR _pszSrc$[ebp], 0
	je	SHORT $L96034
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 4
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L96035
$L96034:
	mov	DWORD PTR tv67[ebp], 0
$L96035:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _nDestLength$[ebp], ecx

; 992  : 		if( nDestLength > 0 )

	cmp	DWORD PTR _nDestLength$[ebp], 0
	jle	SHORT $L92706

; 993  : 		{
; 994  : 			PXSTR pszBuffer = GetBuffer( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92707[ebp], eax

; 995  : 			StringTraits::ConvertToBaseType( pszBuffer, nDestLength, pszSrc );

	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nDestLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92707[ebp]
	push	edx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 996  : 			ReleaseBufferSetLength( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 997  : 		}
; 998  : 		else

	jmp	SHORT $L92708
$L92706:

; 999  : 		{
; 1000 : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<unsigned short,0>::Empty
$L92708:

; 1001 : 		}
; 1002 : 
; 1003 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1004 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
EXTRN	__imp__MultiByteToWideChar@24:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 653  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 654  : 		// Returns required buffer size in wchar_ts
; 655  : 		return ::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, -1, NULL, 0 )-1;

	mov	esi, esp
	push	0
	push	0
	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1

; 656  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 679  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 680  : 		// nLen is in wchar_ts
; 681  : 		::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength );

	mov	esi, esp
	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nSrcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 682  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ ; `string'
PUBLIC	??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ ; `string'
EXTRN	?atlTraceString@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceString
EXTRN	@_RTC_Check_4_to_2@4:NEAR
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT
??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ DB 'W'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	':', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '(', 00H, '%', 00H, 'u', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
$T96044 = -240						; size = 8
_nID$92726 = -32					; size = 4
_bRet$ = -17						; size = 1
_this$ = -8						; size = 4
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2230 : 		bool bRet = false;

	mov	BYTE PTR _bRet$[ebp], 0

; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	cmp	DWORD PTR _pv$[ebp], 0
	je	SHORT $L92725
	mov	eax, DWORD PTR _pv$[ebp]
	shr	eax, 16					; 00000010H
	test	eax, eax
	jne	SHORT $L92725

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

	mov	ecx, DWORD PTR _pv$[ebp]
	and	ecx, 65535				; 0000ffffH
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	mov	DWORD PTR _nID$92726[ebp], eax

; 2235 : 			if( !LoadString( nID ) )

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
	test	eax, eax
	jne	SHORT $L92730

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceString@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceString
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2237					; 000008bdH
	push	OFFSET FLAT:??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T96044[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
$L92730:

; 2238 : 			}
; 2239 : 			bRet = true;

	mov	BYTE PTR _bRet$[ebp], 1
$L92725:

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );

	mov	al, BYTE PTR _bRet$[ebp]

; 2243 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 168  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 169  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 170  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 171  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_hInst$ = -20						; size = 4
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1969 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
	add	esp, 4
	mov	DWORD PTR _hInst$[ebp], eax

; 1971 : 		if( hInst == NULL )

	cmp	DWORD PTR _hInst$[ebp], 0
	jne	SHORT $L92647

; 1972 : 		{
; 1973 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92645
$L92647:

; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
$L92645:

; 1977 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_pszBuffer$ = -44					; size = 4
_nLength$ = -32						; size = 4
_pImage$ = -20						; size = 4
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1981 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _pImage$[ebp], eax

; 1983 : 		if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L92718

; 1984 : 		{
; 1985 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92716
$L92718:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 8
	mov	DWORD PTR _nLength$[ebp], eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 1991 : 		ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 1992 : 
; 1993 : 		return( TRUE );

	mov	eax, 1
$L92716:

; 1994 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceW@12:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -8					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	ecx, DWORD PTR _id$[ebp]
	shr	ecx, 4
	add	ecx, 1
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindResourceW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L25769

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25761
$L25769:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L25761:

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -56						; size = 4
_hGlobal$ = -44						; size = 4
_nResourceSize$ = -32					; size = 4
_pImageEnd$ = -20					; size = 4
_pImage$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L25746

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L25740
$L25746:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	eax, DWORD PTR _hGlobal$[ebp]
	push	eax
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L25748

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25748:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	eax, DWORD PTR _pImage$[ebp]
	add	eax, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], eax

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L25751:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L25752
	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L25752

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pImage$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _pImage$[ebp], eax

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L25751
$L25752:

; 267  : 	if( pImage >= pImageEnd )

	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L25756

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25756:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $L25757

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25757:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L25740:

; 277  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 671  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 672  : 		(void)pszSrc;
; 673  : 		// Returns required buffer size in wchar_ts
; 674  : 		return nLength;

	mov	eax, DWORD PTR _nLength$[ebp]

; 675  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 686  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 687  : 		(void)nSrcLength;
; 688  : 		// nLen is in wchar_ts
; 689  : 		memcpy( pszDest, pszSrc, nDestLength*sizeof( wchar_t ) );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 690  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L96062
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96062
	int	3
$L96062:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_pNewData$ = -32					; size = 4
_pSrcData$ = -20					; size = 4
_this$ = -8						; size = 4
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 217  : 	CSimpleStringT( const CSimpleStringT& strSrc )

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

	mov	ecx, DWORD PTR _strSrc$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pSrcData$[ebp], eax

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

	mov	eax, DWORD PTR _pSrcData$[ebp]
	push	eax
	call	?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<unsigned short,0>::CloneData
	add	esp, 4
	mov	DWORD PTR _pNewData$[ebp], eax

; 221  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach

; 222  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92761

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
$L92761:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
_TEXT	ENDS
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:NEAR ; AfxFindStringResourceHandle
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   : 		return( AfxFindStringResourceHandle( nID ) );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::SetLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92796 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92793

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92790
$L92793:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92794

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92790
$L92794:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92796[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92796[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L92790:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::Empty
_TEXT	ENDS
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L96081
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96081
	int	3
$L96081:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L96082
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96082
	int	3
$L96082:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92769
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92768
$L92769:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92768:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	WORD PTR [ecx+edx*2], 0
$L96080:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::SetLength
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ ; `string'
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T96085 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T96085[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L25398

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L25398:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L96084:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L96088
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96088
	int	3
$L96088:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92813 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92809

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92809:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92810

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92807
$L92810:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92807

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92813[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92813[ebp], 1024	; 00000400H
	jle	SHORT $L92814

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92813[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92815
$L92814:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92815:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92816

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92816:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Reallocate
$L92807:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pNewStringMgr$ = -20					; size = 4
_pNewData$ = -8						; size = 4
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CloneData, COMDAT

; 801  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 802  : 		CStringData* pNewData = NULL;

	mov	DWORD PTR _pNewData$[ebp], 0

; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewStringMgr$[ebp], eax

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L92820
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L92820

; 806  : 		{
; 807  : 			pNewData = pData;

	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pNewData$[ebp], eax

; 808  : 			pNewData->AddRef();

	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?AddRef@CStringData@ATL@@QAEXXZ		; ATL::CStringData::AddRef

; 809  : 		}
; 810  : 		else

	jmp	SHORT $L92821
$L92820:

; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pNewStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pNewStringMgr$[ebp]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 813  : 			if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92823

; 814  : 			{
; 815  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92823:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92821:

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
$L96098:

; 822  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloneData@?$CSimpleStringT@G$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CloneData
_TEXT	ENDS
PUBLIC	??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@		; `string'
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT
??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@ DB 'nRefs > 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		ATLASSERT(nRefs > 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jg	SHORT $L96101
	push	OFFSET FLAT:??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
	push	0
	push	71					; 00000047H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96101
	int	3
$L96101:

; 72   : 		_InterlockedIncrement(&nRefs);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyCharsOverlapped
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z
_TEXT	SEGMENT
_pszBuffer$92832 = -44					; size = 4
_nOffset$92831 = -32					; size = 4
_nOldLength$92830 = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 		if( nLength == 0 )

	cmp	DWORD PTR _nLength$[ebp], 0
	jne	SHORT $L92826

; 585  : 		{
; 586  : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<unsigned short,0>::Empty

; 587  : 		}
; 588  : 		else

	jmp	$L96103
$L92826:

; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

	cmp	DWORD PTR _pszSrc$[ebp], 0
	jne	SHORT $L92828

; 597  : 				AtlThrow(E_INVALIDARG);			

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92828:

; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	mov	DWORD PTR _nOldLength$92830[ebp], eax

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ ; ATL::CSimpleStringT<unsigned short,0>::GetString
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	mov	DWORD PTR _nOffset$92831[ebp], ecx

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92832[ebp], eax

; 605  : 			if( nOffset <= nOldLength )

	mov	eax, DWORD PTR _nOffset$92831[ebp]
	cmp	eax, DWORD PTR _nOldLength$92830[ebp]
	ja	SHORT $L92833

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nOffset$92831[ebp]
	mov	edx, DWORD PTR _pszBuffer$92832[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$92832[ebp]
	push	ecx
	call	?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyCharsOverlapped
	add	esp, 12					; 0000000cH

; 608  : 			}
; 609  : 			else

	jmp	SHORT $L92834
$L92833:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92832[ebp]
	push	edx
	call	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
	add	esp, 12					; 0000000cH
$L92834:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
$L96103:

; 614  : 		}
; 615  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetString@?$CSimpleStringT@G$0A@@ATL@@QAEXPBGH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::SetString
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L96107:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92845

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92845:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L96110
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L96111
$L96110:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L96111:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L96109:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<unsigned short,0>::Fork
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L96114
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L96114
	int	3
$L96114:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92855

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92855:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L96113:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetString, COMDAT
; _this$ = ecx

; 509  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 510  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 511  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetString@?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetString
_TEXT	ENDS
EXTRN	_memmove:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CopyCharsOverlapped, COMDAT

; 656  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 658  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyCharsOverlapped@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CopyCharsOverlapped
_TEXT	ENDS
END
