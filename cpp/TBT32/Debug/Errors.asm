; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\Errors.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_07BLIMPI@ERROR?$CB?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BA@PNIKOCLL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?$CB?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DG@GPNEOLOE@?$AAF?$AAa?$AAt?$AAa?$AAl?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BM@KKLGCKNL@?$AAd?$AAo?$AA_?$AAm?$AAe?$AAm?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?6?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@NFDFHBPP@Out?5of?5Memory?5Error?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CC@FFCDINGB@File?5or?5Directory?5Does?5Not?5Exist@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@KIJFDOMB@File?5is?5Not?5an?5executable?5File?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@GJECDMNN@Not?5Enough?5Memory?5Exists?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@KHCNHLOO@Access?5To?5File?5or?5Device?5Denied?$CB@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@KGOPIKJD@File?5Exists?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@EFAHMHJ@Trying?5to?5Rename?5File?5to?5Another@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@JKBMFFKI@Not?5Enough?5Files?5in?5CONFIG?4SYS?5n@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@KDFLGNFE@No?5Space?5Left?5on?5Drive?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFGKKNKJ@Error?5or?5Printer?5Not?5Ready?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1EE@CIHHNFLL@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1EA@DBAJCPCH@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAe?$AAx?$AAe?$AAc?$AAu@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DE@IIJMMOLC@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAE?$AAx@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1EC@HJDCMKDK@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAT?$AAo?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BK@EGHIPMPM@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$CB?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1GI@FJCMGOFE@?$AAT?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAR?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAF?$AAi?$AAl@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1GA@DOGIKKCH@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AAi?$AAn?$AA?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1CO@OJIJAKCA@?$AAN?$AAo?$AA?5?$AAS?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAL?$AAe?$AAf?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAD?$AAr?$AAi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DI@HELFBGAB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAr?$AA?5?$AAP?$AAr?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@MLCHLGDE@ILLEGAL?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@JOMENAHE@UNDEFINED?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08MANCFDK@?$CFs?5?3?5?$CFs?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1FG@KKKKPMPD@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?$CJ?$AA?5?$AAT?$AAB?$AAT?$AA?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1CO@LKJONCBG@?$AAI?$AAL?$AAL?$AAE?$AAG?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9?$AA?9?$AA?$CF@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DC@GKNPFHLD@?$AAU?$AAN?$AAD?$AAE?$AAF?$AAI?$AAN?$AAE?$AAD?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BG@DOEHDMFL@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?3?$AA?5?$AA?$CF?$AAl?$AAs?$AA?5?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?do_mem_error@@YAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?alert_box@@YAHPADPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?alert_box_ext@@YAHPADIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_error@@YAXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?valert_box_ext@@YAHPBDI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?alert_box@@YAHPAGPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?alert_box_ext@@YAHPAGIPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_error@@YAXPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?valert_box_ext@@YAHPBGI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??valert_box_ext@@YAHPBGI0PAD@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box_ext@@YAHPAGIPBGZZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box@@YAHPAGPBGZZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??valert_box_ext@@YAHPBDI0PAD@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box_ext@@YAHPADIPBDZZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box@@YAHPADPBDZZ@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?ERROR2@@3PADA					; ERROR2
PUBLIC	??_C@_07BLIMPI@ERROR?$CB?$CB?$AA@		; `string'
PUBLIC	?UERROR2@@3PAGA					; UERROR2
PUBLIC	??_C@_1BA@PNIKOCLL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?errors@@3PAPADA				; errors
PUBLIC	??_C@_0CC@FFCDINGB@File?5or?5Directory?5Does?5Not?5Exist@ ; `string'
PUBLIC	??_C@_0CA@KIJFDOMB@File?5is?5Not?5an?5executable?5File?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BK@GJECDMNN@Not?5Enough?5Memory?5Exists?$CB?$AA@ ; `string'
PUBLIC	??_C@_0CB@KHCNHLOO@Access?5To?5File?5or?5Device?5Denied?$CB@ ; `string'
PUBLIC	??_C@_0N@KGOPIKJD@File?5Exists?$CB?$AA@		; `string'
PUBLIC	??_C@_0DE@EFAHMHJ@Trying?5to?5Rename?5File?5to?5Another@ ; `string'
PUBLIC	??_C@_0DA@JKBMFFKI@Not?5Enough?5Files?5in?5CONFIG?4SYS?5n@ ; `string'
PUBLIC	??_C@_0BH@KDFLGNFE@No?5Space?5Left?5on?5Drive?$AA@ ; `string'
PUBLIC	??_C@_0BM@KFGKKNKJ@Error?5or?5Printer?5Not?5Ready?$CB?$AA@ ; `string'
PUBLIC	?uerrors@@3PAPAGA				; uerrors
PUBLIC	??_C@_1EE@CIHHNFLL@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAo@ ; `string'
PUBLIC	??_C@_1EA@DBAJCPCH@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAe?$AAx?$AAe?$AAc?$AAu@ ; `string'
PUBLIC	??_C@_1DE@IIJMMOLC@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAE?$AAx@ ; `string'
PUBLIC	??_C@_1EC@HJDCMKDK@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAT?$AAo?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAe@ ; `string'
PUBLIC	??_C@_1BK@EGHIPMPM@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GI@FJCMGOFE@?$AAT?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAR?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAF?$AAi?$AAl@ ; `string'
PUBLIC	??_C@_1GA@DOGIKKCH@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AAi?$AAn?$AA?5@ ; `string'
PUBLIC	??_C@_1CO@OJIJAKCA@?$AAN?$AAo?$AA?5?$AAS?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAL?$AAe?$AAf?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAD?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1DI@HELFBGAB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAr?$AA?5?$AAP?$AAr?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt@ ; `string'
;	COMDAT ??_C@_07BLIMPI@ERROR?$CB?$CB?$AA@
CONST	SEGMENT
??_C@_07BLIMPI@ERROR?$CB?$CB?$AA@ DB 'ERROR!!', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?ERROR2@@3PADA DD FLAT:??_C@_07BLIMPI@ERROR?$CB?$CB?$AA@ ; ERROR2
_DATA	ENDS
;	COMDAT ??_C@_1BA@PNIKOCLL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@PNIKOCLL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?$CB?$AA?$AA@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '!', 00H, '!', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
_DATA	SEGMENT
?UERROR2@@3PAGA DD FLAT:??_C@_1BA@PNIKOCLL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?$CB?$AA?$AA@ ; UERROR2
_a_title DB	'A Message from TBT (Text Builder Toolkit)', 00H
	ORG $+2
_stdmsg	DB	'%s : System Error #%d--%s', 00H
	ORG $+2
_ua_title DB	'A', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o'
	DB	00H, 'm', 00H, ' ', 00H, 'T', 00H, 'B', 00H, 'T', 00H, ' ', 00H
	DB	'(', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, 'B'
	DB	00H, 'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 'k', 00H, 'i'
	DB	00H, 't', 00H, ')', 00H, 00H, 00H
_ustdmsg DB	'%', 00H, 'l', 00H, 's', 00H, ' ', 00H, ':', 00H, ' ', 00H
	DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, ' '
	DB	00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'#', 00H, '%', 00H, 'd', 00H, '-', 00H, '-', 00H, '%', 00H, 'l'
	DB	00H, 's', 00H, 00H, 00H
_DATA	ENDS
;	COMDAT ??_C@_0CC@FFCDINGB@File?5or?5Directory?5Does?5Not?5Exist@
CONST	SEGMENT
??_C@_0CC@FFCDINGB@File?5or?5Directory?5Does?5Not?5Exist@ DB 'File or Dir'
	DB	'ectory Does Not Exist!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KIJFDOMB@File?5is?5Not?5an?5executable?5File?$CB?$AA@
CONST	SEGMENT
??_C@_0CA@KIJFDOMB@File?5is?5Not?5an?5executable?5File?$CB?$AA@ DB 'File '
	DB	'is Not an executable File!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GJECDMNN@Not?5Enough?5Memory?5Exists?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@GJECDMNN@Not?5Enough?5Memory?5Exists?$CB?$AA@ DB 'Not Enough Me'
	DB	'mory Exists!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KHCNHLOO@Access?5To?5File?5or?5Device?5Denied?$CB@
CONST	SEGMENT
??_C@_0CB@KHCNHLOO@Access?5To?5File?5or?5Device?5Denied?$CB@ DB 'Access T'
	DB	'o File or Device Denied!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGOPIKJD@File?5Exists?$CB?$AA@
CONST	SEGMENT
??_C@_0N@KGOPIKJD@File?5Exists?$CB?$AA@ DB 'File Exists!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EFAHMHJ@Trying?5to?5Rename?5File?5to?5Another@
CONST	SEGMENT
??_C@_0DE@EFAHMHJ@Trying?5to?5Rename?5File?5to?5Another@ DB 'Trying to Re'
	DB	'name File to AnotherDirectory or Drive!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JKBMFFKI@Not?5Enough?5Files?5in?5CONFIG?4SYS?5n@
CONST	SEGMENT
??_C@_0DA@JKBMFFKI@Not?5Enough?5Files?5in?5CONFIG?4SYS?5n@ DB 'Not Enough'
	DB	' Files in CONFIG.SYS need at least 12', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KDFLGNFE@No?5Space?5Left?5on?5Drive?$AA@
CONST	SEGMENT
??_C@_0BH@KDFLGNFE@No?5Space?5Left?5on?5Drive?$AA@ DB 'No Space Left on D'
	DB	'rive', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFGKKNKJ@Error?5or?5Printer?5Not?5Ready?$CB?$AA@
CONST	SEGMENT
??_C@_0BM@KFGKKNKJ@Error?5or?5Printer?5Not?5Ready?$CB?$AA@ DB 'Error or P'
	DB	'rinter Not Ready!', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
	ORG $+4
?errors@@3PAPADA DD FLAT:_stdmsg			; errors
	DD	00H
	DD	FLAT:??_C@_0CC@FFCDINGB@File?5or?5Directory?5Does?5Not?5Exist@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_stdmsg
	DD	FLAT:??_C@_0CA@KIJFDOMB@File?5is?5Not?5an?5executable?5File?$CB?$AA@
	DD	FLAT:_stdmsg
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BK@GJECDMNN@Not?5Enough?5Memory?5Exists?$CB?$AA@
	DD	FLAT:??_C@_0CB@KHCNHLOO@Access?5To?5File?5or?5Device?5Denied?$CB@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@KGOPIKJD@File?5Exists?$CB?$AA@
	DD	FLAT:??_C@_0DE@EFAHMHJ@Trying?5to?5Rename?5File?5to?5Another@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_stdmsg
	DD	00H
	DD	FLAT:??_C@_0DA@JKBMFFKI@Not?5Enough?5Files?5in?5CONFIG?4SYS?5n@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BH@KDFLGNFE@No?5Space?5Left?5on?5Drive?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_stdmsg
	DD	FLAT:_stdmsg
	DD	00H
	DD	FLAT:_stdmsg
	DD	00H
	DD	FLAT:??_C@_0BM@KFGKKNKJ@Error?5or?5Printer?5Not?5Ready?$CB?$AA@
_DATA	ENDS
;	COMDAT ??_C@_1EE@CIHHNFLL@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAo@
CONST	SEGMENT
??_C@_1EE@CIHHNFLL@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAo@ DB 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'e', 00H, 's', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, ' '
	DB	00H, 'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, '!', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DBAJCPCH@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAe?$AAx?$AAe?$AAc?$AAu@
CONST	SEGMENT
??_C@_1EA@DBAJCPCH@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAe?$AAx?$AAe?$AAc?$AAu@ DB 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 's', 00H
	DB	' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'n'
	DB	00H, ' ', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 'c', 00H, 'u', 00H
	DB	't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@IIJMMOLC@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAE?$AAx@
CONST	SEGMENT
??_C@_1DE@IIJMMOLC@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAE?$AAx@ DB 'N'
	DB	00H, 'o', 00H, 't', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'o', 00H
	DB	'u', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, ' ', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HJDCMKDK@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAT?$AAo?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAe@
CONST	SEGMENT
??_C@_1EC@HJDCMKDK@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAT?$AAo?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAe@ DB 'A'
	DB	00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'T', 00H, 'o', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'e'
	DB	00H, 'n', 00H, 'i', 00H, 'e', 00H, 'd', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EGHIPMPM@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EGHIPMPM@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$CB?$AA?$AA@ DB 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@FJCMGOFE@?$AAT?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAR?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAF?$AAi?$AAl@
CONST	SEGMENT
??_C@_1GI@FJCMGOFE@?$AAT?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAR?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAF?$AAi?$AAl@ DB 'T'
	DB	00H, 'r', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'A', 00H, 'n'
	DB	00H, 'o', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'D', 00H
	DB	'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@DOGIKKCH@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AAi?$AAn?$AA?5@
CONST	SEGMENT
??_C@_1GA@DOGIKKCH@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AAi?$AAn?$AA?5@ DB 'N'
	DB	00H, 'o', 00H, 't', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'o', 00H
	DB	'u', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'C', 00H, 'O', 00H, 'N', 00H, 'F', 00H, 'I', 00H, 'G', 00H, '.'
	DB	00H, 'S', 00H, 'Y', 00H, 'S', 00H, ' ', 00H, 'n', 00H, 'e', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' ', 00H, 'l'
	DB	00H, 'e', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, '1', 00H
	DB	'2', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@OJIJAKCA@?$AAN?$AAo?$AA?5?$AAS?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAL?$AAe?$AAf?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAD?$AAr?$AAi@
CONST	SEGMENT
??_C@_1CO@OJIJAKCA@?$AAN?$AAo?$AA?5?$AAS?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAL?$AAe?$AAf?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAD?$AAr?$AAi@ DB 'N'
	DB	00H, 'o', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'L', 00H, 'e', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D', 00H, 'r', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@HELFBGAB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAr?$AA?5?$AAP?$AAr?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt@
CONST	SEGMENT
??_C@_1DI@HELFBGAB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAr?$AA?5?$AAP?$AAr?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'y', 00H, '!'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
	ORG $+4
?uerrors@@3PAPAGA DD FLAT:_ustdmsg			; uerrors
	DD	00H
	DD	FLAT:??_C@_1EE@CIHHNFLL@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAo@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ustdmsg
	DD	FLAT:??_C@_1EA@DBAJCPCH@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAe?$AAx?$AAe?$AAc?$AAu@
	DD	FLAT:_ustdmsg
	DD	00H
	DD	00H
	DD	FLAT:??_C@_1DE@IIJMMOLC@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAE?$AAx@
	DD	FLAT:??_C@_1EC@HJDCMKDK@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAT?$AAo?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAo?$AAr?$AA?5?$AAD?$AAe@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_1BK@EGHIPMPM@?$AAF?$AAi?$AAl?$AAe?$AA?5?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$CB?$AA?$AA@
	DD	FLAT:??_C@_1GI@FJCMGOFE@?$AAT?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAR?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAF?$AAi?$AAl@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ustdmsg
	DD	00H
	DD	FLAT:??_C@_1GA@DOGIKKCH@?$AAN?$AAo?$AAt?$AA?5?$AAE?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AAi?$AAn?$AA?5@
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_1CO@OJIJAKCA@?$AAN?$AAo?$AA?5?$AAS?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAL?$AAe?$AAf?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAD?$AAr?$AAi@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ustdmsg
	DD	FLAT:_ustdmsg
	DD	00H
	DD	FLAT:_ustdmsg
	DD	00H
	DD	FLAT:??_C@_1DI@HELFBGAB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAr?$AA?5?$AAP?$AAr?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt@
?spmsg@?1??do_error@@YAXPBD@Z@4PADA DB 'Call Technical Support With This '
	DB	'Error!', 00H				; `do_error'::`2'::spmsg
	ORG $+4
?spmsg@?1??do_error@@YAXPBG@Z@4PAGA DB 'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	' ', 00H, 'T', 00H, 'e', 00H, 'c', 00H, 'h', 00H, 'n', 00H, 'i'
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'S', 00H, 'u', 00H
	DB	'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, ' ', 00H, 'W'
	DB	00H, 'i', 00H, 't', 00H, 'h', 00H, ' ', 00H, 'T', 00H, 'h', 00H
	DB	'i', 00H, 's', 00H, ' ', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o'
	DB	00H, 'r', 00H, '!', 00H, 00H, 00H		; `do_error'::`2'::spmsg
_DATA	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?alert_box_ext@@YAHPADIPBDZZ			; alert_box_ext
PUBLIC	?do_mem_error@@YAXH@Z				; do_mem_error
PUBLIC	??_C@_1DG@GPNEOLOE@?$AAF?$AAa?$AAt?$AAa?$AAl?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5@ ; `string'
PUBLIC	??_C@_1BM@KKLGCKNL@?$AAd?$AAo?$AA_?$AAm?$AAe?$AAm?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?6?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BF@NFDFHBPP@Out?5of?5Memory?5Error?$CB?$AA@ ; `string'
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	__imp__FatalAppExitW@8:NEAR
EXTRN	__imp__OutputDebugStringW@4:NEAR
;	COMDAT rtc$IMZ
; File c:\astrow32dev\tbt32\errors.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT ??_C@_1DG@GPNEOLOE@?$AAF?$AAa?$AAt?$AAa?$AAl?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5@
CONST	SEGMENT
??_C@_1DG@GPNEOLOE@?$AAF?$AAa?$AAt?$AAa?$AAl?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5@ DB 'F'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'M'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, ' ', 00H
	DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, '!', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@KKLGCKNL@?$AAd?$AAo?$AA_?$AAm?$AAe?$AAm?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?6?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@KKLGCKNL@?$AAd?$AAo?$AA_?$AAm?$AAe?$AAm?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?6?$AA?$AA@ DB 'd'
	DB	00H, 'o', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, '_', 00H
	DB	'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 0aH, 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NFDFHBPP@Out?5of?5Memory?5Error?$CB?$AA@
CONST	SEGMENT
??_C@_0BF@NFDFHBPP@Out?5of?5Memory?5Error?$CB?$AA@ DB 'Out of Memory Erro'
	DB	'r!', 00H					; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?do_mem_error@@YAXH@Z
_TEXT	SEGMENT
_fatal$ = 8						; size = 4
?do_mem_error@@YAXH@Z PROC NEAR				; do_mem_error, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 24   :  if ( fatal )

	cmp	DWORD PTR _fatal$[ebp], 0
	je	SHORT $L92909

; 25   :     FatalAppExit(0, _T("Fatal Out of Memory Error!") );

	mov	esi, esp
	push	OFFSET FLAT:??_C@_1DG@GPNEOLOE@?$AAF?$AAa?$AAt?$AAa?$AAl?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5@
	push	0
	call	DWORD PTR __imp__FatalAppExitW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$L92909:

; 26   :  OutputDebugString( _T("do_mem_error\n") );

	mov	esi, esp
	push	OFFSET FLAT:??_C@_1BM@KKLGCKNL@?$AAd?$AAo?$AA_?$AAm?$AAe?$AAm?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?6?$AA?$AA@
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 27   :  alert_box_ext( ERROR2, MB_OK|MB_ICONSTOP, "Out of Memory Error!" );

	push	OFFSET FLAT:??_C@_0BF@NFDFHBPP@Out?5of?5Memory?5Error?$CB?$AA@
	push	16					; 00000010H
	mov	eax, DWORD PTR ?ERROR2@@3PADA		; ERROR2
	push	eax
	call	?alert_box_ext@@YAHPADIPBDZZ		; alert_box_ext
	add	esp, 12					; 0000000cH

; 28   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?do_mem_error@@YAXH@Z ENDP				; do_mem_error
_TEXT	ENDS
PUBLIC	?alert_box@@YAHPADPBDZZ				; alert_box
PUBLIC	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ		; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
PUBLIC	??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?__LINE__Var@?1??alert_box@@YAHPADPBDZZ@4JA	; `alert_box'::`2'::__LINE__Var
PUBLIC	??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@ ; `string'
PUBLIC	??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@ ; `string'
PUBLIC	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
PUBLIC	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__MessageBoxW@16:NEAR
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__assert:NEAR
EXTRN	_vsprintf:NEAR
EXTRN	_strcmp:NEAR
EXTRN	_strlen:NEAR
_BSS	SEGMENT
_buf	DB	01f4H DUP (?)
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?alert_box@@YAHPADPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?alert_box@@YAHPADPBDZZ$1
__ehfuncinfo$?alert_box@@YAHPADPBDZZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?alert_box@@YAHPADPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@
CONST	SEGMENT
??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@ DB 'A Messag'
	DB	'e from TBT (Text Builder Toolkit)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box@@YAHPADPBDZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??alert_box@@YAHPADPBDZZ@4JA DD 04dH	; `alert_box'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
CONST	SEGMENT
??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@ DB 'c:\astro'
	DB	'w32dev\tbt32\errors.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@
CONST	SEGMENT
??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@ DB 's'
	DB	'trlen( buf ) < sizeof( buf )', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?alert_box@@YAHPADPBDZZ
_TEXT	SEGMENT
tv146 = -300						; size = 4
tv144 = -296						; size = 4
tv147 = -292						; size = 4
tv142 = -292						; size = 4
$T93228 = -284						; size = 4
$T93229 = -272						; size = 4
$T93230 = -260						; size = 4
_marker$ = -56						; size = 4
_handle$ = -44						; size = 4
_a_title$ = -32						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_title$ = 8						; size = 4
_fmt$ = 12						; size = 4
?alert_box@@YAHPADPBDZZ PROC NEAR			; alert_box, COMDAT

; 77   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?alert_box@@YAHPADPBDZZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 78   :  int result;
; 79   :  char *a_title = "A Message from " PROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@

; 80   :  HWND handle;
; 81   :  va_list marker;
; 82   :   
; 83   :  if ( title == NULL || !strcmp(title, "")  )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L92949
	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L92948
$L92949:

; 84   :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L92948:

; 85   :  va_start( marker, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _marker$[ebp], eax

; 86   :  vsprintf( buf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_buf
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 87   :  va_end( marker );

	mov	DWORD PTR _marker$[ebp], 0

; 88   :  assert( strlen( buf ) < sizeof( buf ) );

	push	OFFSET FLAT:_buf
	call	_strlen
	add	esp, 4
	cmp	eax, 500				; 000001f4H
	jb	SHORT $L93227
	mov	eax, DWORD PTR ?__LINE__Var@?1??alert_box@@YAHPADPBDZZ@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@
	call	__assert
	add	esp, 12					; 0000000cH
$L93227:

; 89   :  OutputDebugString( CString(buf) );

	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93228[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T93228[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 90   :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 91   :  result = MessageBox( handle, CString(buf), CString(title), MB_OK|MB_ICONINFORMATION );

	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93229[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93230[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv146[ebp], eax
	mov	esi, esp
	push	64					; 00000040H
	mov	ecx, DWORD PTR tv144[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	lea	ecx, DWORD PTR $T93230[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T93229[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 92   :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 93   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?alert_box@@YAHPADPBDZZ$1:
	lea	ecx, DWORD PTR $T93229[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?alert_box@@YAHPADPBDZZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?alert_box@@YAHPADPBDZZ
	jmp	___CxxFrameHandler
text$x	ENDS
?alert_box@@YAHPADPBDZZ ENDP				; alert_box
PUBLIC	?__LINE__Var@?1??alert_box_ext@@YAHPADIPBDZZ@4JA ; `alert_box_ext'::`2'::__LINE__Var
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?alert_box_ext@@YAHPADIPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?alert_box_ext@@YAHPADIPBDZZ$1
__ehfuncinfo$?alert_box_ext@@YAHPADIPBDZZ DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?alert_box_ext@@YAHPADIPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box_ext@@YAHPADIPBDZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??alert_box_ext@@YAHPADIPBDZZ@4JA DD 060H ; `alert_box_ext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?alert_box_ext@@YAHPADIPBDZZ
_TEXT	SEGMENT
tv146 = -300						; size = 4
tv144 = -296						; size = 4
tv147 = -292						; size = 4
tv142 = -292						; size = 4
$T93247 = -284						; size = 4
$T93248 = -272						; size = 4
$T93249 = -260						; size = 4
_marker$ = -56						; size = 4
_a_title$ = -44						; size = 4
_handle$ = -32						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_title$ = 8						; size = 4
_options$ = 12						; size = 4
_fmt$ = 16						; size = 4
?alert_box_ext@@YAHPADIPBDZZ PROC NEAR			; alert_box_ext, COMDAT

; 96   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?alert_box_ext@@YAHPADIPBDZZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 97   :  int result;
; 98   :  HWND handle;
; 99   :  char *a_title = "A Message from " PROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@

; 100  :  va_list marker;
; 101  : 
; 102  :  if ( title == NULL || !strcmp(title, "") )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L92973
	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L92972
$L92973:

; 103  :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L92972:

; 104  :  va_start( marker, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _marker$[ebp], eax

; 105  :  vsprintf( buf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_buf
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 106  :  va_end( marker );

	mov	DWORD PTR _marker$[ebp], 0

; 107  :  assert( strlen( buf ) < sizeof( buf ) );

	push	OFFSET FLAT:_buf
	call	_strlen
	add	esp, 4
	cmp	eax, 500				; 000001f4H
	jb	SHORT $L93246
	mov	eax, DWORD PTR ?__LINE__Var@?1??alert_box_ext@@YAHPADIPBDZZ@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@
	call	__assert
	add	esp, 12					; 0000000cH
$L93246:

; 108  :  OutputDebugString( CString(buf) );

	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93247[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T93247[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 109  :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 110  :  result = MessageBox( handle, CString(buf), CString(title), options );

	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93248[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93249[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv146[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _options$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv144[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	lea	ecx, DWORD PTR $T93249[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T93248[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 111  :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 112  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?alert_box_ext@@YAHPADIPBDZZ$1:
	lea	ecx, DWORD PTR $T93248[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?alert_box_ext@@YAHPADIPBDZZ:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?alert_box_ext@@YAHPADIPBDZZ
	jmp	___CxxFrameHandler
text$x	ENDS
?alert_box_ext@@YAHPADIPBDZZ ENDP			; alert_box_ext
PUBLIC	?do_error@@YAXPBD@Z				; do_error
PUBLIC	??_C@_0BG@MLCHLGDE@ILLEGAL?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BI@JOMENAHE@UNDEFINED?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@ ; `string'
PUBLIC	??_C@_08MANCFDK@?$CFs?5?3?5?$CFs?5?$AA@		; `string'
EXTRN	__errno:NEAR
;	COMDAT ??_C@_0BG@MLCHLGDE@ILLEGAL?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
CONST	SEGMENT
??_C@_0BG@MLCHLGDE@ILLEGAL?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@ DB 'ILLEGAL ER'
	DB	'ROR #%d--%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JOMENAHE@UNDEFINED?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
CONST	SEGMENT
??_C@_0BI@JOMENAHE@UNDEFINED?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@ DB 'UNDEFINE'
	DB	'D ERROR #%d--%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MANCFDK@?$CFs?5?3?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_08MANCFDK@?$CFs?5?3?5?$CFs?5?$AA@ DB '%s : %s ', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?do_error@@YAXPBD@Z
_TEXT	SEGMENT
tv148 = -208						; size = 4
$T93261 = -200						; size = 4
_file$ = 8						; size = 4
?do_error@@YAXPBD@Z PROC NEAR				; do_error, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 118  :  static char spmsg[] = { "Call Technical Support With This Error!" };
; 119  : 
; 120  :  OutputDebugString( CString(file) );

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93261[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T93261[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 121  :  if ( errno == ENOMEM ) {

	call	__errno
	cmp	DWORD PTR [eax], 12			; 0000000cH
	jne	SHORT $L92990

; 122  :     do_mem_error( FALSE );

	push	0
	call	?do_mem_error@@YAXH@Z			; do_mem_error
	add	esp, 4

; 123  :     return;

	jmp	$L92986
$L92990:

; 124  :     }
; 125  :  else if ( errno == 0 )

	call	__errno
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L92991

; 126  :     return;

	jmp	$L92986
$L92991:

; 127  :  if ( errno > 40 )

	call	__errno
	cmp	DWORD PTR [eax], 40			; 00000028H
	jle	SHORT $L92993

; 128  :     alert_box_ext( ERROR2, MB_OK|MB_ICONSTOP, "ILLEGAL ERROR #%d--%s", errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBD@Z@4PADA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	push	OFFSET FLAT:??_C@_0BG@MLCHLGDE@ILLEGAL?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
	push	16					; 00000010H
	mov	ecx, DWORD PTR ?ERROR2@@3PADA		; ERROR2
	push	ecx
	call	?alert_box_ext@@YAHPADIPBDZZ		; alert_box_ext
	add	esp, 20					; 00000014H

; 129  :  else if ( errors[errno] == NULL )

	jmp	$L92995
$L92993:
	call	__errno
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR ?errors@@3PAPADA[eax*4], 0
	jne	SHORT $L92996

; 130  :     alert_box_ext( ERROR2, MB_OK|MB_ICONSTOP, "UNDEFINED ERROR #%d--%s", errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBD@Z@4PADA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	push	OFFSET FLAT:??_C@_0BI@JOMENAHE@UNDEFINED?5ERROR?5?$CD?$CFd?9?9?$CFs?$AA@
	push	16					; 00000010H
	mov	ecx, DWORD PTR ?ERROR2@@3PADA		; ERROR2
	push	ecx
	call	?alert_box_ext@@YAHPADIPBDZZ		; alert_box_ext
	add	esp, 20					; 00000014H

; 131  :  else if ( errors[errno] == stdmsg )

	jmp	SHORT $L92995
$L92996:
	call	__errno
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR ?errors@@3PAPADA[eax*4], OFFSET FLAT:_stdmsg
	jne	SHORT $L92999

; 132  :     alert_box_ext( ERROR2, MB_OK|MB_ICONSTOP, stdmsg, file, errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBD@Z@4PADA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	OFFSET FLAT:_stdmsg
	push	16					; 00000010H
	mov	edx, DWORD PTR ?ERROR2@@3PADA		; ERROR2
	push	edx
	call	?alert_box_ext@@YAHPADIPBDZZ		; alert_box_ext
	add	esp, 24					; 00000018H

; 133  :  else

	jmp	SHORT $L92995
$L92999:

; 134  :     alert_box_ext( ERROR2, MB_OK|MB_ICONSTOP, "%s : %s ", errors[errno], file );

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	__errno
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?errors@@3PAPADA[ecx*4]
	push	edx
	push	OFFSET FLAT:??_C@_08MANCFDK@?$CFs?5?3?5?$CFs?5?$AA@
	push	16					; 00000010H
	mov	eax, DWORD PTR ?ERROR2@@3PADA		; ERROR2
	push	eax
	call	?alert_box_ext@@YAHPADIPBDZZ		; alert_box_ext
	add	esp, 20					; 00000014H
$L92995:

; 135  :  errno = 0;

	call	__errno
	mov	DWORD PTR [eax], 0
$L92986:

; 136  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?do_error@@YAXPBD@Z ENDP				; do_error
_TEXT	ENDS
PUBLIC	?valert_box_ext@@YAHPBDI0PAD@Z			; valert_box_ext
PUBLIC	?__LINE__Var@?1??valert_box_ext@@YAHPBDI0PAD@Z@4JA ; `valert_box_ext'::`2'::__LINE__Var
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?valert_box_ext@@YAHPBDI0PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?valert_box_ext@@YAHPBDI0PAD@Z$1
__ehfuncinfo$?valert_box_ext@@YAHPBDI0PAD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?valert_box_ext@@YAHPBDI0PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?1??valert_box_ext@@YAHPBDI0PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??valert_box_ext@@YAHPBDI0PAD@Z@4JA DD 08bH ; `valert_box_ext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?valert_box_ext@@YAHPBDI0PAD@Z
_TEXT	SEGMENT
tv145 = -288						; size = 4
tv143 = -284						; size = 4
tv146 = -280						; size = 4
tv141 = -280						; size = 4
$T93266 = -272						; size = 4
$T93267 = -260						; size = 4
$T93268 = -248						; size = 4
_a_title$ = -44						; size = 4
_handle$ = -32						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_title$ = 8						; size = 4
_options$ = 12						; size = 4
_fmt$ = 16						; size = 4
_marker$ = 20						; size = 4
?valert_box_ext@@YAHPBDI0PAD@Z PROC NEAR		; valert_box_ext, COMDAT

; 139  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?valert_box_ext@@YAHPBDI0PAD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 140  :  int result;
; 141  :  HWND handle;
; 142  :  char *a_title = "A Message from " PROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_0CK@GNBGGJFK@A?5Message?5from?5TBT?5?$CIText?5Builder@

; 143  : 
; 144  :  if ( title == NULL || !strcmp(title, "") )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L93013
	push	OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L93012
$L93013:

; 145  :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L93012:

; 146  :  vsprintf( buf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_buf
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 147  :  assert( strlen( buf ) < sizeof( buf ) );

	push	OFFSET FLAT:_buf
	call	_strlen
	add	esp, 4
	cmp	eax, 500				; 000001f4H
	jb	SHORT $L93265
	mov	eax, DWORD PTR ?__LINE__Var@?1??valert_box_ext@@YAHPBDI0PAD@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0BO@EEPOPBOH@strlen?$CI?5buf?5?$CJ?5?$DM?5sizeof?$CI?5buf?5?$CJ?$AA@
	call	__assert
	add	esp, 12					; 0000000cH
$L93265:

; 148  :  OutputDebugString( CString(buf) );

	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93266[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T93266[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 149  :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 150  :  result = MessageBox( handle, CString(buf), CString(title), options );

	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93267[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET FLAT:_buf
	lea	ecx, DWORD PTR $T93268[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv145[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _options$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv143[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	lea	ecx, DWORD PTR $T93268[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T93267[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 151  :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 152  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?valert_box_ext@@YAHPBDI0PAD@Z$1:
	lea	ecx, DWORD PTR $T93267[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?valert_box_ext@@YAHPBDI0PAD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?valert_box_ext@@YAHPBDI0PAD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?valert_box_ext@@YAHPBDI0PAD@Z ENDP			; valert_box_ext
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	?alert_box@@YAHPAGPBGZZ				; alert_box
PUBLIC	??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@ ; `string'
PUBLIC	?__LINE__Var@?1??alert_box@@YAHPAGPBGZZ@4JA	; `alert_box'::`2'::__LINE__Var
PUBLIC	??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@ ; `string'
EXTRN	_vswprintf:NEAR
EXTRN	_wcscmp:NEAR
EXTRN	_wcslen:NEAR
_BSS	SEGMENT
_ubuf	DW	01f4H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@
CONST	SEGMENT
??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@ DB 'A'
	DB	00H, ' ', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm'
	DB	00H, ' ', 00H, 'T', 00H, 'B', 00H, 'T', 00H, ' ', 00H, '(', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, 'B', 00H, 'u'
	DB	00H, 'i', 00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 'k', 00H, 'i', 00H, 't'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box@@YAHPAGPBGZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??alert_box@@YAHPAGPBGZZ@4JA DD 09cH	; `alert_box'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@
CONST	SEGMENT
??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@ DB '_'
	DB	'tcslen( ubuf ) < sizeof( ubuf )', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?alert_box@@YAHPAGPBGZZ
_TEXT	SEGMENT
_marker$ = -44						; size = 4
_handle$ = -32						; size = 4
_a_title$ = -20						; size = 4
_result$ = -8						; size = 4
_title$ = 8						; size = 4
_fmt$ = 12						; size = 4
?alert_box@@YAHPAGPBGZZ PROC NEAR			; alert_box, COMDAT

; 156  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 157  :  int result;
; 158  :  TCHAR *a_title = L"A Message from " UPROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@

; 159  :  HWND handle;
; 160  :  va_list marker;
; 161  :   
; 162  :  if ( title == NULL || !_tcscmp(title, L"")  )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L93029
	push	OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L93028
$L93029:

; 163  :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L93028:

; 164  :  va_start( marker, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _marker$[ebp], eax

; 165  :  _vstprintf( ubuf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_ubuf
	call	_vswprintf
	add	esp, 12					; 0000000cH

; 166  :  va_end( marker );

	mov	DWORD PTR _marker$[ebp], 0

; 167  :  assert( _tcslen( ubuf ) < sizeof( ubuf ) );

	push	OFFSET FLAT:_ubuf
	call	_wcslen
	add	esp, 4
	cmp	eax, 1000				; 000003e8H
	jb	SHORT $L93280
	mov	eax, DWORD PTR ?__LINE__Var@?1??alert_box@@YAHPAGPBGZZ@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@
	call	__assert
	add	esp, 12					; 0000000cH
$L93280:

; 168  :  OutputDebugString( ubuf );

	mov	esi, esp
	push	OFFSET FLAT:_ubuf
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 169  :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 170  :  result = MessageBox( handle, ubuf, title, MB_OK|MB_ICONINFORMATION );

	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	push	OFFSET FLAT:_ubuf
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax

; 171  :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?alert_box@@YAHPAGPBGZZ ENDP				; alert_box
_TEXT	ENDS
PUBLIC	?alert_box_ext@@YAHPAGIPBGZZ			; alert_box_ext
PUBLIC	??_C@_1FG@KKKKPMPD@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?$CJ?$AA?5?$AAT?$AAB?$AAT?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?1??alert_box_ext@@YAHPAGIPBGZZ@4JA ; `alert_box_ext'::`2'::__LINE__Var
;	COMDAT ??_C@_1FG@KKKKPMPD@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?$CJ?$AA?5?$AAT?$AAB?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1FG@KKKKPMPD@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?$CJ?$AA?5?$AAT?$AAB?$AAT?$AA?5@ DB 'A'
	DB	00H, ' ', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm'
	DB	00H, ')', 00H, ' ', 00H, 'T', 00H, 'B', 00H, 'T', 00H, ' ', 00H
	DB	'(', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, 'B'
	DB	00H, 'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 'k', 00H, 'i'
	DB	00H, 't', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??alert_box_ext@@YAHPAGIPBGZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??alert_box_ext@@YAHPAGIPBGZZ@4JA DD 0afH ; `alert_box_ext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?alert_box_ext@@YAHPAGIPBGZZ
_TEXT	SEGMENT
_marker$ = -44						; size = 4
_a_title$ = -32						; size = 4
_handle$ = -20						; size = 4
_result$ = -8						; size = 4
_title$ = 8						; size = 4
_options$ = 12						; size = 4
_fmt$ = 16						; size = 4
?alert_box_ext@@YAHPAGIPBGZZ PROC NEAR			; alert_box_ext, COMDAT

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 176  :  int result;
; 177  :  HWND handle;
; 178  :  TCHAR *a_title = L"A Message from) " UPROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_1FG@KKKKPMPD@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?$CJ?$AA?5?$AAT?$AAB?$AAT?$AA?5@

; 179  :  va_list marker;
; 180  : 
; 181  :  if ( title == NULL || !_tcscmp(title, L"") )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L93049
	push	OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L93048
$L93049:

; 182  :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L93048:

; 183  :  va_start( marker, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _marker$[ebp], eax

; 184  :  _vstprintf( ubuf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_ubuf
	call	_vswprintf
	add	esp, 12					; 0000000cH

; 185  :  va_end( marker );

	mov	DWORD PTR _marker$[ebp], 0

; 186  :  assert( _tcslen( ubuf ) < sizeof( ubuf ) );

	push	OFFSET FLAT:_ubuf
	call	_wcslen
	add	esp, 4
	cmp	eax, 1000				; 000003e8H
	jb	SHORT $L93283
	mov	eax, DWORD PTR ?__LINE__Var@?1??alert_box_ext@@YAHPAGIPBGZZ@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@
	call	__assert
	add	esp, 12					; 0000000cH
$L93283:

; 187  :  OutputDebugString( ubuf );

	mov	esi, esp
	push	OFFSET FLAT:_ubuf
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 188  :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 189  :  result = MessageBox( handle,ubuf, title, options );

	mov	esi, esp
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _title$[ebp]
	push	ecx
	push	OFFSET FLAT:_ubuf
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax

; 190  :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 191  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?alert_box_ext@@YAHPAGIPBGZZ ENDP			; alert_box_ext
_TEXT	ENDS
PUBLIC	?do_error@@YAXPBG@Z				; do_error
PUBLIC	??_C@_1CO@LKJONCBG@?$AAI?$AAL?$AAL?$AAE?$AAG?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9?$AA?9?$AA?$CF@ ; `string'
PUBLIC	??_C@_1DC@GKNPFHLD@?$AAU?$AAN?$AAD?$AAE?$AAF?$AAI?$AAN?$AAE?$AAD?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9@ ; `string'
PUBLIC	??_C@_1BG@DOEHDMFL@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?3?$AA?5?$AA?$CF?$AAl?$AAs?$AA?5?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CO@LKJONCBG@?$AAI?$AAL?$AAL?$AAE?$AAG?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9?$AA?9?$AA?$CF@
CONST	SEGMENT
??_C@_1CO@LKJONCBG@?$AAI?$AAL?$AAL?$AAE?$AAG?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9?$AA?9?$AA?$CF@ DB 'I'
	DB	00H, 'L', 00H, 'L', 00H, 'E', 00H, 'G', 00H, 'A', 00H, 'L', 00H
	DB	' ', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' '
	DB	00H, '#', 00H, '%', 00H, 'd', 00H, '-', 00H, '-', 00H, '%', 00H
	DB	'l', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@GKNPFHLD@?$AAU?$AAN?$AAD?$AAE?$AAF?$AAI?$AAN?$AAE?$AAD?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9@
CONST	SEGMENT
??_C@_1DC@GKNPFHLD@?$AAU?$AAN?$AAD?$AAE?$AAF?$AAI?$AAN?$AAE?$AAD?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9@ DB 'U'
	DB	00H, 'N', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'I', 00H, 'N', 00H
	DB	'E', 00H, 'D', 00H, ' ', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O'
	DB	00H, 'R', 00H, ' ', 00H, '#', 00H, '%', 00H, 'd', 00H, '-', 00H
	DB	'-', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@DOEHDMFL@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?3?$AA?5?$AA?$CF?$AAl?$AAs?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@DOEHDMFL@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?3?$AA?5?$AA?$CF?$AAl?$AAs?$AA?5?$AA?$AA@ DB '%'
	DB	00H, 'l', 00H, 's', 00H, ' ', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'l', 00H, 's', 00H, ' ', 00H, 00H, 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?do_error@@YAXPBG@Z
_TEXT	SEGMENT
_file$ = 8						; size = 4
?do_error@@YAXPBG@Z PROC NEAR				; do_error, COMDAT

; 196  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 197  :  static TCHAR spmsg[] = { L"Call Technical Support With This Error!" };
; 198  : 
; 199  :  OutputDebugString( file );

	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 200  :  if ( errno == ENOMEM ) {

	call	__errno
	cmp	DWORD PTR [eax], 12			; 0000000cH
	jne	SHORT $L93062

; 201  :     do_mem_error( FALSE );

	push	0
	call	?do_mem_error@@YAXH@Z			; do_mem_error
	add	esp, 4

; 202  :     return;

	jmp	$L93059
$L93062:

; 203  :     }
; 204  :  else if ( errno == 0 )

	call	__errno
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L93063

; 205  :     return;

	jmp	$L93059
$L93063:

; 206  :  if ( errno > 40 )

	call	__errno
	cmp	DWORD PTR [eax], 40			; 00000028H
	jle	SHORT $L93065

; 207  :     alert_box_ext( UERROR2, MB_OK|MB_ICONSTOP, L"ILLEGAL ERROR #%d--%ls", errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBG@Z@4PAGA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	push	OFFSET FLAT:??_C@_1CO@LKJONCBG@?$AAI?$AAL?$AAL?$AAE?$AAG?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9?$AA?9?$AA?$CF@
	push	16					; 00000010H
	mov	ecx, DWORD PTR ?UERROR2@@3PAGA		; UERROR2
	push	ecx
	call	?alert_box_ext@@YAHPAGIPBGZZ		; alert_box_ext
	add	esp, 20					; 00000014H

; 208  :  else if ( uerrors[errno] == NULL )

	jmp	$L93067
$L93065:
	call	__errno
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR ?uerrors@@3PAPAGA[eax*4], 0
	jne	SHORT $L93068

; 209  :     alert_box_ext( UERROR2, MB_OK|MB_ICONSTOP, L"UNDEFINED ERROR #%d--%ls", errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBG@Z@4PAGA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	push	OFFSET FLAT:??_C@_1DC@GKNPFHLD@?$AAU?$AAN?$AAD?$AAE?$AAF?$AAI?$AAN?$AAE?$AAD?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CD?$AA?$CF?$AAd?$AA?9@
	push	16					; 00000010H
	mov	ecx, DWORD PTR ?UERROR2@@3PAGA		; UERROR2
	push	ecx
	call	?alert_box_ext@@YAHPAGIPBGZZ		; alert_box_ext
	add	esp, 20					; 00000014H

; 210  :  else if ( uerrors[errno] == ustdmsg )

	jmp	SHORT $L93067
$L93068:
	call	__errno
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR ?uerrors@@3PAPAGA[eax*4], OFFSET FLAT:_ustdmsg
	jne	SHORT $L93071

; 211  :     alert_box_ext( UERROR2, MB_OK|MB_ICONSTOP, ustdmsg, file, errno, spmsg );

	push	OFFSET FLAT:?spmsg@?1??do_error@@YAXPBG@Z@4PAGA
	call	__errno
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	push	OFFSET FLAT:_ustdmsg
	push	16					; 00000010H
	mov	edx, DWORD PTR ?UERROR2@@3PAGA		; UERROR2
	push	edx
	call	?alert_box_ext@@YAHPAGIPBGZZ		; alert_box_ext
	add	esp, 24					; 00000018H

; 212  :  else

	jmp	SHORT $L93067
$L93071:

; 213  :     alert_box_ext( UERROR2, MB_OK|MB_ICONSTOP, L"%ls : %ls ", uerrors[errno], file );

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	__errno
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?uerrors@@3PAPAGA[ecx*4]
	push	edx
	push	OFFSET FLAT:??_C@_1BG@DOEHDMFL@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?3?$AA?5?$AA?$CF?$AAl?$AAs?$AA?5?$AA?$AA@
	push	16					; 00000010H
	mov	eax, DWORD PTR ?UERROR2@@3PAGA		; UERROR2
	push	eax
	call	?alert_box_ext@@YAHPAGIPBGZZ		; alert_box_ext
	add	esp, 20					; 00000014H
$L93067:

; 214  :  errno = 0;

	call	__errno
	mov	DWORD PTR [eax], 0
$L93059:

; 215  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?do_error@@YAXPBG@Z ENDP				; do_error
_TEXT	ENDS
PUBLIC	?valert_box_ext@@YAHPBGI0PAD@Z			; valert_box_ext
PUBLIC	?__LINE__Var@?1??valert_box_ext@@YAHPBGI0PAD@Z@4JA ; `valert_box_ext'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??valert_box_ext@@YAHPBGI0PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??valert_box_ext@@YAHPBGI0PAD@Z@4JA DD 0daH ; `valert_box_ext'::`2'::__LINE__Var
; Function compile flags: /Odt /RTCcsu /ZI
_DATA	ENDS
;	COMDAT ?valert_box_ext@@YAHPBGI0PAD@Z
_TEXT	SEGMENT
_a_title$ = -32						; size = 4
_handle$ = -20						; size = 4
_result$ = -8						; size = 4
_title$ = 8						; size = 4
_options$ = 12						; size = 4
_fmt$ = 16						; size = 4
_marker$ = 20						; size = 4
?valert_box_ext@@YAHPBGI0PAD@Z PROC NEAR		; valert_box_ext, COMDAT

; 218  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 219  :  int result;
; 220  :  HWND handle;
; 221  :  TCHAR *a_title = L"A Message from " UPROGNAME;

	mov	DWORD PTR _a_title$[ebp], OFFSET FLAT:??_C@_1FE@OEEILDFB@?$AAA?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAT?$AAB?$AAT?$AA?5?$AA?$CI@

; 222  : 
; 223  :  if ( title == NULL || !_tcscmp(title, L"") )

	cmp	DWORD PTR _title$[ebp], 0
	je	SHORT $L93085
	push	OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L93084
$L93085:

; 224  :     title = a_title;

	mov	eax, DWORD PTR _a_title$[ebp]
	mov	DWORD PTR _title$[ebp], eax
$L93084:

; 225  :  _vstprintf( ubuf, fmt, marker );

	mov	eax, DWORD PTR _marker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	OFFSET FLAT:_ubuf
	call	_vswprintf
	add	esp, 12					; 0000000cH

; 226  :  assert( _tcslen( ubuf ) < sizeof( ubuf ) );

	push	OFFSET FLAT:_ubuf
	call	_wcslen
	add	esp, 4
	cmp	eax, 1000				; 000003e8H
	jb	SHORT $L93288
	mov	eax, DWORD PTR ?__LINE__Var@?1??valert_box_ext@@YAHPBGI0PAD@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET FLAT:??_C@_0CA@HJLKMOHF@c?3?2astrow32dev?2tbt32?2errors?4cpp?$AA@
	push	OFFSET FLAT:??_C@_0CB@HNNKKEJB@_tcslen?$CI?5ubuf?5?$CJ?5?$DM?5sizeof?$CI?5ubuf?5?$CJ@
	call	__assert
	add	esp, 12					; 0000000cH
$L93288:

; 227  :  OutputDebugString( ubuf );

	mov	esi, esp
	push	OFFSET FLAT:_ubuf
	call	DWORD PTR __imp__OutputDebugStringW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 228  :  handle = GetFocus();

	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _handle$[ebp], eax

; 229  :  result = MessageBox( handle, ubuf, title, options );

	mov	esi, esp
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _title$[ebp]
	push	ecx
	push	OFFSET FLAT:_ubuf
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax

; 230  :  return( result );

	mov	eax, DWORD PTR _result$[ebp]

; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?valert_box_ext@@YAHPBGI0PAD@Z ENDP			; valert_box_ext
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetVersionExW@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -296				; size = 4
_ver$ = -284						; size = 276
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 276		; 00000114H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L24087
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L24087

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L24088
$L24087:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24088:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	eax, DWORD PTR _pfnGetThreadACP$[ebp]
	push	eax
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93296
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L93296:
	DD	1
	DD	$L93295
$L93295:
	DD	-284					; fffffee4H
	DD	276					; 00000114H
	DD	$L93292
$L93292:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24075 = -52					; size = 4
_szACP$ = -40						; size = 7
_lcidThread$ = -24					; size = 4
_nACP$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L24074

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	eax, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$24075[ebp], eax
$L24077:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L24074

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	eax, DWORD PTR _nACP$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], eax

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$24075[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$24075[ebp], ecx

; 117  : 		}

	jmp	SHORT $L24077
$L24074:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L24079

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L24079:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93307
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L93307:
	DD	1
	DD	$L93306
$L93306:
	DD	-40					; ffffffd8H
	DD	7
	DD	$L93304
$L93304:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
PUBLIC	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
PUBLIC	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
PUBLIC	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
PUBLIC	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 850  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 		if( !CheckImplicitLoad( pszSrc ) )

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L92626

; 852  : 		{
; 853  : 			*this = pszSrc;

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
$L92626:

; 854  : 		}
; 855  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *, COMDAT
; _this$ = ecx

; 378  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 380  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<unsigned short,0>::Empty
PUBLIC	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
tv67 = -232						; size = 4
_pszBuffer$92707 = -32					; size = 4
_nDestLength$ = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=, COMDAT
; _this$ = ecx

; 989  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 990  : 		// nDestLength is in XCHARs
; 991  : 		int nDestLength = (pszSrc != NULL) ? StringTraits::GetBaseTypeLength( pszSrc ) : 0;

	cmp	DWORD PTR _pszSrc$[ebp], 0
	je	SHORT $L93325
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 4
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L93326
$L93325:
	mov	DWORD PTR tv67[ebp], 0
$L93326:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _nDestLength$[ebp], ecx

; 992  : 		if( nDestLength > 0 )

	cmp	DWORD PTR _nDestLength$[ebp], 0
	jle	SHORT $L92706

; 993  : 		{
; 994  : 			PXSTR pszBuffer = GetBuffer( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92707[ebp], eax

; 995  : 			StringTraits::ConvertToBaseType( pszBuffer, nDestLength, pszSrc );

	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nDestLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92707[ebp]
	push	edx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 996  : 			ReleaseBufferSetLength( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 997  : 		}
; 998  : 		else

	jmp	SHORT $L92708
$L92706:

; 999  : 		{
; 1000 : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<unsigned short,0>::Empty
$L92708:

; 1001 : 		}
; 1002 : 
; 1003 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1004 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
EXTRN	__imp__MultiByteToWideChar@24:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 653  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 654  : 		// Returns required buffer size in wchar_ts
; 655  : 		return ::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, -1, NULL, 0 )-1;

	mov	esi, esp
	push	0
	push	0
	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1

; 656  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 679  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 680  : 		// nLen is in wchar_ts
; 681  : 		::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength );

	mov	esi, esp
	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nSrcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 682  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ ; `string'
PUBLIC	??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ ; `string'
EXTRN	@_RTC_Check_4_to_2@4:NEAR
EXTRN	?atlTraceString@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceString
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT
??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ DB 'W'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	':', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '(', 00H, '%', 00H, 'u', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
$T93335 = -240						; size = 8
_nID$92726 = -32					; size = 4
_bRet$ = -17						; size = 1
_this$ = -8						; size = 4
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2230 : 		bool bRet = false;

	mov	BYTE PTR _bRet$[ebp], 0

; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	cmp	DWORD PTR _pv$[ebp], 0
	je	SHORT $L92725
	mov	eax, DWORD PTR _pv$[ebp]
	shr	eax, 16					; 00000010H
	test	eax, eax
	jne	SHORT $L92725

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

	mov	ecx, DWORD PTR _pv$[ebp]
	and	ecx, 65535				; 0000ffffH
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	mov	DWORD PTR _nID$92726[ebp], eax

; 2235 : 			if( !LoadString( nID ) )

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
	test	eax, eax
	jne	SHORT $L92730

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceString@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceString
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2237					; 000008bdH
	push	OFFSET FLAT:??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T93335[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
$L92730:

; 2238 : 			}
; 2239 : 			bRet = true;

	mov	BYTE PTR _bRet$[ebp], 1
$L92725:

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );

	mov	al, BYTE PTR _bRet$[ebp]

; 2243 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 168  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 169  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 170  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 171  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVU:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z PROC NEAR	; ATL::CTrace::TraceV, COMDAT

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 127  : 		AtlTraceVU(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVU
	add	esp, 28					; 0000001cH

; 128  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_hInst$ = -20						; size = 4
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1969 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
	add	esp, 4
	mov	DWORD PTR _hInst$[ebp], eax

; 1971 : 		if( hInst == NULL )

	cmp	DWORD PTR _hInst$[ebp], 0
	jne	SHORT $L92647

; 1972 : 		{
; 1973 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92645
$L92647:

; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
$L92645:

; 1977 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_pszBuffer$ = -44					; size = 4
_nLength$ = -32						; size = 4
_pImage$ = -20						; size = 4
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1981 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _pImage$[ebp], eax

; 1983 : 		if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L92718

; 1984 : 		{
; 1985 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92716
$L92718:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 8
	mov	DWORD PTR _nLength$[ebp], eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 1991 : 		ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 1992 : 
; 1993 : 		return( TRUE );

	mov	eax, 1
$L92716:

; 1994 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceW@12:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -8					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	ecx, DWORD PTR _id$[ebp]
	shr	ecx, 4
	add	ecx, 1
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindResourceW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L25769

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25761
$L25769:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L25761:

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -56						; size = 4
_hGlobal$ = -44						; size = 4
_nResourceSize$ = -32					; size = 4
_pImageEnd$ = -20					; size = 4
_pImage$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L25746

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L25740
$L25746:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	eax, DWORD PTR _hGlobal$[ebp]
	push	eax
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L25748

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25748:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	eax, DWORD PTR _pImage$[ebp]
	add	eax, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], eax

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L25751:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L25752
	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L25752

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pImage$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _pImage$[ebp], eax

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L25751
$L25752:

; 267  : 	if( pImage >= pImageEnd )

	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L25756

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25756:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $L25757

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25757:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L25740:

; 277  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 671  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 672  : 		(void)pszSrc;
; 673  : 		// Returns required buffer size in wchar_ts
; 674  : 		return nLength;

	mov	eax, DWORD PTR _nLength$[ebp]

; 675  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 686  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 687  : 		(void)nSrcLength;
; 688  : 		// nLen is in wchar_ts
; 689  : 		memcpy( pszDest, pszSrc, nDestLength*sizeof( wchar_t ) );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 690  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L93359
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93359
	int	3
$L93359:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
_TEXT	ENDS
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L93364
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93364
	int	3
$L93364:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L26116

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L26116:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92761

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
$L92761:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
_TEXT	ENDS
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:NEAR ; AfxFindStringResourceHandle
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   : 		return( AfxFindStringResourceHandle( nID ) );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::SetLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92796 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92793

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92790
$L92793:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92794

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92790
$L92794:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92796[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92796[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L92790:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::Empty
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L93382
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93382
	int	3
$L93382:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L93383
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93383
	int	3
$L93383:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92769
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92768
$L92769:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92768:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	WORD PTR [ecx+edx*2], 0
$L93381:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::SetLength
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ ; `string'
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T93386 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T93386[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L25398

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L25398:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L93385:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L93389
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93389
	int	3
$L93389:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92813 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92809

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92809:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92810

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92807
$L92810:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92807

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92813[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92813[ebp], 1024	; 00000400H
	jle	SHORT $L92814

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92813[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92815
$L92814:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92815:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92816

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92816:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Reallocate
$L92807:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92845

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92845:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L93400
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L93401
$L93400:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L93401:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L93399:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<unsigned short,0>::Fork
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L93405:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L93408
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93408
	int	3
$L93408:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92855

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92855:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L93407:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
_TEXT	ENDS
END
