; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\texttypeary.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BG@KIGBEGKI@?$CFd?5?$CFs?5?$CFs?5?$CFd?5?$CF74?$FL?$FO?6?$FN?$CFc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02BMJICGCB@rt?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07CAHHNGOI@?$CFs?9?9?$CFs?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?descrip@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dest@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?symtypes@CATextType@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?hasArray@CATextType@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?nElements@CATextTypeAry@@QAEAAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?array@CATextTypeAry@@QAEPAVCATextType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Read@CATextType@@QAEHPAU_iobuf@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CATextTypeCmp@@YAHPBX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CATextTypeAry@@QAEHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	??1CATextType@@QAE@XZ				; CATextType::~CATextType
PUBLIC	??_ECATextType@@QAEPAXI@Z			; CATextType::`vector deleting destructor'
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCcsu /ZI
rtc$TMZ	ENDS
;	COMDAT ??_ECATextType@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECATextType@@QAEPAXI@Z PROC NEAR			; CATextType::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93024
	push	OFFSET FLAT:??1CATextType@@QAE@XZ	; CATextType::~CATextType
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93025
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93025:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93023
$L93024:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93027
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93027:
	mov	eax, DWORD PTR _this$[ebp]
$L93023:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECATextType@@QAEPAXI@Z ENDP				; CATextType::`vector deleting destructor'
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ??1CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CATextType@@QAE@XZ PROC NEAR				; CATextType::~CATextType, COMDAT
; _this$ = ecx

; 16   :     ~CATextType() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CATextType@@QAE@XZ ENDP				; CATextType::~CATextType
_TEXT	ENDS
PUBLIC	?Read@CATextType@@QAEHPAU_iobuf@@@Z		; CATextType::Read
PUBLIC	??_C@_0BG@KIGBEGKI@?$CFd?5?$CFs?5?$CFs?5?$CFd?5?$CF74?$FL?$FO?6?$FN?$CFc?$AA@ ; `string'
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	_fscanf:NEAR
;	COMDAT ??_C@_0BG@KIGBEGKI@?$CFd?5?$CFs?5?$CFs?5?$CFd?5?$CF74?$FL?$FO?6?$FN?$CFc?$AA@
; File c:\astrow32dev\tbt32\texttypeary.cpp
CONST	SEGMENT
??_C@_0BG@KIGBEGKI@?$CFd?5?$CFs?5?$CFs?5?$CFd?5?$CF74?$FL?$FO?6?$FN?$CFc?$AA@ DB '%'
	DB	'd %s %s %d %74[^', 0aH, ']%c', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Read@CATextType@@QAEHPAU_iobuf@@@Z
_TEXT	SEGMENT
_dummy$ = -20						; size = 2
_this$ = -8						; size = 4
_stream$ = 8						; size = 4
?Read@CATextType@@QAEHPAU_iobuf@@@Z PROC NEAR		; CATextType::Read, COMDAT
; _this$ = ecx

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 11   : TCHAR dummy;
; 12   : 
; 13   :  return( fscanf( stream, "%d %s %s %d %74[^\n]%c", &_type, _dest, _symtypes, &_hasarray, _descrip, &dummy ) );

	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 156				; 0000009cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 129				; 00000081H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	push	OFFSET FLAT:??_C@_0BG@KIGBEGKI@?$CFd?5?$CFs?5?$CFs?5?$CFd?5?$CF74?$FL?$FO?6?$FN?$CFc?$AA@
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	_fscanf
	add	esp, 32					; 00000020H

; 14   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93273
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L93273:
	DD	1
	DD	$L93272
$L93272:
	DD	-20					; ffffffecH
	DD	2
	DD	$L93271
$L93271:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
?Read@CATextType@@QAEHPAU_iobuf@@@Z ENDP		; CATextType::Read
_TEXT	ENDS
PUBLIC	?type@CATextType@@QAEAAHXZ			; CATextType::type
PUBLIC	?dest@CATextType@@QAEPADXZ			; CATextType::dest
PUBLIC	?CATextTypeCmp@@YAHPBX0@Z			; CATextTypeCmp
EXTRN	_stricmp:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?CATextTypeCmp@@YAHPBX0@Z
_TEXT	SEGMENT
_ret$ = -32						; size = 4
_a2$ = -20						; size = 4
_a1$ = -8						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?CATextTypeCmp@@YAHPBX0@Z PROC NEAR			; CATextTypeCmp, COMDAT

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 18   :  CATextType *a1, *a2;
; 19   : 
; 20   :  a1 = (CATextType *)p1;

	mov	eax, DWORD PTR _p1$[ebp]
	mov	DWORD PTR _a1$[ebp], eax

; 21   :  a2 = (CATextType *)p2;

	mov	eax, DWORD PTR _p2$[ebp]
	mov	DWORD PTR _a2$[ebp], eax

; 22   :  int ret = stricmp( a1->dest(), a2->dest() );

	mov	ecx, DWORD PTR _a2$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	mov	ecx, DWORD PTR _a1$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	call	_stricmp
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax

; 23   :  if ( ret != 0 )

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $L93080

; 24   : 	 return ( ret );

	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $L93074
$L93080:

; 25   :  if ( a1->type() == a2->type() )

	mov	ecx, DWORD PTR _a1$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	esi, eax
	mov	ecx, DWORD PTR _a2$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L93081

; 26   : 	 return( 0 );

	xor	eax, eax
	jmp	SHORT $L93074
$L93081:

; 27   :  else if ( a1->type()<a2->type() )

	mov	ecx, DWORD PTR _a1$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	esi, eax
	mov	ecx, DWORD PTR _a2$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $L93083

; 28   : 	 return( -1 );

	or	eax, -1
	jmp	SHORT $L93074
$L93083:

; 29   :  else
; 30   :      return( 1 );

	mov	eax, 1
$L93074:

; 31   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CATextTypeCmp@@YAHPBX0@Z ENDP				; CATextTypeCmp
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
_TEXT	ENDS
;	COMDAT ?type@CATextType@@QAEAAHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?type@CATextType@@QAEAAHXZ PROC NEAR			; CATextType::type, COMDAT
; _this$ = ecx

; 17   :     int &type() { return _type; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?type@CATextType@@QAEAAHXZ ENDP				; CATextType::type
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?dest@CATextType@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dest@CATextType@@QAEPADXZ PROC NEAR			; CATextType::dest, COMDAT
; _this$ = ecx

; 19   :     char *dest() { return _dest; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 129				; 00000081H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dest@CATextType@@QAEPADXZ ENDP				; CATextType::dest
_TEXT	ENDS
PUBLIC	?Load@CATextTypeAry@@QAEHPAD@Z			; CATextTypeAry::Load
PUBLIC	??_C@_02BMJICGCB@rt?$AA@			; `string'
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	_fclose:NEAR
EXTRN	_fopen:NEAR
EXTRN	_strlen:NEAR
EXTRN	?do_error@@YAXPBD@Z:NEAR			; do_error
EXTRN	_qsort:NEAR
;	COMDAT ??_C@_02BMJICGCB@rt?$AA@
; File c:\astrow32dev\tbt32\texttypeary.cpp
CONST	SEGMENT
??_C@_02BMJICGCB@rt?$AA@ DB 'rt', 00H			; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Load@CATextTypeAry@@QAEHPAD@Z
_TEXT	SEGMENT
_i$ = -176						; size = 4
_stream$ = -164						; size = 4
_afp$ = -152						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_name$ = 8						; size = 4
?Load@CATextTypeAry@@QAEHPAD@Z PROC NEAR		; CATextTypeAry::Load, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 36   :  char buf[120];
; 37   :  CATextType *afp;
; 38   :  FILE *stream;
; 39   :  int i;
; 40   : 
; 41   :  if ( ( stream = fopen( name, "rt" ) ) == NULL ) {

	push	OFFSET FLAT:??_C@_02BMJICGCB@rt?$AA@
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _stream$[ebp], eax
	cmp	DWORD PTR _stream$[ebp], 0
	jne	SHORT $L93093

; 42   :     do_error( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?do_error@@YAXPBD@Z			; do_error
	add	esp, 4

; 43   :     return( 0 );

	xor	eax, eax
	jmp	$L93088
$L93093:

; 44   :     }
; 45   :  for ( afp = _array, i = 0; i < _nAlloc && !feof( stream ); i++, afp++ ) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _afp$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L93095
$L93096:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _afp$[ebp]
	add	ecx, 160				; 000000a0H
	mov	DWORD PTR _afp$[ebp], ecx
$L93095:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $L93097
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 16					; 00000010H
	jne	SHORT $L93097

; 46   : 	 if ( afp->Read( stream ) < 5 && ferror( stream ) && !feof(stream ) ) {

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _afp$[ebp]
	call	?Read@CATextType@@QAEHPAU_iobuf@@@Z	; CATextType::Read
	cmp	eax, 5
	jge	SHORT $L93098
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 32					; 00000020H
	je	SHORT $L93098
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 16					; 00000010H
	jne	SHORT $L93098

; 47   : 	do_error( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?do_error@@YAXPBD@Z			; do_error
	add	esp, 4

; 48   : 	break;

	jmp	SHORT $L93097
$L93098:

; 49   : 	}
; 50   :      }

	jmp	SHORT $L93096
$L93097:

; 51   :  if ( !strlen(afp->dest() ) )

	mov	ecx, DWORD PTR _afp$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $L93099

; 52   :     i--;

	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L93099:

; 53   :  _nElements = i;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax], ecx

; 54   :  fclose( stream );

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 55   :  qsort( _array, i, sizeof( CATextType ), CATextTypeCmp );

	push	OFFSET FLAT:?CATextTypeCmp@@YAHPBX0@Z	; CATextTypeCmp
	push	160					; 000000a0H
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_qsort
	add	esp, 16					; 00000010H

; 56   :  return( 1 );

	mov	eax, 1
$L93088:

; 57   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93288
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L93288:
	DD	1
	DD	$L93287
$L93287:
	DD	-140					; ffffff74H
	DD	120					; 00000078H
	DD	$L93284
$L93284:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?Load@CATextTypeAry@@QAEHPAD@Z ENDP			; CATextTypeAry::Load
_TEXT	ENDS
PUBLIC	?descrip@CATextType@@QAEPADXZ			; CATextType::descrip
PUBLIC	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ		; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
PUBLIC	?hasArray@CATextType@@QAEAAHXZ			; CATextType::hasArray
PUBLIC	?nElements@CATextTypeAry@@QAEAAIXZ		; CATextTypeAry::nElements
PUBLIC	?array@CATextTypeAry@@QAEPAVCATextType@@XZ	; CATextTypeAry::array
PUBLIC	?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z	; CATextTypeAry::toListBox
PUBLIC	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
PUBLIC	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
PUBLIC	??_C@_07CAHHNGOI@?$CFs?9?9?$CFs?5?$AA@		; `string'
EXTRN	__RTC_UninitUse:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?AddString@CListBox@@QAEHPBG@Z:NEAR		; CListBox::AddString
EXTRN	?ResetContent@CListBox@@QAEXXZ:NEAR		; CListBox::ResetContent
EXTRN	_sprintf:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z$0
__ehfuncinfo$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_07CAHHNGOI@?$CFs?9?9?$CFs?5?$AA@
CONST	SEGMENT
??_C@_07CAHHNGOI@?$CFs?9?9?$CFs?5?$AA@ DB '%s--%s ', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z
_TEXT	SEGMENT
tv132 = -420						; size = 4
tv133 = -416						; size = 4
$T93293 = -408						; size = 4
$T93299 = -393						; size = 1
_flag$ = -192						; size = 4
_ret$ = -180						; size = 4
_buf$ = -168						; size = 100
_max$ = -60						; size = 4
_i$ = -48						; size = 4
_pTT$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lb$ = 8						; size = 4
_which$ = 12						; size = 4
_ary$ = 16						; size = 4
?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z PROC NEAR ; CATextTypeAry::toListBox, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	BYTE PTR $T93299[ebp], 0

; 61   :  CATextType *pTT;
; 62   :  int i, max;
; 63   :  char buf[100];
; 64   :  int ret, flag = 0;

	mov	DWORD PTR _flag$[ebp], 0

; 65   : 
; 66   :  max = nElements();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?nElements@CATextTypeAry@@QAEAAIXZ	; CATextTypeAry::nElements
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _max$[ebp], eax

; 67   :  lb->ResetContent();

	mov	ecx, DWORD PTR _lb$[ebp]
	call	?ResetContent@CListBox@@QAEXXZ		; CListBox::ResetContent

; 68   :  for ( i = 0; i < max; i++ ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L93113
$L93114:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L93113:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jge	$L93115

; 69   :      pTT = &array()[i];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?array@CATextTypeAry@@QAEPAVCATextType@@XZ ; CATextTypeAry::array
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 160				; 000000a0H
	add	eax, ecx
	mov	DWORD PTR _pTT$[ebp], eax

; 70   : 	 if ( (pTT->type() == which || which == -1) && (!ary || (ary && ary==pTT->hasArray()))  ) {

	mov	ecx, DWORD PTR _pTT$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _which$[ebp]
	je	SHORT $L93117
	cmp	DWORD PTR _which$[ebp], -1
	jne	$L93116
$L93117:
	cmp	DWORD PTR _ary$[ebp], 0
	je	SHORT $L93118
	cmp	DWORD PTR _ary$[ebp], 0
	je	$L93116
	mov	ecx, DWORD PTR _pTT$[ebp]
	call	?hasArray@CATextType@@QAEAAHXZ		; CATextType::hasArray
	mov	ecx, DWORD PTR _ary$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $L93116
$L93118:

; 71   : 	sprintf( buf, "%s--%s ", pTT->dest(), pTT->descrip() );

	mov	ecx, DWORD PTR _pTT$[ebp]
	call	?descrip@CATextType@@QAEPADXZ		; CATextType::descrip
	push	eax
	mov	ecx, DWORD PTR _pTT$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	push	OFFSET FLAT:??_C@_07CAHHNGOI@?$CFs?9?9?$CFs?5?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 72   : 	lb->AddString( CString(buf) );

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93293[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv132[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv132[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?AddString@CListBox@@QAEHPBG@Z		; CListBox::AddString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T93293[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
$L93116:

; 73   : 	}
; 74   :      }

	jmp	$L93114
$L93115:

; 75   :  return( ret );

	cmp	BYTE PTR $T93299[ebp], 0
	jne	SHORT $L93300
	push	OFFSET FLAT:$L93301
	call	__RTC_UninitUse
	add	esp, 4
$L93300:
	mov	eax, DWORD PTR _ret$[ebp]

; 76   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93308
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L93308:
	DD	1
	DD	$L93307
$L93307:
	DD	-168					; ffffff58H
	DD	100					; 00000064H
	DD	$L93303
$L93303:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$L93301:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z$0:
	lea	ecx, DWORD PTR $T93293[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?toListBox@CATextTypeAry@@QAEHPAVCListBox@@HH@Z ENDP	; CATextTypeAry::toListBox
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
;	COMDAT ?descrip@CATextType@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?descrip@CATextType@@QAEPADXZ PROC NEAR			; CATextType::descrip, COMDAT
; _this$ = ecx

; 18   :     char *descrip() { return _descrip; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?descrip@CATextType@@QAEPADXZ ENDP			; CATextType::descrip
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?hasArray@CATextType@@QAEAAHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasArray@CATextType@@QAEAAHXZ PROC NEAR		; CATextType::hasArray, COMDAT
; _this$ = ecx

; 21   : 	int &hasArray() { return _hasarray; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasArray@CATextType@@QAEAAHXZ ENDP			; CATextType::hasArray
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?nElements@CATextTypeAry@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?nElements@CATextTypeAry@@QAEAAIXZ PROC NEAR		; CATextTypeAry::nElements, COMDAT
; _this$ = ecx

; 33   :     unsigned int &nElements() { return _nElements; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?nElements@CATextTypeAry@@QAEAAIXZ ENDP			; CATextTypeAry::nElements
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?array@CATextTypeAry@@QAEPAVCATextType@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?array@CATextTypeAry@@QAEPAVCATextType@@XZ PROC NEAR	; CATextTypeAry::array, COMDAT
; _this$ = ecx

; 36   :     CATextType *array() { return _array; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?array@CATextTypeAry@@QAEPAVCATextType@@XZ ENDP		; CATextTypeAry::array
_TEXT	ENDS
PUBLIC	??0CATextType@@QAE@XZ				; CATextType::CATextType
PUBLIC	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<unsigned short,0>::GetLength
PUBLIC	?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z ; CATextTypeAry::Find
EXTRN	_lfind:NEAR
EXTRN	_memset:NEAR
EXTRN	_bsearch:NEAR
EXTRN	_wcstombs:NEAR
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\texttypeary.cpp
xdata$x	SEGMENT
__unwindtable$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z$0
__ehfuncinfo$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z
_TEXT	SEGMENT
$T93324 = -408						; size = 4
_pFile$ = -204						; size = 4
_file$ = -192						; size = 160
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_name$ = 8						; size = 4
_tp$ = 12						; size = 4
_lin$ = 16						; size = 4
?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z PROC NEAR ; CATextTypeAry::Find, COMDAT
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 400				; 00000190H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 80   :  CATextType file;

	lea	ecx, DWORD PTR _file$[ebp]
	call	??0CATextType@@QAE@XZ			; CATextType::CATextType
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 81   :  CATextType *pFile;
; 82   : 
; 83   : #ifdef _UNICODE
; 84   :  memset(file.dest(),0,25);

	push	25					; 00000019H
	push	0
	lea	ecx, DWORD PTR _file$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 85   :  wcstombs(file.dest(), (const wchar_t *)name, name.GetLength());

	mov	ecx, DWORD PTR _name$[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	push	eax
	call	_wcstombs
	add	esp, 12					; 0000000cH

; 86   : #else
; 87   :  strcpy( file.dest(), name );
; 88   : #endif
; 89   :  file.type() = tp;

	lea	ecx, DWORD PTR _file$[ebp]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	ecx, DWORD PTR _tp$[ebp]
	mov	DWORD PTR [eax], ecx

; 90   :  if ( lin )

	cmp	DWORD PTR _lin$[ebp], 0
	je	SHORT $L93130

; 91   :     pFile = (CATextType *) lfind( (void *)&file, array(), &_nElements,
; 92   : 	    sizeof(CATextType), CATextTypeCmp );

	push	OFFSET FLAT:?CATextTypeCmp@@YAHPBX0@Z	; CATextTypeCmp
	push	160					; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?array@CATextTypeAry@@QAEPAVCATextType@@XZ ; CATextTypeAry::array
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_lfind
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pFile$[ebp], eax

; 93   :  else

	jmp	SHORT $L93134
$L93130:

; 94   :     pFile = (CATextType *) bsearch( (void *)&file, array(), _nElements,
; 95   : 	    sizeof(CATextType), CATextTypeCmp );

	push	OFFSET FLAT:?CATextTypeCmp@@YAHPBX0@Z	; CATextTypeCmp
	push	160					; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?array@CATextTypeAry@@QAEPAVCATextType@@XZ ; CATextTypeAry::array
	push	eax
	lea	edx, DWORD PTR _file$[ebp]
	push	edx
	call	_bsearch
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pFile$[ebp], eax
$L93134:

; 96   :  return( pFile );

	mov	eax, DWORD PTR _pFile$[ebp]
	mov	DWORD PTR $T93324[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CATextType@@QAE@XZ			; CATextType::~CATextType
	mov	eax, DWORD PTR $T93324[ebp]

; 97   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93332
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L93332:
	DD	1
	DD	$L93331
$L93331:
	DD	-192					; ffffff40H
	DD	160					; 000000a0H
	DD	$L93328
$L93328:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z$0:
	lea	ecx, DWORD PTR _file$[ebp]
	jmp	??1CATextType@@QAE@XZ			; CATextType::~CATextType
__ehhandler$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?Find@CATextTypeAry@@QAEPAVCATextType@@AAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@HH@Z ENDP ; CATextTypeAry::Find
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\astrow32dev\tbt32\texttypeary.hpp
;	COMDAT ??0CATextType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CATextType@@QAE@XZ PROC NEAR				; CATextType::CATextType, COMDAT
; _this$ = ecx

; 15   : 	CATextType() { memset(_descrip,0,75); memset(_symtypes,0,50); memset(_dest,0,25);}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	75					; 0000004bH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	50					; 00000032H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 79					; 0000004fH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 129				; 00000081H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CATextType@@QAE@XZ ENDP				; CATextType::CATextType
_TEXT	ENDS
PUBLIC	?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z ; CATextTypeAry::toTextTypeCombo
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
EXTRN	?AddString@CComboBox@@QAEHPBG@Z:NEAR		; CComboBox::AddString
EXTRN	?ResetContent@CComboBox@@QAEXXZ:NEAR		; CComboBox::ResetContent
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
;	COMDAT xdata$x
; File c:\astrow32dev\tbt32\texttypeary.cpp
xdata$x	SEGMENT
__unwindtable$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z$0
__ehfuncinfo$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z
_TEXT	SEGMENT
tv138 = -372						; size = 4
tv139 = -368						; size = 4
$T93341 = -360						; size = 4
_p$93152 = -156						; size = 4
_i$93146 = -144						; size = 4
_buf$ = -132						; size = 100
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pBox$ = 8						; size = 4
_tp$ = 12						; size = 4
_ary$ = 16						; size = 4
?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z PROC NEAR ; CATextTypeAry::toTextTypeCombo, COMDAT
; _this$ = ecx

; 101  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  :     pBox->ResetContent();

	mov	ecx, DWORD PTR _pBox$[ebp]
	call	?ResetContent@CComboBox@@QAEXXZ		; CComboBox::ResetContent

; 103  : 	char buf[100];
; 104  : 	for ( int i=0; i < _nElements; i++ ) {

	mov	DWORD PTR _i$93146[ebp], 0
	jmp	SHORT $L93147
$L93148:
	mov	eax, DWORD PTR _i$93146[ebp]
	add	eax, 1
	mov	DWORD PTR _i$93146[ebp], eax
$L93147:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$93146[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	$L93149

; 105  :       if ( _array[i].type() != tp || (ary && ary !=_array[i].hasArray()))

	mov	ecx, DWORD PTR _i$93146[ebp]
	imul	ecx, 160				; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+12]
	call	?type@CATextType@@QAEAAHXZ		; CATextType::type
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _tp$[ebp]
	jne	SHORT $L93151
	cmp	DWORD PTR _ary$[ebp], 0
	je	SHORT $L93150
	mov	ecx, DWORD PTR _i$93146[ebp]
	imul	ecx, 160				; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+12]
	call	?hasArray@CATextType@@QAEAAHXZ		; CATextType::hasArray
	mov	ecx, DWORD PTR _ary$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $L93150
$L93151:

; 106  : 		  continue;

	jmp	SHORT $L93148
$L93150:

; 107  : 	  char *p=_array[i].dest();

	mov	ecx, DWORD PTR _i$93146[ebp]
	imul	ecx, 160				; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+12]
	call	?dest@CATextType@@QAEPADXZ		; CATextType::dest
	mov	DWORD PTR _p$93152[ebp], eax

; 108  :       strcpy( buf, p );

	mov	eax, DWORD PTR _p$93152[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 109  : 	  strcat( buf, "-" );

	push	OFFSET FLAT:??_C@_01JOAMLHOP@?9?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 110  : 	  strcat( buf, _array[i].descrip() );

	mov	ecx, DWORD PTR _i$93146[ebp]
	imul	ecx, 160				; 000000a0H
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+12]
	call	?descrip@CATextType@@QAEPADXZ		; CATextType::descrip
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 111  : 	  pBox->AddString(CString(buf));

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T93341[ebp]
	call	??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv138[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	mov	ecx, DWORD PTR _pBox$[ebp]
	call	?AddString@CComboBox@@QAEHPBG@Z		; CComboBox::AddString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T93341[ebp]
	call	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >

; 112  :       }

	jmp	$L93148
$L93149:

; 113  :    return( 0 );

	xor	eax, eax

; 114  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93349
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L93349:
	DD	1
	DD	$L93348
$L93348:
	DD	-132					; ffffff7cH
	DD	100					; 00000064H
	DD	$L93345
$L93345:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z$0:
	lea	ecx, DWORD PTR $T93341[ebp]
	jmp	??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
__ehhandler$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z
	jmp	___CxxFrameHandler
text$x	ENDS
?toTextTypeCombo@CATextTypeAry@@QAEHPAVCComboBox@@HH@Z ENDP ; CATextTypeAry::toTextTypeCombo
PUBLIC	?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ; CATextTypeAry::toTextType
EXTRN	_strchr:NEAR
_BSS	SEGMENT
?buf@?1??toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z@4PADA DB 096H DUP (?) ; `CATextTypeAry::toTextType'::`2'::buf
; Function compile flags: /Odt /RTCcsu /ZI
_BSS	ENDS
;	COMDAT ?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_sel$ = 8						; size = 4
?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z PROC NEAR ; CATextTypeAry::toTextType, COMDAT
; _this$ = ecx

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  :  char *p;
; 119  :  static char buf[150];
; 120  : #ifdef _UNICODE
; 121  :  memset(buf,0,150);

	push	150					; 00000096H
	push	0
	push	OFFSET FLAT:?buf@?1??toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z@4PADA
	call	_memset
	add	esp, 12					; 0000000cH

; 122  :  wcstombs(buf,(const wchar_t *)sel,sel.GetLength());

	mov	ecx, DWORD PTR _sel$[ebp]
	call	?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<unsigned short,0>::GetLength
	push	eax
	mov	ecx, DWORD PTR _sel$[ebp]
	call	??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
	push	eax
	push	OFFSET FLAT:?buf@?1??toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z@4PADA
	call	_wcstombs
	add	esp, 12					; 0000000cH

; 123  : #else
; 124  :  strcpy( buf, sel );
; 125  : #endif
; 126  :  p = strchr(buf, '-' );

	push	45					; 0000002dH
	push	OFFSET FLAT:?buf@?1??toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z@4PADA
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax

; 127  :  if ( p != NULL )

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $L93163

; 128  :     *p = '\0';

	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 0
$L93163:

; 129  :  return buf;

	mov	eax, OFFSET FLAT:?buf@?1??toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z@4PADA

; 130  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toTextType@CATextTypeAry@@QAEPADAAV?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@@Z ENDP ; CATextTypeAry::toTextType
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExW@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -296				; size = 4
_ver$ = -284						; size = 276
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 276		; 00000114H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L24087
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L24087

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L24088
$L24087:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24088:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	eax, DWORD PTR _pfnGetThreadACP$[ebp]
	push	eax
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93361
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L93361:
	DD	1
	DD	$L93360
$L93360:
	DD	-284					; fffffee4H
	DD	276					; 00000114H
	DD	$L93358
$L93358:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24075 = -52					; size = 4
_szACP$ = -40						; size = 7
_lcidThread$ = -24					; size = 4
_nACP$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L24074

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	eax, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$24075[ebp], eax
$L24077:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L24074

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	eax, DWORD PTR _nACP$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], eax

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$24075[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$24075[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$24075[ebp], ecx

; 117  : 		}

	jmp	SHORT $L24077
$L24074:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L24079

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L24079:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L93370
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L93370:
	DD	1
	DD	$L93369
$L93369:
	DD	-40					; ffffffd8H
	DD	7
	DD	$L93367
$L93367:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
PUBLIC	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
PUBLIC	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
PUBLIC	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
PUBLIC	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z DD 019930520H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCcsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 850  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 		if( !CheckImplicitLoad( pszSrc ) )

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L92626

; 852  : 		{
; 853  : 			*this = pszSrc;

	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
$L92626:

; 854  : 		}
; 855  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
__ehhandler$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	eax, OFFSET FLAT:__ehfuncinfo$??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >, COMDAT
; _this$ = ecx

; 962  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 963  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::~CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *, COMDAT
; _this$ = ecx

; 378  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 380  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CSimpleStringT@G$0A@@ATL@@QBEPBGXZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::operator unsigned short const *
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::GetLength, COMDAT
; _this$ = ecx

; 500  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	eax, DWORD PTR [eax+4]

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@?$CSimpleStringT@G$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetLength
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<unsigned short,0>::Empty
PUBLIC	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
tv67 = -232						; size = 4
_pszBuffer$92707 = -32					; size = 4
_nDestLength$ = -20					; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=, COMDAT
; _this$ = ecx

; 989  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 990  : 		// nDestLength is in XCHARs
; 991  : 		int nDestLength = (pszSrc != NULL) ? StringTraits::GetBaseTypeLength( pszSrc ) : 0;

	cmp	DWORD PTR _pszSrc$[ebp], 0
	je	SHORT $L93390
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 4
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L93391
$L93390:
	mov	DWORD PTR tv67[ebp], 0
$L93391:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _nDestLength$[ebp], ecx

; 992  : 		if( nDestLength > 0 )

	cmp	DWORD PTR _nDestLength$[ebp], 0
	jle	SHORT $L92706

; 993  : 		{
; 994  : 			PXSTR pszBuffer = GetBuffer( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$92707[ebp], eax

; 995  : 			StringTraits::ConvertToBaseType( pszBuffer, nDestLength, pszSrc );

	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nDestLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$92707[ebp]
	push	edx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 996  : 			ReleaseBufferSetLength( nDestLength );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 997  : 		}
; 998  : 		else

	jmp	SHORT $L92708
$L92706:

; 999  : 		{
; 1000 : 			Empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<unsigned short,0>::Empty
$L92708:

; 1001 : 		}
; 1002 : 
; 1003 : 		return( *this );

	mov	eax, DWORD PTR _this$[ebp]

; 1004 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::operator=
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
EXTRN	__imp__MultiByteToWideChar@24:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 653  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 654  : 		// Returns required buffer size in wchar_ts
; 655  : 		return ::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, -1, NULL, 0 )-1;

	mov	esi, esp
	push	0
	push	0
	push	-1
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1

; 656  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBD@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 679  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 680  : 		// nLen is in wchar_ts
; 681  : 		::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength );

	mov	esi, esp
	mov	eax, DWORD PTR _nDestLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nSrcLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 682  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBDH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ ; `string'
PUBLIC	??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ ; `string'
EXTRN	@_RTC_Check_4_to_2@4:NEAR
EXTRN	?atlTraceString@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceString
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
CONST	SEGMENT
??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@ DB 'W'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	':', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '(', 00H, '%', 00H, 'u', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
$T93400 = -240						; size = 8
_nID$92726 = -32					; size = 4
_bRet$ = -17						; size = 1
_this$ = -8						; size = 4
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2230 : 		bool bRet = false;

	mov	BYTE PTR _bRet$[ebp], 0

; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	cmp	DWORD PTR _pv$[ebp], 0
	je	SHORT $L92725
	mov	eax, DWORD PTR _pv$[ebp]
	shr	eax, 16					; 00000010H
	test	eax, eax
	jne	SHORT $L92725

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

	mov	ecx, DWORD PTR _pv$[ebp]
	and	ecx, 65535				; 0000ffffH
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	mov	DWORD PTR _nID$92726[ebp], eax

; 2235 : 			if( !LoadString( nID ) )

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
	test	eax, eax
	jne	SHORT $L92730

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );

	mov	eax, DWORD PTR _nID$92726[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceString@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceString
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2237					; 000008bdH
	push	OFFSET FLAT:??_C@_0FB@BCKJDECD@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T93400[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
$L92730:

; 2238 : 			}
; 2239 : 			bRet = true;

	mov	BYTE PTR _bRet$[ebp], 1
$L92725:

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );

	mov	al, BYTE PTR _bRet$[ebp]

; 2243 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckImplicitLoad@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::CheckImplicitLoad
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 168  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 169  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 170  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 171  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVU:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z PROC NEAR	; ATL::CTrace::TraceV, COMDAT

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 127  : 		AtlTraceVU(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVU
	add	esp, 28					; 0000001cH

; 128  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKIPBGPAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_hInst$ = -20						; size = 4
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1969 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
	add	esp, 4
	mov	DWORD PTR _hInst$[ebp], eax

; 1971 : 		if( hInst == NULL )

	cmp	DWORD PTR _hInst$[ebp], 0
	jne	SHORT $L92647

; 1972 : 		{
; 1973 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92645
$L92647:

; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
$L92645:

; 1977 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_pszBuffer$ = -44					; size = 4
_nLength$ = -32						; size = 4
_pImage$ = -20						; size = 4
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW, COMDAT
; _this$ = ecx

; 1981 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _pImage$[ebp], eax

; 1983 : 		if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L92718

; 1984 : 		{
; 1985 : 			return( FALSE );

	xor	eax, eax
	jmp	SHORT $L92716
$L92718:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
	add	esp, 8
	mov	DWORD PTR _nLength$[ebp], eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
	mov	DWORD PTR _pszBuffer$[ebp], eax

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	call	?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
	add	esp, 16					; 00000010H

; 1991 : 		ReleaseBufferSetLength( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength

; 1992 : 
; 1993 : 		return( TRUE );

	mov	eax, 1
$L92716:

; 1994 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?LoadStringW@?$CStringT@GV?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<unsigned short,StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceW@12:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -8					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	ecx, DWORD PTR _id$[ebp]
	shr	ecx, 4
	add	ecx, 1
	call	@_RTC_Check_4_to_2@4
	movzx	eax, ax
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindResourceW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L25769

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25761
$L25769:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L25761:

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -56						; size = 4
_hGlobal$ = -44						; size = 4
_nResourceSize$ = -32					; size = 4
_pImageEnd$ = -20					; size = 4
_pImage$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L25746

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L25740
$L25746:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	eax, DWORD PTR _hGlobal$[ebp]
	push	eax
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L25748

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25748:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	eax, DWORD PTR _pImage$[ebp]
	add	eax, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], eax

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L25751:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L25752
	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L25752

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pImage$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _pImage$[ebp], eax

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L25751
$L25752:

; 267  : 	if( pImage >= pImageEnd )

	mov	eax, DWORD PTR _pImage$[ebp]
	cmp	eax, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L25756

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25756:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $L25757

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L25740
$L25757:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L25740:

; 277  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength, COMDAT

; 671  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 672  : 		(void)pszSrc;
; 673  : 		// Returns required buffer size in wchar_ts
; 674  : 		return nLength;

	mov	eax, DWORD PTR _nLength$[ebp]

; 675  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@G@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<unsigned short>::GetBaseTypeLength
_TEXT	ENDS
EXTRN	_memcpy:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType, COMDAT

; 686  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 687  : 		(void)nSrcLength;
; 688  : 		// nLen is in wchar_ts
; 689  : 		memcpy( pszDest, pszSrc, nDestLength*sizeof( wchar_t ) );

	mov	eax, DWORD PTR _nDestLength$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 690  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@G@ATL@@SAXPAGHPBGH@Z ENDP ; ATL::ChTraitsCRT<unsigned short>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
EXTRN	__CrtDbgReport:NEAR
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@ DB 'pStringMgr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lsimpstr.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );

	cmp	DWORD PTR _pStringMgr$[ebp], 0
	jne	SHORT $L93424
	push	OFFSET FLAT:??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
	push	0
	push	212					; 000000d4H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93424
	int	3
$L93424:

; 213  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pData$[ebp], eax

; 214  : 		Attach( pData );

	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach

; 215  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CSimpleStringT@G$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CSimpleStringT<unsigned short,0>
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 		CStringData* pData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pData$[ebp], eax

; 264  : 		pData->Release();

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 265  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleStringT@G$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::~CSimpleStringT<unsigned short,0>
_TEXT	ENDS
PUBLIC	??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@ DB 'nRefs != 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		ATLASSERT( nRefs != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L93429
	push	OFFSET FLAT:??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
	push	0
	push	93					; 0000005dH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93429
	int	3
$L93429:

; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $L26116

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L26116:

; 98   : 		}
; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	eax, DWORD PTR _nMinBufferLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite

; 491  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuffer@?$CSimpleStringT@G$0A@@ATL@@QAEPAGH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::GetBuffer
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::GetData, COMDAT
; _this$ = ecx

; 730  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H

; 732  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _nShared$[ebp], ecx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nTooShort$[ebp], ecx

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	mov	eax, DWORD PTR _nShared$[ebp]
	or	eax, DWORD PTR _nTooShort$[ebp]
	jge	SHORT $L92761

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
$L92761:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 744  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite@?$CSimpleStringT@G$0A@@ATL@@AAEPAGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite
_TEXT	ENDS
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:NEAR ; AfxFindStringResourceHandle
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   : 		return( AfxFindStringResourceHandle( nID ) );

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindStringResourceInstance@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::FindStringResourceInstance
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 51   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultManager@?$StrTraitMFC@GV?$ChTraitsCRT@G@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<unsigned short,ATL::ChTraitsCRT<unsigned short> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::SetLength
; Function compile flags: /Odt /RTCcsu /ZI
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$92796 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 424  : 		if( pOldData->nDataLength == 0 )

	mov	eax, DWORD PTR _pOldData$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L92793

; 425  : 		{
; 426  : 			return;

	jmp	SHORT $L92790
$L92793:

; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsLocked@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsLocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92794

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 433  : 		}
; 434  : 		else

	jmp	SHORT $L92790
$L92794:

; 435  : 		{
; 436  : 			pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR _pStringMgr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$92796[ebp], eax

; 438  : 			Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$92796[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L92790:

; 439  : 		}
; 440  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@?$CSimpleStringT@G$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<unsigned short,0>::Empty
_TEXT	ENDS
EXTRN	@_RTC_Check_4_to_1@4:NEAR
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		return nRefs < 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setl	cl
	call	@_RTC_Check_4_to_1@4

; 77   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ ; `string'
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@ DB 'nLength >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT
??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@ DB 'n'
	DB	'Length <= GetData()->nAllocLength', 00H	; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::SetLength, COMDAT
; _this$ = ecx

; 789  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 790  : 		ATLASSERT( nLength >= 0 );

	cmp	DWORD PTR _nLength$[ebp], 0
	jge	SHORT $L93447
	push	OFFSET FLAT:??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
	push	0
	push	790					; 00000316H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93447
	int	3
$L93447:

; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L93448
	push	OFFSET FLAT:??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93448
	int	3
$L93448:

; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR _nLength$[ebp], 0
	jl	SHORT $L92769
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jle	SHORT $L92768
$L92769:

; 794  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L92768:

; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	ecx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 797  : 		m_pszData[nLength] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	WORD PTR [ecx+edx*2], 0
$L93446:

; 798  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::SetLength
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrow'::`2'::__LINE__Var
PUBLIC	??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ ; `string'
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA DD 03dH	; `ATL::AtlThrow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio .net 2003\vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T93451 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AtlThrow@ATL@@YGXJ@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET FLAT:??_C@_0FC@IPKABFFL@c?3?2program?5files?2microsoft?5visua@
	lea	ecx, DWORD PTR $T93451[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBGZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $L25398

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

	call	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$L25398:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	call	?AfxThrowOleException@@YGXJ@Z		; AfxThrowOleException
$L93450:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@ DB 'nNewLength >= 0', 00H ; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 546  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );

	cmp	DWORD PTR _nNewLength$[ebp], 0
	jge	SHORT $L93454
	push	OFFSET FLAT:??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
	push	0
	push	547					; 00000223H
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93454
	int	3
$L93454:

; 548  : 		SetLength( nNewLength );

	mov	eax, DWORD PTR _nNewLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetLength@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::SetLength

; 549  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBufferSetLength@?$CSimpleStringT@G$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Attach, COMDAT
; _this$ = ecx

; 711  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _pData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 713  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::Attach
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (this+1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
PUBLIC	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Fork
PUBLIC	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$92813 = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 746  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 747  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 748  : 		if( pOldData->nDataLength > nLength )

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jle	SHORT $L92809

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nLength$[ebp], ecx
$L92809:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?IsShared@CStringData@ATL@@QBE_NXZ	; ATL::CStringData::IsShared
	movzx	eax, al
	test	eax, eax
	je	SHORT $L92810

; 753  : 		{
; 754  : 			Fork( nLength );

	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Fork

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

	jmp	SHORT $L92807
$L92810:
	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92807

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nNewLength$92813[ebp], ecx

; 760  : 			if( nNewLength > 1024 )

	cmp	DWORD PTR _nNewLength$92813[ebp], 1024	; 00000400H
	jle	SHORT $L92814

; 761  : 			{
; 762  : 				nNewLength += 1024;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _nNewLength$92813[ebp], eax

; 763  : 			}
; 764  : 			else

	jmp	SHORT $L92815
$L92814:

; 765  : 			{
; 766  : 				nNewLength *= 2;

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	shl	eax, 1
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92815:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L92816

; 769  : 			{
; 770  : 				nNewLength = nLength;

	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nNewLength$92813[ebp], eax
$L92816:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

	mov	eax, DWORD PTR _nNewLength$92813[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<unsigned short,0>::Reallocate
$L92807:

; 773  : 		}
; 774  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrepareWrite2@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::PrepareWrite2
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return( nRefs > 1 ); 

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 1
	setg	cl
	call	@_RTC_Check_4_to_1@4

; 81   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
; Function compile flags: /Odt /RTCcsu /ZI
;	COMDAT ?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<unsigned short,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 717  : 		int nOldLength = pOldData->nDataLength;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nOldLength$[ebp], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOldData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 719  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92845

; 720  : 		{
; 721  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92845:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

	mov	eax, DWORD PTR _nOldLength$[ebp]
	cmp	eax, DWORD PTR _nLength$[ebp]
	jge	SHORT $L93465
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L93466
$L93465:
	mov	edx, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$L93466:
	mov	eax, DWORD PTR tv82[ebp]
	add	eax, 1
	mov	DWORD PTR _nCharsToCopy$[ebp], eax

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

	mov	eax, DWORD PTR _nCharsToCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	call	?data@CStringData@ATL@@QAEPAXXZ		; ATL::CStringData::data
	push	eax
	call	?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
	add	esp, 12					; 0000000cH

; 725  : 		pNewData->nDataLength = nOldLength;

	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR _nOldLength$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 726  : 		pOldData->Release();

	mov	ecx, DWORD PTR _pOldData$[ebp]
	call	?Release@CStringData@ATL@@QAEXXZ	; ATL::CStringData::Release

; 727  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L93464:

; 728  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fork@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<unsigned short,0>::Fork
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::CopyChars, COMDAT

; 652  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

	mov	eax, DWORD PTR _nChars$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pchSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CopyChars@?$CSimpleStringT@G$0A@@ATL@@SAXPAGPBGH@Z ENDP ; ATL::CSimpleStringT<unsigned short,0>::CopyChars
; Function compile flags: /Odt /RTCcsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException, COMDAT

; 704  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 705  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L93470:

; 706  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ ; `string'
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT
??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@ DB 'pOldDat'
	DB	'a->nAllocLength < nLength', 00H		; `string'
; Function compile flags: /Odt /RTCcsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<unsigned short,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		CStringData* pOldData = GetData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@?$CSimpleStringT@G$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<unsigned short,0>::GetData
	mov	DWORD PTR _pOldData$[ebp], eax

; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _nLength$[ebp]
	jl	SHORT $L93473
	push	OFFSET FLAT:??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
	push	0
	push	778					; 0000030aH
	push	OFFSET FLAT:??_C@_0FD@JDCNPMMG@c?3?2program?5files?2microsoft?5visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93473
	int	3
$L93473:

; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	eax, DWORD PTR _pOldData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStringMgr$[ebp], ecx

; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOldData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStringMgr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNewData$[ebp], eax

; 781  : 		if( pNewData == NULL )

	cmp	DWORD PTR _pNewData$[ebp], 0
	jne	SHORT $L92855

; 782  : 		{
; 783  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@G$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<unsigned short,0>::ThrowMemoryException
$L92855:

; 784  : 		}
; 785  : 		Attach( pNewData );

	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attach@?$CSimpleStringT@G$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<unsigned short,0>::Attach
$L93472:

; 786  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reallocate@?$CSimpleStringT@G$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<unsigned short,0>::Reallocate
_TEXT	ENDS
END
